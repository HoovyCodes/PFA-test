@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gBikeCyclingChallenge
	.section ewram_data,"aw"
	.type	 gBikeCyclingChallenge,object
	.size	 gBikeCyclingChallenge,1
gBikeCyclingChallenge:
	.byte	0x0
	.globl	gBikeCollisions
	.type	 gBikeCollisions,object
	.size	 gBikeCollisions,1
gBikeCollisions:
	.byte	0x0
	.align	2, 0
	.type	 sBikeCyclingTimer,object
	.size	 sBikeCyclingTimer,4
sBikeCyclingTimer:
	.word	0x0
	.type	 sSlidingDoorNextFrameCounter,object
	.size	 sSlidingDoorNextFrameCounter,1
sSlidingDoorNextFrameCounter:
	.byte	0x0
	.type	 sSlidingDoorFrame,object
	.size	 sSlidingDoorFrame,1
sSlidingDoorFrame:
	.byte	0x0
	.type	 sTutorMoveAndElevatorWindowId,object
	.size	 sTutorMoveAndElevatorWindowId,1
sTutorMoveAndElevatorWindowId:
	.byte	0x0
	.align	1, 0
	.type	 sLilycoveDeptStore_NeverRead,object
	.size	 sLilycoveDeptStore_NeverRead,2
sLilycoveDeptStore_NeverRead:
	.short	0x0
	.align	1, 0
	.type	 sLilycoveDeptStore_DefaultFloorChoice,object
	.size	 sLilycoveDeptStore_DefaultFloorChoice,2
sLilycoveDeptStore_DefaultFloorChoice:
	.short	0x0
	.align	2, 0
	.type	 sScrollableMultichoice_ListMenuItem,object
	.size	 sScrollableMultichoice_ListMenuItem,4
sScrollableMultichoice_ListMenuItem:
	.word	0x0
	.align	1, 0
	.type	 sScrollableMultichoice_ScrollOffset,object
	.size	 sScrollableMultichoice_ScrollOffset,2
sScrollableMultichoice_ScrollOffset:
	.short	0x0
	.align	1, 0
	.type	 sFrontierExchangeCorner_NeverRead,object
	.size	 sFrontierExchangeCorner_NeverRead,2
sFrontierExchangeCorner_NeverRead:
	.short	0x0
	.type	 sScrollableMultichoice_ItemSpriteId,object
	.size	 sScrollableMultichoice_ItemSpriteId,1
sScrollableMultichoice_ItemSpriteId:
	.byte	0x0
	.type	 sBattlePointsWindowId,object
	.size	 sBattlePointsWindowId,1
sBattlePointsWindowId:
	.byte	0x0
	.type	 sFrontierExchangeCorner_ItemIconWindowId,object
	.size	 sFrontierExchangeCorner_ItemIconWindowId,1
sFrontierExchangeCorner_ItemIconWindowId:
	.byte	0x0
	.type	 sPCBoxToSendMon,object
	.size	 sPCBoxToSendMon,1
sPCBoxToSendMon:
	.byte	0x0
	.align	2, 0
	.type	 sBattleTowerMultiBattleTypeFlags,object
	.size	 sBattleTowerMultiBattleTypeFlags,4
sBattleTowerMultiBattleTypeFlags:
	.word	0x0
.text
	.align	2, 0
	.globl	Special_ShowDiploma
	.type	 Special_ShowDiploma,function
	.thumb_func
Special_ShowDiploma:
	push	{lr}
	ldr	r0, .L3
	bl	SetMainCallback2
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	CB2_ShowDiploma
.Lfe1:
	.size	 Special_ShowDiploma,.Lfe1-Special_ShowDiploma
	.align	2, 0
	.globl	Special_ViewWallClock
	.type	 Special_ViewWallClock,function
	.thumb_func
Special_ViewWallClock:
	push	{lr}
	ldr	r0, .L6
	ldr	r1, .L6+0x4
	str	r1, [r0, #0x8]
	ldr	r0, .L6+0x8
	bl	SetMainCallback2
	bl	ScriptContext2_Enable
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gMain
	.word	CB2_ReturnToField
	.word	CB2_ViewWallClock
.Lfe2:
	.size	 Special_ViewWallClock,.Lfe2-Special_ViewWallClock
	.align	2, 0
	.globl	ResetCyclingRoadChallengeData
	.type	 ResetCyclingRoadChallengeData,function
	.thumb_func
ResetCyclingRoadChallengeData:
	ldr	r0, .L9
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L9+0x4
	strb	r1, [r0]
	ldr	r1, .L9+0x8
	mov	r0, #0x0
	str	r0, [r1]
	bx	lr
.L10:
	.align	2, 0
.L9:
	.word	gBikeCyclingChallenge
	.word	gBikeCollisions
	.word	sBikeCyclingTimer
.Lfe3:
	.size	 ResetCyclingRoadChallengeData,.Lfe3-ResetCyclingRoadChallengeData
	.align	2, 0
	.globl	Special_BeginCyclingRoadChallenge
	.type	 Special_BeginCyclingRoadChallenge,function
	.thumb_func
Special_BeginCyclingRoadChallenge:
	ldr	r1, .L12
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r1, .L12+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L12+0x8
	ldr	r0, .L12+0xc
	ldr	r0, [r0, #0x20]
	str	r0, [r1]
	bx	lr
.L13:
	.align	2, 0
.L12:
	.word	gBikeCyclingChallenge
	.word	gBikeCollisions
	.word	sBikeCyclingTimer
	.word	gMain
.Lfe4:
	.size	 Special_BeginCyclingRoadChallenge,.Lfe4-Special_BeginCyclingRoadChallenge
	.align	2, 0
	.globl	GetPlayerAvatarBike
	.type	 GetPlayerAvatarBike,function
	.thumb_func
GetPlayerAvatarBike:
	push	{lr}
	mov	r0, #0x4
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L15	@cond_branch
	mov	r0, #0x1
	b	.L17
.L15:
	mov	r0, #0x2
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L16	@cond_branch
	mov	r0, #0x0
	b	.L17
.L16:
	mov	r0, #0x2
.L17:
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 GetPlayerAvatarBike,.Lfe5-GetPlayerAvatarBike
	.align	2, 0
	.type	 DetermineCyclingRoadResults,function
	.thumb_func
DetermineCyclingRoadResults:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	cmp	r6, #0x63
	bhi	.L19	@cond_branch
	ldr	r4, .L42
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L42+0x4
	add	r0, r4, #0
	bl	StringAppend
	b	.L20
.L43:
	.align	2, 0
.L42:
	.word	gStringVar1
	.word	gText_SpaceTimes
.L19:
	ldr	r0, .L44
	ldr	r1, .L44+0x4
	bl	StringCopy
.L20:
	ldr	r0, .L44+0x8
	cmp	r7, r0
	bhi	.L21	@cond_branch
	ldr	r4, .L44+0xc
	add	r0, r7, #0
	mov	r1, #0x3c
	bl	__udivsi3
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, #0xad
	strb	r0, [r4, #0x2]
	add	r5, r4, #0x3
	add	r0, r7, #0
	mov	r1, #0x3c
	bl	__umodsi3
	mov	r1, #0x64
	mul	r0, r0, r1
	mov	r1, #0x3c
	bl	__udivsi3
	add	r1, r0, #0
	add	r0, r5, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L44+0x10
	add	r0, r4, #0
	bl	StringAppend
	b	.L22
.L45:
	.align	2, 0
.L44:
	.word	gStringVar1
	.word	gText_99TimesPlus
	.word	0xe0f
	.word	gStringVar2
	.word	gText_SpaceSeconds
.L21:
	ldr	r0, .L46
	ldr	r1, .L46+0x4
	bl	StringCopy
.L22:
	mov	r4, #0x0
	cmp	r6, #0
	bne	.L23	@cond_branch
	mov	r4, #0x5
	b	.L24
.L47:
	.align	2, 0
.L46:
	.word	gStringVar2
	.word	gText_1MinutePlus
.L23:
	cmp	r6, #0x3
	bhi	.L25	@cond_branch
	mov	r4, #0x4
	b	.L24
.L25:
	cmp	r6, #0x9
	bhi	.L27	@cond_branch
	mov	r4, #0x3
	b	.L24
.L27:
	cmp	r6, #0x13
	bhi	.L29	@cond_branch
	mov	r4, #0x2
	b	.L24
.L29:
	cmp	r6, #0x63
	bhi	.L24	@cond_branch
	mov	r4, #0x1
.L24:
	add	r0, r7, #0
	mov	r1, #0x3c
	bl	__udivsi3
	cmp	r0, #0xa
	bhi	.L32	@cond_branch
	add	r0, r4, #0x5
	b	.L41
.L32:
	cmp	r0, #0xf
	bhi	.L34	@cond_branch
	add	r0, r4, #0x4
	b	.L41
.L34:
	cmp	r0, #0x14
	bhi	.L36	@cond_branch
	add	r0, r4, #0x3
	b	.L41
.L36:
	cmp	r0, #0x28
	bhi	.L38	@cond_branch
	add	r0, r4, #0x2
	b	.L41
.L38:
	cmp	r0, #0x3b
	bhi	.L33	@cond_branch
	add	r0, r4, #0x1
.L41:
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L33:
	ldr	r0, .L48
	strh	r4, [r0]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gSpecialVar_Result
.Lfe6:
	.size	 DetermineCyclingRoadResults,.Lfe6-DetermineCyclingRoadResults
	.align	2, 0
	.globl	FinishCyclingRoadChallenge
	.type	 FinishCyclingRoadChallenge,function
	.thumb_func
FinishCyclingRoadChallenge:
	push	{r4, r5, lr}
	ldr	r0, .L51
	ldr	r1, .L51+0x4
	ldr	r4, [r0, #0x20]
	ldr	r0, [r1]
	sub	r4, r4, r0
	ldr	r5, .L51+0x8
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	DetermineCyclingRoadResults
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	RecordCyclingRoadResults
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	gMain
	.word	sBikeCyclingTimer
	.word	gBikeCollisions
.Lfe7:
	.size	 FinishCyclingRoadChallenge,.Lfe7-FinishCyclingRoadChallenge
	.align	2, 0
	.type	 RecordCyclingRoadResults,function
	.thumb_func
RecordCyclingRoadResults:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	ldr	r6, .L56
	add	r0, r6, #0
	bl	VarGet
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r7, .L56+0x4
	add	r0, r7, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	add	r4, r4, r0
	cmp	r4, r5
	bhi	.L55	@cond_branch
	cmp	r4, #0
	bne	.L54	@cond_branch
.L55:
	lsl	r1, r5, #0x10
	lsr	r1, r1, #0x10
	add	r0, r6, #0
	bl	VarSet
	lsr	r1, r5, #0x10
	add	r0, r7, #0
	bl	VarSet
	ldr	r0, .L56+0x8
	mov	r1, r8
	bl	VarSet
.L54:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	0x4028
	.word	0x4029
	.word	0x4027
.Lfe8:
	.size	 RecordCyclingRoadResults,.Lfe8-RecordCyclingRoadResults
	.align	2, 0
	.globl	GetRecordedCyclingRoadResults
	.type	 GetRecordedCyclingRoadResults,function
	.thumb_func
GetRecordedCyclingRoadResults:
	push	{r4, lr}
	ldr	r0, .L61
	bl	VarGet
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L61+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	add	r4, r4, r0
	cmp	r4, #0
	beq	.L59	@cond_branch
	ldr	r0, .L61+0x8
	bl	VarGet
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	DetermineCyclingRoadResults
	mov	r0, #0x1
	b	.L60
.L62:
	.align	2, 0
.L61:
	.word	0x4028
	.word	0x4029
	.word	0x4027
.L59:
	mov	r0, #0x0
.L60:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 GetRecordedCyclingRoadResults,.Lfe9-GetRecordedCyclingRoadResults
	.align	2, 0
	.globl	UpdateCyclingRoadState
	.type	 UpdateCyclingRoadState,function
	.thumb_func
UpdateCyclingRoadState:
	push	{r4, lr}
	ldr	r0, .L67
	ldrh	r1, [r0]
	ldr	r0, .L67+0x4
	cmp	r1, r0
	beq	.L63	@cond_branch
	ldr	r4, .L67+0x8
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	beq	.L66	@cond_branch
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L63	@cond_branch
.L66:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	VarSet
	mov	r0, #0x0
	bl	Overworld_SetSavedMusic
.L63:
	pop	{r4}
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	gLastUsedWarp
	.word	0xc1d
	.word	0x40a9
.Lfe10:
	.size	 UpdateCyclingRoadState,.Lfe10-UpdateCyclingRoadState
	.align	2, 0
	.globl	SetSSTidalFlag
	.type	 SetSSTidalFlag,function
	.thumb_func
SetSSTidalFlag:
	push	{lr}
	ldr	r0, .L70
	bl	FlagSet
	ldr	r0, .L70+0x4
	bl	GetVarPointer
	mov	r1, #0x0
	strh	r1, [r0]
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	0x88d
	.word	0x404a
.Lfe11:
	.size	 SetSSTidalFlag,.Lfe11-SetSSTidalFlag
	.align	2, 0
	.globl	ResetSSTidalFlag
	.type	 ResetSSTidalFlag,function
	.thumb_func
ResetSSTidalFlag:
	push	{lr}
	ldr	r0, .L73
	bl	FlagClear
	pop	{r0}
	bx	r0
.L74:
	.align	2, 0
.L73:
	.word	0x88d
.Lfe12:
	.size	 ResetSSTidalFlag,.Lfe12-ResetSSTidalFlag
	.align	2, 0
	.globl	CountSSTidalStep
	.type	 CountSSTidalStep,function
	.thumb_func
CountSSTidalStep:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L79
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L77	@cond_branch
	ldr	r0, .L79+0x4
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r4, r1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r1, #0xcc
	bhi	.L76	@cond_branch
.L77:
	mov	r0, #0x0
	b	.L78
.L80:
	.align	2, 0
.L79:
	.word	0x88d
	.word	0x404a
.L76:
	mov	r0, #0x1
.L78:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 CountSSTidalStep,.Lfe13-CountSSTidalStep
	.align	2, 0
	.globl	GetSSTidalLocation
	.type	 GetSSTidalLocation,function
	.thumb_func
GetSSTidalLocation:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	add	r5, r1, #0
	add	r6, r2, #0
	add	r7, r3, #0
	ldr	r0, .L106
	bl	GetVarPointer
	add	r4, r0, #0
	ldr	r0, .L106+0x4
	bl	GetVarPointer
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x9
	bhi	.L82	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L106+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L107:
	.align	2, 0
.L106:
	.word	0x404a
	.word	0x40b4
	.word	.L101
	.align	2, 0
	.align	2, 0
.L101:
	.word	.L84
	.word	.L91
	.word	.L86
	.word	.L88
	.word	.L88
	.word	.L90
	.word	.L96
	.word	.L84
	.word	.L86
	.word	.L90
.L84:
	mov	r0, #0x1
	b	.L103
.L86:
	mov	r0, #0x4
	b	.L103
.L88:
	mov	r0, #0x2
	b	.L103
.L90:
	mov	r0, #0x3
	b	.L103
.L91:
	ldrh	r0, [r4]
	cmp	r0, #0x3b
	bhi	.L92	@cond_branch
	mov	r0, #0x31
	strb	r0, [r5]
	ldrh	r0, [r4]
	add	r0, r0, #0x13
	b	.L104
.L92:
	cmp	r0, #0x8b
	bhi	.L94	@cond_branch
	mov	r0, #0x30
	strb	r0, [r5]
	ldrh	r0, [r4]
	sub	r0, r0, #0x3c
	b	.L104
.L94:
	mov	r0, #0x2f
	strb	r0, [r5]
	ldrh	r0, [r4]
	sub	r0, r0, #0x8c
	b	.L104
.L96:
	ldrh	r0, [r4]
	cmp	r0, #0x41
	bhi	.L97	@cond_branch
	mov	r0, #0x2f
	strb	r0, [r5]
	ldrh	r1, [r4]
	mov	r0, #0x41
	b	.L105
.L97:
	cmp	r0, #0x91
	bhi	.L99	@cond_branch
	mov	r0, #0x30
	strb	r0, [r5]
	ldrh	r1, [r4]
	mov	r0, #0x91
	b	.L105
.L99:
	mov	r0, #0x31
	strb	r0, [r5]
	ldrh	r1, [r4]
	mov	r0, #0xe0
.L105:
	sub	r0, r0, r1
.L104:
	strh	r0, [r6]
.L82:
	mov	r0, #0x0
	mov	r1, r8
	strb	r0, [r1]
	mov	r0, #0x14
	strh	r0, [r7]
	mov	r0, #0x0
.L103:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 GetSSTidalLocation,.Lfe14-GetSSTidalLocation
	.align	2, 0
	.globl	ShouldDoWallyCall
	.type	 ShouldDoWallyCall,function
	.thumb_func
ShouldDoWallyCall:
	push	{lr}
	mov	r0, #0x88
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L120	@cond_branch
	ldr	r0, .L121
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x1
	blt	.L120	@cond_branch
	cmp	r0, #0x3
	ble	.L114	@cond_branch
	cmp	r0, #0x6
	bne	.L120	@cond_branch
.L114:
	ldr	r0, .L121+0x4
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r1, #0xf9
	bhi	.L118	@cond_branch
.L120:
	mov	r0, #0x0
	b	.L119
.L122:
	.align	2, 0
.L121:
	.word	gMapHeader
	.word	0x40f2
.L118:
	mov	r0, #0x1
.L119:
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 ShouldDoWallyCall,.Lfe15-ShouldDoWallyCall
	.align	2, 0
	.globl	ShouldDoScottFortreeCall
	.type	 ShouldDoScottFortreeCall,function
	.thumb_func
ShouldDoScottFortreeCall:
	push	{lr}
	mov	r0, #0x8a
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L135	@cond_branch
	ldr	r0, .L136
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x1
	blt	.L135	@cond_branch
	cmp	r0, #0x3
	ble	.L129	@cond_branch
	cmp	r0, #0x6
	bne	.L135	@cond_branch
.L129:
	ldr	r0, .L136+0x4
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r1, #0x9
	bhi	.L133	@cond_branch
.L135:
	mov	r0, #0x0
	b	.L134
.L137:
	.align	2, 0
.L136:
	.word	gMapHeader
	.word	0x40f3
.L133:
	mov	r0, #0x1
.L134:
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 ShouldDoScottFortreeCall,.Lfe16-ShouldDoScottFortreeCall
	.align	2, 0
	.globl	ShouldDoScottBattleFrontierCall
	.type	 ShouldDoScottBattleFrontierCall,function
	.thumb_func
ShouldDoScottBattleFrontierCall:
	push	{lr}
	mov	r0, #0x72
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L150	@cond_branch
	ldr	r0, .L151
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x1
	blt	.L150	@cond_branch
	cmp	r0, #0x3
	ble	.L144	@cond_branch
	cmp	r0, #0x6
	bne	.L150	@cond_branch
.L144:
	ldr	r0, .L151+0x4
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r1, #0x9
	bhi	.L148	@cond_branch
.L150:
	mov	r0, #0x0
	b	.L149
.L152:
	.align	2, 0
.L151:
	.word	gMapHeader
	.word	0x40f5
.L148:
	mov	r0, #0x1
.L149:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 ShouldDoScottBattleFrontierCall,.Lfe17-ShouldDoScottBattleFrontierCall
	.align	2, 0
	.globl	ShouldDoRoxanneCall
	.type	 ShouldDoRoxanneCall,function
	.thumb_func
ShouldDoRoxanneCall:
	push	{lr}
	mov	r0, #0x80
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L165	@cond_branch
	ldr	r0, .L166
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x1
	blt	.L165	@cond_branch
	cmp	r0, #0x3
	ble	.L159	@cond_branch
	cmp	r0, #0x6
	bne	.L165	@cond_branch
.L159:
	ldr	r0, .L166+0x4
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r1, #0xf9
	bhi	.L163	@cond_branch
.L165:
	mov	r0, #0x0
	b	.L164
.L167:
	.align	2, 0
.L166:
	.word	gMapHeader
	.word	0x40f4
.L163:
	mov	r0, #0x1
.L164:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 ShouldDoRoxanneCall,.Lfe18-ShouldDoRoxanneCall
	.align	2, 0
	.globl	ShouldDoRivalRayquazaCall
	.type	 ShouldDoRivalRayquazaCall,function
	.thumb_func
ShouldDoRivalRayquazaCall:
	push	{lr}
	mov	r0, #0x75
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L180	@cond_branch
	ldr	r0, .L181
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x1
	blt	.L180	@cond_branch
	cmp	r0, #0x3
	ble	.L174	@cond_branch
	cmp	r0, #0x6
	bne	.L180	@cond_branch
.L174:
	ldr	r0, .L181+0x4
	bl	GetVarPointer
	ldrh	r1, [r0]
	add	r1, r1, #0x1
	strh	r1, [r0]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r1, #0xf9
	bhi	.L178	@cond_branch
.L180:
	mov	r0, #0x0
	b	.L179
.L182:
	.align	2, 0
.L181:
	.word	gMapHeader
	.word	0x40f6
.L178:
	mov	r0, #0x1
.L179:
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 ShouldDoRivalRayquazaCall,.Lfe19-ShouldDoRivalRayquazaCall
	.align	2, 0
	.globl	GetLinkPartnerNames
	.type	 GetLinkPartnerNames,function
	.thumb_func
GetLinkPartnerNames:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r6, #0x0
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r4, r5
	bcs	.L185	@cond_branch
	ldr	r0, .L190
	mov	r8, r0
.L187:
	cmp	r7, r4
	beq	.L186	@cond_branch
	lsl	r0, r6, #0x2
	add	r0, r0, r8
	ldr	r0, [r0]
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	ldr	r2, .L190+0x4
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L186:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L187	@cond_branch
.L185:
	add	r0, r5, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L191:
	.align	2, 0
.L190:
	.word	gTVStringVarPtrs
	.word	gLinkPlayers+0x8
.Lfe20:
	.size	 GetLinkPartnerNames,.Lfe20-GetLinkPartnerNames
	.section .rodata
.LC40:
	.byte	0x7
	.byte	0x9
	.byte	0x8
	.byte	0xa
.LC42:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.byte	0x0
.text
	.align	2, 0
	.globl	SpawnLinkPartnerObjectEvent
	.type	 SpawnLinkPartnerObjectEvent,function
	.thumb_func
SpawnLinkPartnerObjectEvent:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	mov	r7, #0x0
	mov	r0, #0x0
	mov	r9, r0
	mov	r8, r0
	ldr	r1, .L224
	add	r0, sp, #0x8
	mov	r2, #0x4
	bl	memcpy
	add	r4, sp, #0xc
	ldr	r1, .L224+0x4
	add	r0, r4, #0
	mov	r2, #0x8
	bl	memcpy
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x2
	beq	.L195	@cond_branch
	cmp	r0, #0x2
	bgt	.L200	@cond_branch
	cmp	r0, #0x1
	beq	.L197	@cond_branch
	b	.L193
.L225:
	.align	2, 0
.L224:
	.word	.LC40
	.word	.LC42
.L200:
	cmp	r1, #0x3
	beq	.L194	@cond_branch
	cmp	r1, #0x4
	beq	.L196	@cond_branch
	b	.L193
.L194:
	mov	r7, #0x2
	ldr	r0, .L226
	ldr	r1, [r0]
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	b	.L220
.L227:
	.align	2, 0
.L226:
	.word	gSaveBlock1Ptr
.L195:
	mov	r7, #0x1
	ldr	r0, .L228
	ldr	r0, [r0]
	ldrh	r1, [r0]
	mov	r9, r1
	ldrh	r0, [r0, #0x2]
	sub	r0, r0, #0x1
	b	.L221
.L229:
	.align	2, 0
.L228:
	.word	gSaveBlock1Ptr
.L196:
	ldr	r0, .L230
	ldr	r1, [r0]
	ldrh	r0, [r1]
	add	r0, r0, #0x1
.L220:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	ldrh	r1, [r1, #0x2]
	mov	r8, r1
	b	.L193
.L231:
	.align	2, 0
.L230:
	.word	gSaveBlock1Ptr
.L197:
	mov	r7, #0x3
	ldr	r0, .L232
	ldr	r0, [r0]
	ldrh	r3, [r0]
	mov	r9, r3
	ldrh	r0, [r0, #0x2]
	add	r0, r0, #0x1
.L221:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
.L193:
	mov	r6, #0x0
	b	.L222
.L233:
	.align	2, 0
.L232:
	.word	gSaveBlock1Ptr
.L204:
	cmp	sl, r6
	beq	.L203	@cond_branch
	ldr	r0, .L234
	lsl	r2, r6, #0x3
	sub	r1, r2, r6
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r3, [r1]
	add	r4, r0, #0
	cmp	r3, #0x1
	blt	.L214	@cond_branch
	cmp	r3, #0x2
	ble	.L208	@cond_branch
	cmp	r3, #0x3
	beq	.L211	@cond_branch
	b	.L214
.L235:
	.align	2, 0
.L234:
	.word	gLinkPlayers
.L208:
	ldrb	r0, [r1, #0x13]
	mov	r5, #0xec
	cmp	r0, #0
	bne	.L206	@cond_branch
	mov	r5, #0xeb
	b	.L206
.L211:
	ldrb	r0, [r1, #0x13]
	b	.L223
.L214:
	sub	r0, r2, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x13]
.L223:
	mov	r5, #0x69
	cmp	r0, #0
	bne	.L206	@cond_branch
	mov	r5, #0x64
.L206:
	mov	r0, sp
	add	r0, r0, r7
	add	r0, r0, #0x8
	ldrb	r1, [r0]
	mov	r4, #0xf0
	sub	r4, r4, r6
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r7, #0x1
	mov	r0, sp
	add	r0, r0, r2
	add	r0, r0, #0xc
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	mov	r3, r9
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	ip, r3
	add	r0, r0, ip
	add	r3, r0, #0x7
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	ip, r3
	mov	r0, sp
	add	r0, r0, #0xd
	add	r0, r0, r2
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	mov	r3, r8
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	add	r0, r0, r2
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	add	r2, r4, #0
	mov	r3, ip
	bl	SpawnSpecialObjectEventParameterized
	add	r0, r5, #0
	add	r1, r4, #0
	add	r2, r6, #0
	bl	LoadLinkPartnerObjectEventSpritePalette
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x4
	bne	.L203	@cond_branch
	mov	r7, #0x0
.L203:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L222:
	ldr	r0, .L236
	ldrh	r0, [r0]
	cmp	r6, r0
	bcc	.L204	@cond_branch
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L237:
	.align	2, 0
.L236:
	.word	gSpecialVar_0x8004
.Lfe21:
	.size	 SpawnLinkPartnerObjectEvent,.Lfe21-SpawnLinkPartnerObjectEvent
	.align	2, 0
	.type	 LoadLinkPartnerObjectEventSpritePalette,function
	.thumb_func
LoadLinkPartnerObjectEventSpritePalette:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	lsl	r2, r2, #0x18
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	add	r2, r2, r1
	lsr	r5, r2, #0x18
	lsr	r4, r0, #0x18
	mov	r2, #0xa8
	lsl	r2, r2, #0x15
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L240	@cond_branch
	cmp	r4, #0x64
	beq	.L240	@cond_branch
	cmp	r4, #0x69
	bne	.L239	@cond_branch
.L240:
	ldr	r0, .L251
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	add	r0, r3, #0
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x10
	beq	.L239	@cond_branch
	ldr	r1, .L251+0x4
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L251+0x8
	add	r1, r1, r0
	lsl	r3, r5, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	cmp	r4, #0x69
	beq	.L246	@cond_branch
	cmp	r4, #0x69
	bgt	.L249	@cond_branch
	cmp	r4, #0x64
	beq	.L245	@cond_branch
	b	.L239
.L252:
	.align	2, 0
.L251:
	.word	gSaveBlock1Ptr
	.word	gObjectEvents
	.word	gSprites
.L249:
	cmp	r4, #0xeb
	beq	.L243	@cond_branch
	cmp	r4, #0xec
	beq	.L244	@cond_branch
	b	.L239
.L243:
	ldr	r0, .L253
	b	.L250
.L254:
	.align	2, 0
.L253:
	.word	gObjectEventPalette33
.L244:
	ldr	r0, .L255
	b	.L250
.L256:
	.align	2, 0
.L255:
	.word	gObjectEventPalette34
.L245:
	ldr	r0, .L257
.L250:
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r2, #0x20
	bl	LoadPalette
	b	.L239
.L258:
	.align	2, 0
.L257:
	.word	gObjectEventPalette8
.L246:
	ldr	r0, .L259
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r1, r3, r2
	mov	r2, #0x20
	bl	LoadPalette
.L239:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gObjectEventPalette17
.Lfe22:
	.size	 LoadLinkPartnerObjectEventSpritePalette,.Lfe22-LoadLinkPartnerObjectEventSpritePalette
	.section .rodata
	.align	2, 0
	.type	 sMauvilleGymSwitchCoords,object
sMauvilleGymSwitchCoords:
	.byte	0x7
	.byte	0x16
	.space	2
	.byte	0xb
	.byte	0x13
	.space	2
	.byte	0xa
	.byte	0x10
	.space	2
	.byte	0xf
	.byte	0x10
	.space	2
	.size	 sMauvilleGymSwitchCoords,16
.text
	.align	2, 0
	.globl	MauvilleGymPressSwitch
	.type	 MauvilleGymPressSwitch,function
	.thumb_func
MauvilleGymPressSwitch:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L269
.L265:
	ldr	r0, .L269+0x4
	ldrh	r0, [r0]
	cmp	r4, r0
	bne	.L266	@cond_branch
	lsl	r1, r4, #0x2
	add	r1, r1, r5
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x1]
	ldr	r2, .L269+0x8
	bl	MapGridSetMetatileIdAt
	b	.L264
.L270:
	.align	2, 0
.L269:
	.word	sMauvilleGymSwitchCoords
	.word	gSpecialVar_0x8004
	.word	0x206
.L266:
	lsl	r1, r4, #0x2
	add	r1, r1, r5
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x1]
	ldr	r2, .L271
	bl	MapGridSetMetatileIdAt
.L264:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L265	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L272:
	.align	2, 0
.L271:
	.word	0x205
.Lfe23:
	.size	 MauvilleGymPressSwitch,.Lfe23-MauvilleGymPressSwitch
	.align	2, 0
	.globl	MauvilleGymSetDefaultBarriers
	.type	 MauvilleGymSetDefaultBarriers,function
	.thumb_func
MauvilleGymSetDefaultBarriers:
	push	{r4, r5, r6, lr}
	mov	r5, #0xc
.L277:
	mov	r4, #0x7
	add	r6, r5, #0x1
.L281:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileIdAt
	ldr	r1, .L315
	add	r0, r0, r1
	cmp	r0, #0x37
	bls	.LCB1665
	b	.L280	@long jump
.LCB1665:
	lsl	r0, r0, #0x2
	ldr	r1, .L315+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L316:
	.align	2, 0
.L315:
	.word	-0x21a
	.word	.L310
	.align	2, 0
	.align	2, 0
.L310:
	.word	.L304
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L283
	.word	.L284
	.word	.L291
	.word	.L292
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L285
	.word	.L286
	.word	.L293
	.word	.L294
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L287
	.word	.L288
	.word	.L295
	.word	.L296
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L289
	.word	.L290
	.word	.L297
	.word	.L298
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L299
	.word	.L301
	.word	.L303
	.word	.L307
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L300
	.word	.L302
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L280
	.word	.L309
	.word	.L308
.L283:
	mov	r2, #0x8c
	lsl	r2, r2, #0x2
	b	.L314
.L284:
	ldr	r2, .L317
	b	.L314
.L318:
	.align	2, 0
.L317:
	.word	0x231
.L285:
	mov	r2, #0x8e
	lsl	r2, r2, #0x2
	b	.L314
.L286:
	ldr	r2, .L319
	b	.L314
.L320:
	.align	2, 0
.L319:
	.word	0x239
.L287:
	mov	r2, #0x88
	lsl	r2, r2, #0x2
	b	.L314
.L288:
	ldr	r2, .L321
	b	.L314
.L322:
	.align	2, 0
.L321:
	.word	0x221
.L289:
	ldr	r2, .L323
	b	.L314
.L324:
	.align	2, 0
.L323:
	.word	0xe28
.L290:
	ldr	r2, .L325
	b	.L314
.L326:
	.align	2, 0
.L325:
	.word	0xe29
.L291:
	ldr	r2, .L327
	b	.L314
.L328:
	.align	2, 0
.L327:
	.word	0x232
.L292:
	ldr	r2, .L329
	b	.L314
.L330:
	.align	2, 0
.L329:
	.word	0x233
.L293:
	ldr	r2, .L331
	b	.L314
.L332:
	.align	2, 0
.L331:
	.word	0x23a
.L294:
	ldr	r2, .L333
	b	.L314
.L334:
	.align	2, 0
.L333:
	.word	0x23b
.L295:
	ldr	r2, .L335
	b	.L314
.L336:
	.align	2, 0
.L335:
	.word	0x222
.L296:
	ldr	r2, .L337
	b	.L314
.L338:
	.align	2, 0
.L337:
	.word	0x223
.L297:
	ldr	r2, .L339
	b	.L314
.L340:
	.align	2, 0
.L339:
	.word	0xe2a
.L298:
	ldr	r2, .L341
	b	.L314
.L342:
	.align	2, 0
.L341:
	.word	0xe2b
.L299:
	ldr	r2, .L343
	b	.L314
.L344:
	.align	2, 0
.L343:
	.word	0xe42
.L300:
	ldr	r2, .L345
	b	.L314
.L346:
	.align	2, 0
.L345:
	.word	0x21a
.L301:
	ldr	r2, .L347
	b	.L314
.L348:
	.align	2, 0
.L347:
	.word	0xe43
.L302:
	ldr	r2, .L349
	b	.L314
.L350:
	.align	2, 0
.L349:
	.word	0x21a
.L303:
	mov	r2, #0xe4
	lsl	r2, r2, #0x4
	b	.L314
.L304:
	sub	r1, r5, #0x1
	add	r0, r4, #0
	bl	MapGridGetMetatileIdAt
	mov	r1, #0x90
	lsl	r1, r1, #0x2
	cmp	r0, r1
	bne	.L305	@cond_branch
	ldr	r2, .L351
	b	.L314
.L352:
	.align	2, 0
.L351:
	.word	0xe48
.L305:
	ldr	r2, .L353
	b	.L314
.L354:
	.align	2, 0
.L353:
	.word	0xe49
.L307:
	ldr	r2, .L355
	b	.L314
.L356:
	.align	2, 0
.L355:
	.word	0xe41
.L308:
	mov	r2, #0xe5
	lsl	r2, r2, #0x4
.L314:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
	b	.L280
.L309:
	ldr	r2, .L357
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
.L280:
	add	r4, r4, #0x1
	cmp	r4, #0xf
	bgt	.LCB1959
	b	.L281	@long jump
.LCB1959:
	add	r5, r6, #0
	cmp	r5, #0x17
	bgt	.LCB1965
	b	.L277	@long jump
.LCB1965:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L358:
	.align	2, 0
.L357:
	.word	0x251
.Lfe24:
	.size	 MauvilleGymSetDefaultBarriers,.Lfe24-MauvilleGymSetDefaultBarriers
	.align	2, 0
	.globl	MauvilleGymDeactivatePuzzle
	.type	 MauvilleGymDeactivatePuzzle,function
	.thumb_func
MauvilleGymDeactivatePuzzle:
	push	{r4, r5, r6, lr}
	ldr	r4, .L392
	mov	r5, #0x3
.L363:
	ldrb	r0, [r4]
	ldrb	r1, [r4, #0x1]
	ldr	r2, .L392+0x4
	bl	MapGridSetMetatileIdAt
	add	r4, r4, #0x4
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L363	@cond_branch
	mov	r5, #0xc
.L368:
	mov	r4, #0x7
	add	r6, r5, #0x1
.L372:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridGetMetatileIdAt
	ldr	r1, .L392+0x8
	add	r0, r0, r1
	cmp	r0, #0x30
	bls	.LCB2025
	b	.L371	@long jump
.LCB2025:
	lsl	r0, r0, #0x2
	ldr	r1, .L392+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L393:
	.align	2, 0
.L392:
	.word	sMauvilleGymSwitchCoords
	.word	0x206
	.word	-0x220
	.word	.L387
	.align	2, 0
	.align	2, 0
.L387:
	.word	.L374
	.word	.L375
	.word	.L378
	.word	.L379
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L376
	.word	.L377
	.word	.L380
	.word	.L381
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L382
	.word	.L383
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L385
	.word	.L385
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L371
	.word	.L386
.L374:
	mov	r2, #0x8c
	lsl	r2, r2, #0x2
	b	.L391
.L375:
	ldr	r2, .L394
	b	.L391
.L395:
	.align	2, 0
.L394:
	.word	0x231
.L376:
	mov	r2, #0x8e
	lsl	r2, r2, #0x2
	b	.L391
.L377:
	ldr	r2, .L396
	b	.L391
.L397:
	.align	2, 0
.L396:
	.word	0x239
.L378:
	ldr	r2, .L398
	b	.L391
.L399:
	.align	2, 0
.L398:
	.word	0x232
.L379:
	ldr	r2, .L400
	b	.L391
.L401:
	.align	2, 0
.L400:
	.word	0x233
.L380:
	ldr	r2, .L402
	b	.L391
.L403:
	.align	2, 0
.L402:
	.word	0x23a
.L381:
	ldr	r2, .L404
	b	.L391
.L405:
	.align	2, 0
.L404:
	.word	0x23b
.L382:
	ldr	r2, .L406
	b	.L391
.L407:
	.align	2, 0
.L406:
	.word	0xe42
.L383:
	ldr	r2, .L408
	b	.L391
.L409:
	.align	2, 0
.L408:
	.word	0xe43
.L385:
	ldr	r2, .L410
.L391:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
	b	.L371
.L411:
	.align	2, 0
.L410:
	.word	0x21a
.L386:
	ldr	r2, .L412
	add	r0, r4, #0
	add	r1, r5, #0
	bl	MapGridSetMetatileIdAt
.L371:
	add	r4, r4, #0x1
	cmp	r4, #0xf
	bgt	.LCB2173
	b	.L372	@long jump
.LCB2173:
	add	r5, r6, #0
	cmp	r5, #0x17
	bgt	.LCB2179
	b	.L368	@long jump
.LCB2179:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L413:
	.align	2, 0
.L412:
	.word	0x251
.Lfe25:
	.size	 MauvilleGymDeactivatePuzzle,.Lfe25-MauvilleGymDeactivatePuzzle
	.section .rodata
	.type	 sSlidingDoorNextFrameDelay,object
sSlidingDoorNextFrameDelay:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.size	 sSlidingDoorNextFrameDelay,5
	.align	1, 0
	.type	 sPetalburgGymSlidingDoorMetatiles,object
sPetalburgGymSlidingDoorMetatiles:
	.short	0x218
	.short	0x219
	.short	0x21a
	.short	0x21b
	.short	0x21c
	.size	 sPetalburgGymSlidingDoorMetatiles,10
.text
	.align	2, 0
	.globl	PetalburgGymSlideOpenRoomDoors
	.type	 PetalburgGymSlideOpenRoomDoors,function
	.thumb_func
PetalburgGymSlideOpenRoomDoors:
	push	{lr}
	ldr	r0, .L415
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L415+0x4
	strb	r1, [r0]
	mov	r0, #0x2c
	bl	PlaySE
	ldr	r0, .L415+0x8
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L416:
	.align	2, 0
.L415:
	.word	sSlidingDoorNextFrameCounter
	.word	sSlidingDoorFrame
	.word	Task_PetalburgGymSlideOpenRoomDoors
.Lfe26:
	.size	 PetalburgGymSlideOpenRoomDoors,.Lfe26-PetalburgGymSlideOpenRoomDoors
	.align	2, 0
	.type	 Task_PetalburgGymSlideOpenRoomDoors,function
	.thumb_func
Task_PetalburgGymSlideOpenRoomDoors:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L421
	ldr	r5, .L421+0x4
	ldrb	r1, [r5]
	add	r0, r1, r0
	ldr	r4, .L421+0x8
	ldrb	r2, [r4]
	ldrb	r0, [r0]
	cmp	r0, r2
	bne	.L418	@cond_branch
	ldr	r0, .L421+0xc
	ldrb	r0, [r0]
	ldr	r2, .L421+0x10
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r1, [r1]
	bl	PetalburgGymSetDoorMetatiles
	mov	r0, #0x0
	strb	r0, [r4]
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bne	.L420	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	b	.L420
.L422:
	.align	2, 0
.L421:
	.word	sSlidingDoorNextFrameDelay
	.word	sSlidingDoorFrame
	.word	sSlidingDoorNextFrameCounter
	.word	gSpecialVar_0x8004
	.word	sPetalburgGymSlidingDoorMetatiles
.L418:
	add	r0, r2, #0x1
	strb	r0, [r4]
.L420:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 Task_PetalburgGymSlideOpenRoomDoors,.Lfe27-Task_PetalburgGymSlideOpenRoomDoors
	.align	2, 0
	.type	 PetalburgGymSetDoorMetatiles,function
	.thumb_func
PetalburgGymSetDoorMetatiles:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	mov	r7, #0x0
	sub	r0, r0, #0x1
	cmp	r0, #0x7
	bhi	.L424	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L442
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L443:
	.align	2, 0
.L442:
	.word	.L433
	.align	2, 0
	.align	2, 0
.L433:
	.word	.L425
	.word	.L426
	.word	.L427
	.word	.L428
	.word	.L429
	.word	.L430
	.word	.L431
	.word	.L432
.L425:
	mov	r7, #0x2
	mov	r1, sp
	mov	r0, #0x1
	strh	r0, [r1]
	mov	r0, #0x7
	strh	r0, [r1, #0x2]
	add	r1, sp, #0x8
	mov	r0, #0x68
	b	.L440
.L426:
	mov	r7, #0x2
	mov	r1, sp
	mov	r0, #0x1
	strh	r0, [r1]
	mov	r0, #0x7
	strh	r0, [r1, #0x2]
	add	r1, sp, #0x8
	mov	r0, #0x4e
	b	.L440
.L427:
	mov	r7, #0x2
	mov	r1, sp
	mov	r0, #0x1
	strh	r0, [r1]
	mov	r0, #0x7
	strh	r0, [r1, #0x2]
	add	r1, sp, #0x8
	mov	r0, #0x5b
	b	.L440
.L428:
	mov	r7, #0x1
	mov	r1, sp
	mov	r0, #0x7
	strh	r0, [r1]
	add	r1, sp, #0x8
	mov	r0, #0x27
	b	.L441
.L429:
	mov	r7, #0x2
	mov	r1, sp
	mov	r0, #0x1
	strh	r0, [r1]
	mov	r0, #0x7
	strh	r0, [r1, #0x2]
	add	r1, sp, #0x8
	mov	r0, #0x34
.L440:
	strh	r0, [r1]
	strh	r0, [r1, #0x2]
	b	.L424
.L430:
	mov	r7, #0x1
	mov	r0, sp
	strh	r7, [r0]
	add	r1, sp, #0x8
	mov	r0, #0x41
	b	.L441
.L431:
	mov	r7, #0x1
	mov	r1, sp
	mov	r0, #0x7
	strh	r0, [r1]
	add	r1, sp, #0x8
	mov	r0, #0xd
	b	.L441
.L432:
	mov	r7, #0x1
	mov	r0, sp
	strh	r7, [r0]
	add	r1, sp, #0x8
	mov	r0, #0x1a
.L441:
	strh	r0, [r1]
.L424:
	mov	r6, #0x0
	cmp	r6, r7
	bcs	.L436	@cond_branch
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r0, r1, #0
	add	r1, r2, #0
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	mov	r9, r1
	add	r1, r2, #0
	add	r1, r1, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	mov	r8, r1
.L438:
	lsl	r1, r6, #0x1
	mov	r3, sp
	add	r5, r3, r1
	ldrh	r0, [r5]
	add	r0, r0, #0x7
	add	r4, sp, #0x8
	add	r4, r4, r1
	ldrh	r1, [r4]
	add	r1, r1, #0x7
	mov	r3, r9
	lsr	r2, r3, #0x10
	bl	MapGridSetMetatileIdAt
	ldrh	r0, [r5]
	add	r0, r0, #0x7
	ldrh	r1, [r4]
	add	r1, r1, #0x8
	mov	r3, r8
	lsr	r2, r3, #0x10
	bl	MapGridSetMetatileIdAt
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, r7
	bcc	.L438	@cond_branch
.L436:
	bl	DrawWholeMapView
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 PetalburgGymSetDoorMetatiles,.Lfe28-PetalburgGymSetDoorMetatiles
	.align	2, 0
	.globl	PetalburgGymUnlockRoomDoors
	.type	 PetalburgGymUnlockRoomDoors,function
	.thumb_func
PetalburgGymUnlockRoomDoors:
	push	{lr}
	ldr	r0, .L445
	ldrb	r0, [r0]
	ldr	r1, .L445+0x4
	ldrh	r1, [r1, #0x8]
	bl	PetalburgGymSetDoorMetatiles
	pop	{r0}
	bx	r0
.L446:
	.align	2, 0
.L445:
	.word	gSpecialVar_0x8004
	.word	sPetalburgGymSlidingDoorMetatiles
.Lfe29:
	.size	 PetalburgGymUnlockRoomDoors,.Lfe29-PetalburgGymUnlockRoomDoors
	.align	2, 0
	.globl	ShowFieldMessageStringVar4
	.type	 ShowFieldMessageStringVar4,function
	.thumb_func
ShowFieldMessageStringVar4:
	push	{lr}
	ldr	r0, .L448
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.L449:
	.align	2, 0
.L448:
	.word	gStringVar4
.Lfe30:
	.size	 ShowFieldMessageStringVar4,.Lfe30-ShowFieldMessageStringVar4
	.align	2, 0
	.globl	StorePlayerCoordsInVars
	.type	 StorePlayerCoordsInVars,function
	.thumb_func
StorePlayerCoordsInVars:
	ldr	r1, .L451
	ldr	r0, .L451+0x4
	ldr	r2, [r0]
	ldrh	r0, [r2]
	strh	r0, [r1]
	ldr	r1, .L451+0x8
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	bx	lr
.L452:
	.align	2, 0
.L451:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8005
.Lfe31:
	.size	 StorePlayerCoordsInVars,.Lfe31-StorePlayerCoordsInVars
	.align	2, 0
	.globl	GetPlayerTrainerIdOnesDigit
	.type	 GetPlayerTrainerIdOnesDigit,function
	.thumb_func
GetPlayerTrainerIdOnesDigit:
	push	{lr}
	ldr	r0, .L454
	ldr	r0, [r0]
	ldrb	r1, [r0, #0xb]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0xa]
	orr	r0, r0, r1
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L455:
	.align	2, 0
.L454:
	.word	gSaveBlock2Ptr
.Lfe32:
	.size	 GetPlayerTrainerIdOnesDigit,.Lfe32-GetPlayerTrainerIdOnesDigit
	.align	2, 0
	.globl	GetPlayerBigGuyGirlString
	.type	 GetPlayerBigGuyGirlString,function
	.thumb_func
GetPlayerBigGuyGirlString:
	push	{lr}
	ldr	r0, .L459
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L457	@cond_branch
	ldr	r0, .L459+0x4
	ldr	r1, .L459+0x8
	bl	StringCopy
	b	.L458
.L460:
	.align	2, 0
.L459:
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gText_BigGuy
.L457:
	ldr	r0, .L461
	ldr	r1, .L461+0x4
	bl	StringCopy
.L458:
	pop	{r0}
	bx	r0
.L462:
	.align	2, 0
.L461:
	.word	gStringVar1
	.word	gText_BigGirl
.Lfe33:
	.size	 GetPlayerBigGuyGirlString,.Lfe33-GetPlayerBigGuyGirlString
	.align	2, 0
	.globl	GetRivalSonDaughterString
	.type	 GetRivalSonDaughterString,function
	.thumb_func
GetRivalSonDaughterString:
	push	{lr}
	ldr	r0, .L466
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L464	@cond_branch
	ldr	r0, .L466+0x4
	ldr	r1, .L466+0x8
	bl	StringCopy
	b	.L465
.L467:
	.align	2, 0
.L466:
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gText_Daughter
.L464:
	ldr	r0, .L468
	ldr	r1, .L468+0x4
	bl	StringCopy
.L465:
	pop	{r0}
	bx	r0
.L469:
	.align	2, 0
.L468:
	.word	gStringVar1
	.word	gText_Son
.Lfe34:
	.size	 GetRivalSonDaughterString,.Lfe34-GetRivalSonDaughterString
	.align	2, 0
	.globl	GetBattleOutcome
	.type	 GetBattleOutcome,function
	.thumb_func
GetBattleOutcome:
	ldr	r0, .L471
	ldrb	r0, [r0]
	bx	lr
.L472:
	.align	2, 0
.L471:
	.word	gBattleOutcome
.Lfe35:
	.size	 GetBattleOutcome,.Lfe35-GetBattleOutcome
	.align	2, 0
	.globl	CableCarWarp
	.type	 CableCarWarp,function
	.thumb_func
CableCarWarp:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L476
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L474	@cond_branch
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, #0x4
	str	r0, [sp]
	mov	r0, #0x13
	mov	r1, #0x0
	mov	r3, #0x6
	bl	SetWarpDestination
	b	.L475
.L477:
	.align	2, 0
.L476:
	.word	gSpecialVar_0x8004
.L474:
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, #0x4
	str	r0, [sp]
	mov	r0, #0x13
	mov	r1, #0x1
	mov	r3, #0x6
	bl	SetWarpDestination
.L475:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 CableCarWarp,.Lfe36-CableCarWarp
	.align	2, 0
	.globl	SetHiddenItemFlag
	.type	 SetHiddenItemFlag,function
	.thumb_func
SetHiddenItemFlag:
	push	{lr}
	ldr	r0, .L479
	ldrh	r0, [r0]
	bl	FlagSet
	pop	{r0}
	bx	r0
.L480:
	.align	2, 0
.L479:
	.word	gSpecialVar_0x8004
.Lfe37:
	.size	 SetHiddenItemFlag,.Lfe37-SetHiddenItemFlag
	.align	2, 0
	.globl	GetWeekCount
	.type	 GetWeekCount,function
	.thumb_func
GetWeekCount:
	push	{lr}
	ldr	r0, .L483
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r1, #0x7
	bl	__divsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L483+0x4
	cmp	r0, r1
	bls	.L482	@cond_branch
	add	r0, r1, #0
.L482:
	pop	{r1}
	bx	r1
.L484:
	.align	2, 0
.L483:
	.word	gLocalTime
	.word	0x270f
.Lfe38:
	.size	 GetWeekCount,.Lfe38-GetWeekCount
	.align	2, 0
	.globl	GetLeadMonFriendshipScore
	.type	 GetLeadMonFriendshipScore,function
	.thumb_func
GetLeadMonFriendshipScore:
	push	{r4, lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L493
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0xff
	bne	.L486	@cond_branch
	mov	r0, #0x6
	b	.L492
.L494:
	.align	2, 0
.L493:
	.word	gPlayerParty
.L486:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0xc7
	bls	.L487	@cond_branch
	mov	r0, #0x5
	b	.L492
.L487:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0x95
	bls	.L488	@cond_branch
	mov	r0, #0x4
	b	.L492
.L488:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0x63
	bls	.L489	@cond_branch
	mov	r0, #0x3
	b	.L492
.L489:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0x31
	bls	.L490	@cond_branch
	mov	r0, #0x2
	b	.L492
.L490:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0
	bne	.L491	@cond_branch
	mov	r0, #0x0
	b	.L492
.L491:
	mov	r0, #0x1
.L492:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 GetLeadMonFriendshipScore,.Lfe39-GetLeadMonFriendshipScore
	.align	2, 0
	.type	 CB2_FieldShowRegionMap,function
	.thumb_func
CB2_FieldShowRegionMap:
	push	{lr}
	ldr	r0, .L496
	bl	FieldInitRegionMap
	pop	{r0}
	bx	r0
.L497:
	.align	2, 0
.L496:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe40:
	.size	 CB2_FieldShowRegionMap,.Lfe40-CB2_FieldShowRegionMap
	.align	2, 0
	.globl	FieldShowRegionMap
	.type	 FieldShowRegionMap,function
	.thumb_func
FieldShowRegionMap:
	push	{lr}
	ldr	r0, .L499
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L500:
	.align	2, 0
.L499:
	.word	CB2_FieldShowRegionMap
.Lfe41:
	.size	 FieldShowRegionMap,.Lfe41-FieldShowRegionMap
	.align	2, 0
	.globl	DoPCTurnOnEffect
	.type	 DoPCTurnOnEffect,function
	.thumb_func
DoPCTurnOnEffect:
	push	{r4, lr}
	ldr	r4, .L503
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L502	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L503+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	strh	r2, [r1, #0x8]
	strh	r0, [r1, #0xa]
	strh	r2, [r1, #0xc]
	strh	r2, [r1, #0xe]
	strh	r2, [r1, #0x10]
.L502:
	pop	{r4}
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	Task_PCTurnOnEffect
	.word	gTasks
.Lfe42:
	.size	 DoPCTurnOnEffect,.Lfe42-DoPCTurnOnEffect
	.align	2, 0
	.type	 Task_PCTurnOnEffect,function
	.thumb_func
Task_PCTurnOnEffect:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L507
	add	r1, r1, r0
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L506	@cond_branch
	add	r0, r1, #0
	bl	PCTurnOnEffect_0
.L506:
	pop	{r0}
	bx	r0
.L508:
	.align	2, 0
.L507:
	.word	gTasks
.Lfe43:
	.size	 Task_PCTurnOnEffect,.Lfe43-Task_PCTurnOnEffect
	.align	2, 0
	.type	 PCTurnOnEffect_0,function
	.thumb_func
PCTurnOnEffect_0:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	mov	r6, #0x0
	mov	r5, #0x0
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x6
	bne	.L510	@cond_branch
	strh	r5, [r4, #0xe]
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x3
	beq	.L513	@cond_branch
	cmp	r0, #0x3
	bgt	.L517	@cond_branch
	cmp	r0, #0x2
	beq	.L512	@cond_branch
	b	.L511
.L517:
	cmp	r1, #0x4
	beq	.L514	@cond_branch
	b	.L511
.L512:
	mov	r6, #0x0
	b	.L519
.L513:
	mov	r6, #0xff
	b	.L519
.L514:
	mov	r6, #0x1
.L519:
	mov	r5, #0xff
.L511:
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r5, #0x18
	asr	r2, r2, #0x18
	bl	PCTurnOnEffect_1
	bl	DrawWholeMapView
	ldrh	r0, [r4, #0x10]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r4, #0x10]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5
	bne	.L510	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	DestroyTask
.L510:
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 PCTurnOnEffect_0,.Lfe44-PCTurnOnEffect_0
	.align	2, 0
	.type	 PCTurnOnEffect_1,function
	.thumb_func
PCTurnOnEffect_1:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	mov	r3, #0x0
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L521	@cond_branch
	ldr	r0, .L533
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L522	@cond_branch
	mov	r3, #0x4
	b	.L527
.L534:
	.align	2, 0
.L533:
	.word	gSpecialVar_0x8004
.L522:
	cmp	r0, #0x1
	bne	.L524	@cond_branch
	ldr	r3, .L535
	b	.L527
.L536:
	.align	2, 0
.L535:
	.word	0x25a
.L524:
	cmp	r0, #0x2
	bne	.L527	@cond_branch
	ldr	r3, .L537
	b	.L527
.L538:
	.align	2, 0
.L537:
	.word	0x259
.L521:
	ldr	r0, .L539
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L528	@cond_branch
	mov	r3, #0x5
	b	.L527
.L540:
	.align	2, 0
.L539:
	.word	gSpecialVar_0x8004
.L528:
	cmp	r0, #0x1
	bne	.L530	@cond_branch
	ldr	r3, .L541
	b	.L527
.L542:
	.align	2, 0
.L541:
	.word	0x27f
.L530:
	cmp	r0, #0x2
	bne	.L527	@cond_branch
	ldr	r3, .L543
.L527:
	ldr	r0, .L543+0x4
	ldr	r2, [r0]
	mov	r5, #0x0
	ldrsh	r0, [r2, r5]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	add	r0, r0, r1
	add	r0, r0, #0x7
	mov	r5, #0x2
	ldrsh	r1, [r2, r5]
	lsl	r2, r4, #0x18
	asr	r2, r2, #0x18
	add	r1, r1, r2
	add	r1, r1, #0x7
	mov	r4, #0xc0
	lsl	r4, r4, #0x4
	add	r2, r4, #0
	orr	r3, r3, r2
	add	r2, r3, #0
	bl	MapGridSetMetatileIdAt
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L544:
	.align	2, 0
.L543:
	.word	0x27e
	.word	gSaveBlock1Ptr
.Lfe45:
	.size	 PCTurnOnEffect_1,.Lfe45-PCTurnOnEffect_1
	.align	2, 0
	.globl	DoPCTurnOffEffect
	.type	 DoPCTurnOffEffect,function
	.thumb_func
DoPCTurnOffEffect:
	push	{lr}
	bl	PCTurnOffEffect
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 DoPCTurnOffEffect,.Lfe46-DoPCTurnOffEffect
	.align	2, 0
	.type	 PCTurnOffEffect,function
	.thumb_func
PCTurnOffEffect:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
	mov	r4, #0x0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x3
	beq	.L549	@cond_branch
	cmp	r0, #0x3
	bgt	.L553	@cond_branch
	cmp	r0, #0x2
	beq	.L548	@cond_branch
	b	.L547
.L553:
	cmp	r1, #0x4
	beq	.L550	@cond_branch
	b	.L547
.L548:
	mov	r6, #0x0
	b	.L559
.L549:
	mov	r6, #0xff
	b	.L559
.L550:
	mov	r6, #0x1
.L559:
	mov	r5, #0xff
.L547:
	ldr	r0, .L560
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L554	@cond_branch
	mov	r4, #0x4
	b	.L555
.L561:
	.align	2, 0
.L560:
	.word	gSpecialVar_0x8004
.L554:
	cmp	r0, #0x1
	bne	.L556	@cond_branch
	ldr	r4, .L562
	b	.L555
.L563:
	.align	2, 0
.L562:
	.word	0x25a
.L556:
	cmp	r0, #0x2
	bne	.L555	@cond_branch
	ldr	r4, .L564
.L555:
	ldr	r0, .L564+0x4
	ldr	r2, [r0]
	mov	r1, #0x0
	ldrsh	r0, [r2, r1]
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	add	r0, r0, r1
	add	r0, r0, #0x7
	mov	r3, #0x2
	ldrsh	r1, [r2, r3]
	lsl	r2, r5, #0x18
	asr	r2, r2, #0x18
	add	r1, r1, r2
	add	r1, r1, #0x7
	mov	r3, #0xc0
	lsl	r3, r3, #0x4
	add	r2, r3, #0
	orr	r4, r4, r2
	add	r2, r4, #0
	bl	MapGridSetMetatileIdAt
	bl	DrawWholeMapView
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L565:
	.align	2, 0
.L564:
	.word	0x259
	.word	gSaveBlock1Ptr
.Lfe47:
	.size	 PCTurnOffEffect,.Lfe47-PCTurnOffEffect
	.align	2, 0
	.globl	DoLotteryCornerComputerEffect
	.type	 DoLotteryCornerComputerEffect,function
	.thumb_func
DoLotteryCornerComputerEffect:
	push	{r4, lr}
	ldr	r4, .L568
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L567	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L568+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	strh	r2, [r1, #0x8]
	strh	r0, [r1, #0xa]
	strh	r2, [r1, #0xc]
	strh	r2, [r1, #0xe]
	strh	r2, [r1, #0x10]
.L567:
	pop	{r4}
	pop	{r0}
	bx	r0
.L569:
	.align	2, 0
.L568:
	.word	Task_LotteryCornerComputerEffect
	.word	gTasks
.Lfe48:
	.size	 DoLotteryCornerComputerEffect,.Lfe48-DoLotteryCornerComputerEffect
	.align	2, 0
	.type	 Task_LotteryCornerComputerEffect,function
	.thumb_func
Task_LotteryCornerComputerEffect:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L572
	add	r1, r1, r0
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L571	@cond_branch
	add	r0, r1, #0
	bl	LotteryCornerComputerEffect
.L571:
	pop	{r0}
	bx	r0
.L573:
	.align	2, 0
.L572:
	.word	gTasks
.Lfe49:
	.size	 Task_LotteryCornerComputerEffect,.Lfe49-Task_LotteryCornerComputerEffect
	.align	2, 0
	.type	 LotteryCornerComputerEffect,function
	.thumb_func
LotteryCornerComputerEffect:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xe
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x6
	bne	.L575	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xe]
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L576	@cond_branch
	ldr	r2, .L579
	mov	r0, #0x12
	mov	r1, #0x8
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L579+0x4
	mov	r0, #0x12
	mov	r1, #0x9
	bl	MapGridSetMetatileIdAt
	b	.L577
.L580:
	.align	2, 0
.L579:
	.word	0xe9d
	.word	0xea5
.L576:
	ldr	r2, .L581
	mov	r0, #0x12
	mov	r1, #0x8
	bl	MapGridSetMetatileIdAt
	mov	r2, #0xe6
	lsl	r2, r2, #0x4
	mov	r0, #0x12
	mov	r1, #0x9
	bl	MapGridSetMetatileIdAt
.L577:
	bl	DrawWholeMapView
	ldrh	r0, [r4, #0x10]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r4, #0x10]
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5
	bne	.L575	@cond_branch
	ldrb	r0, [r4, #0xa]
	bl	DestroyTask
.L575:
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	pop	{r4}
	pop	{r0}
	bx	r0
.L582:
	.align	2, 0
.L581:
	.word	0xe58
.Lfe50:
	.size	 LotteryCornerComputerEffect,.Lfe50-LotteryCornerComputerEffect
	.align	2, 0
	.globl	EndLotteryCornerComputerEffect
	.type	 EndLotteryCornerComputerEffect,function
	.thumb_func
EndLotteryCornerComputerEffect:
	push	{lr}
	ldr	r2, .L584
	mov	r0, #0x12
	mov	r1, #0x8
	bl	MapGridSetMetatileIdAt
	ldr	r2, .L584+0x4
	mov	r0, #0x12
	mov	r1, #0x9
	bl	MapGridSetMetatileIdAt
	bl	DrawWholeMapView
	pop	{r0}
	bx	r0
.L585:
	.align	2, 0
.L584:
	.word	0xe9d
	.word	0xea5
.Lfe51:
	.size	 EndLotteryCornerComputerEffect,.Lfe51-EndLotteryCornerComputerEffect
	.align	2, 0
	.globl	SetTrickHouseNuggetFlag
	.type	 SetTrickHouseNuggetFlag,function
	.thumb_func
SetTrickHouseNuggetFlag:
	push	{lr}
	ldr	r1, .L587
	ldr	r0, .L587+0x4
	strh	r0, [r1]
	bl	FlagSet
	pop	{r0}
	bx	r0
.L588:
	.align	2, 0
.L587:
	.word	gSpecialVar_0x8004
	.word	0x1f5
.Lfe52:
	.size	 SetTrickHouseNuggetFlag,.Lfe52-SetTrickHouseNuggetFlag
	.align	2, 0
	.globl	ResetTrickHouseNuggetFlag
	.type	 ResetTrickHouseNuggetFlag,function
	.thumb_func
ResetTrickHouseNuggetFlag:
	push	{lr}
	ldr	r1, .L590
	ldr	r0, .L590+0x4
	strh	r0, [r1]
	bl	FlagClear
	pop	{r0}
	bx	r0
.L591:
	.align	2, 0
.L590:
	.word	gSpecialVar_0x8004
	.word	0x1f5
.Lfe53:
	.size	 ResetTrickHouseNuggetFlag,.Lfe53-ResetTrickHouseNuggetFlag
	.align	2, 0
	.globl	CheckLeadMonCool
	.type	 CheckLeadMonCool,function
	.thumb_func
CheckLeadMonCool:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L595
	add	r0, r0, r1
	mov	r1, #0x16
	bl	GetMonData
	cmp	r0, #0xc7
	bls	.L593	@cond_branch
	mov	r0, #0x1
	b	.L594
.L596:
	.align	2, 0
.L595:
	.word	gPlayerParty
.L593:
	mov	r0, #0x0
.L594:
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 CheckLeadMonCool,.Lfe54-CheckLeadMonCool
	.align	2, 0
	.globl	CheckLeadMonBeauty
	.type	 CheckLeadMonBeauty,function
	.thumb_func
CheckLeadMonBeauty:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L600
	add	r0, r0, r1
	mov	r1, #0x17
	bl	GetMonData
	cmp	r0, #0xc7
	bls	.L598	@cond_branch
	mov	r0, #0x1
	b	.L599
.L601:
	.align	2, 0
.L600:
	.word	gPlayerParty
.L598:
	mov	r0, #0x0
.L599:
	pop	{r1}
	bx	r1
.Lfe55:
	.size	 CheckLeadMonBeauty,.Lfe55-CheckLeadMonBeauty
	.align	2, 0
	.globl	CheckLeadMonCute
	.type	 CheckLeadMonCute,function
	.thumb_func
CheckLeadMonCute:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L605
	add	r0, r0, r1
	mov	r1, #0x18
	bl	GetMonData
	cmp	r0, #0xc7
	bls	.L603	@cond_branch
	mov	r0, #0x1
	b	.L604
.L606:
	.align	2, 0
.L605:
	.word	gPlayerParty
.L603:
	mov	r0, #0x0
.L604:
	pop	{r1}
	bx	r1
.Lfe56:
	.size	 CheckLeadMonCute,.Lfe56-CheckLeadMonCute
	.align	2, 0
	.globl	CheckLeadMonSmart
	.type	 CheckLeadMonSmart,function
	.thumb_func
CheckLeadMonSmart:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L610
	add	r0, r0, r1
	mov	r1, #0x21
	bl	GetMonData
	cmp	r0, #0xc7
	bls	.L608	@cond_branch
	mov	r0, #0x1
	b	.L609
.L611:
	.align	2, 0
.L610:
	.word	gPlayerParty
.L608:
	mov	r0, #0x0
.L609:
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 CheckLeadMonSmart,.Lfe57-CheckLeadMonSmart
	.align	2, 0
	.globl	CheckLeadMonTough
	.type	 CheckLeadMonTough,function
	.thumb_func
CheckLeadMonTough:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L615
	add	r0, r0, r1
	mov	r1, #0x2f
	bl	GetMonData
	cmp	r0, #0xc7
	bls	.L613	@cond_branch
	mov	r0, #0x1
	b	.L614
.L616:
	.align	2, 0
.L615:
	.word	gPlayerParty
.L613:
	mov	r0, #0x0
.L614:
	pop	{r1}
	bx	r1
.Lfe58:
	.size	 CheckLeadMonTough,.Lfe58-CheckLeadMonTough
	.align	2, 0
	.globl	IsGrassTypeInParty
	.type	 IsGrassTypeInParty,function
	.thumb_func
IsGrassTypeInParty:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r6, .L627
.L621:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L627+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x5
	bl	GetMonData
	cmp	r0, #0
	beq	.L620	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L620	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r1, #0x6]
	cmp	r0, #0xc
	beq	.L624	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0xc
	bne	.L620	@cond_branch
.L624:
	ldr	r1, .L627+0x8
	mov	r0, #0x1
	b	.L626
.L628:
	.align	2, 0
.L627:
	.word	gBaseStats
	.word	gPlayerParty
	.word	gSpecialVar_Result
.L620:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L621	@cond_branch
	ldr	r1, .L629
	mov	r0, #0x0
.L626:
	strh	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L630:
	.align	2, 0
.L629:
	.word	gSpecialVar_Result
.Lfe59:
	.size	 IsGrassTypeInParty,.Lfe59-IsGrassTypeInParty
	.align	2, 0
	.globl	SpawnCameraObject
	.type	 SpawnCameraObject,function
	.thumb_func
SpawnCameraObject:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L632
	ldr	r0, [r0]
	ldrh	r3, [r0]
	add	r3, r3, #0x7
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	ldrh	r0, [r0, #0x2]
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	mov	r0, #0x7
	mov	r1, #0x8
	mov	r2, #0x7f
	bl	SpawnSpecialObjectEventParameterized
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L632+0x4
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x1]
	mov	r2, #0x20
	orr	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r0, [r1, #0x4]
	bl	CameraObjectSetFollowedObjectId
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L633:
	.align	2, 0
.L632:
	.word	gSaveBlock1Ptr
	.word	gObjectEvents
.Lfe60:
	.size	 SpawnCameraObject,.Lfe60-SpawnCameraObject
	.align	2, 0
	.globl	RemoveCameraObject
	.type	 RemoveCameraObject,function
	.thumb_func
RemoveCameraObject:
	push	{lr}
	bl	GetPlayerAvatarObjectId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CameraObjectSetFollowedObjectId
	ldr	r0, .L635
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0x7f
	bl	RemoveObjectEventByLocalIdAndMap
	pop	{r0}
	bx	r0
.L636:
	.align	2, 0
.L635:
	.word	gSaveBlock1Ptr
.Lfe61:
	.size	 RemoveCameraObject,.Lfe61-RemoveCameraObject
	.align	2, 0
	.globl	GetPokeblockNameByMonNature
	.type	 GetPokeblockNameByMonNature,function
	.thumb_func
GetPokeblockNameByMonNature:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L638
	add	r0, r0, r1
	mov	r1, #0x0
	bl	GetNature
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L638+0x4
	bl	CopyMonFavoritePokeblockName
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L639:
	.align	2, 0
.L638:
	.word	gPlayerParty
	.word	gStringVar1
.Lfe62:
	.size	 GetPokeblockNameByMonNature,.Lfe62-GetPokeblockNameByMonNature
	.align	2, 0
	.globl	GetSecretBaseNearbyMapName
	.type	 GetSecretBaseNearbyMapName,function
	.thumb_func
GetSecretBaseNearbyMapName:
	push	{r4, lr}
	ldr	r4, .L641
	ldr	r0, .L641+0x4
	bl	VarGet
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	bl	GetMapName
	pop	{r4}
	pop	{r0}
	bx	r0
.L642:
	.align	2, 0
.L641:
	.word	gStringVar1
	.word	0x4026
.Lfe63:
	.size	 GetSecretBaseNearbyMapName,.Lfe63-GetSecretBaseNearbyMapName
	.align	2, 0
	.globl	GetBestBattleTowerStreak
	.type	 GetBestBattleTowerStreak,function
	.thumb_func
GetBestBattleTowerStreak:
	push	{lr}
	mov	r0, #0x20
	bl	GetGameStat
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 GetBestBattleTowerStreak,.Lfe64-GetBestBattleTowerStreak
	.align	2, 0
	.globl	BufferEReaderTrainerName
	.type	 BufferEReaderTrainerName,function
	.thumb_func
BufferEReaderTrainerName:
	push	{lr}
	ldr	r0, .L645
	bl	GetEreaderTrainerName
	pop	{r0}
	bx	r0
.L646:
	.align	2, 0
.L645:
	.word	gStringVar1
.Lfe65:
	.size	 BufferEReaderTrainerName,.Lfe65-BufferEReaderTrainerName
	.section .rodata
	.type	 sSlotMachineRandomSeeds.198,object
sSlotMachineRandomSeeds.198:
	.byte	0xc
	.byte	0x2
	.byte	0x4
	.byte	0x5
	.byte	0x1
	.byte	0x8
	.byte	0x7
	.byte	0xb
	.byte	0x3
	.byte	0xa
	.byte	0x9
	.byte	0x6
	.type	 sSlotMachineIds.199,object
sSlotMachineIds.199:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.type	 sSlotMachineServiceDayIds.200,object
sSlotMachineServiceDayIds.200:
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.byte	0x5
.text
	.align	2, 0
	.globl	GetSlotMachineId
	.type	 GetSlotMachineId,function
	.thumb_func
GetSlotMachineId:
	push	{r4, r5, lr}
	ldr	r0, .L652
	ldr	r2, [r0]
	ldr	r1, .L652+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x19
	ldr	r0, .L652+0x8
	add	r2, r2, r0
	lsr	r1, r1, #0x19
	ldrh	r2, [r2]
	add	r1, r1, r2
	ldr	r2, .L652+0xc
	ldr	r0, .L652+0x10
	ldrh	r0, [r0]
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r5, r1, r0
	mov	r0, #0x2
	bl	GetPriceReduction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L648	@cond_branch
	ldr	r4, .L652+0x14
	b	.L651
.L653:
	.align	2, 0
.L652:
	.word	gSaveBlock1Ptr
	.word	0x2e68
	.word	0x2e6a
	.word	sSlotMachineRandomSeeds.198
	.word	gSpecialVar_0x8004
	.word	sSlotMachineIds.199
.L648:
	ldr	r4, .L654
.L651:
	add	r0, r5, #0
	mov	r1, #0xc
	bl	__umodsi3
	add	r0, r0, r4
	ldrb	r0, [r0]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L655:
	.align	2, 0
.L654:
	.word	sSlotMachineServiceDayIds.200
.Lfe66:
	.size	 GetSlotMachineId,.Lfe66-GetSlotMachineId
	.align	2, 0
	.globl	FoundAbandonedShipRoom1Key
	.type	 FoundAbandonedShipRoom1Key,function
	.thumb_func
FoundAbandonedShipRoom1Key:
	push	{lr}
	ldr	r1, .L659
	ldr	r0, .L659+0x4
	strh	r0, [r1]
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L657	@cond_branch
	mov	r0, #0x1
	b	.L658
.L660:
	.align	2, 0
.L659:
	.word	gSpecialVar_0x8004
	.word	0x213
.L657:
	mov	r0, #0x0
.L658:
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 FoundAbandonedShipRoom1Key,.Lfe67-FoundAbandonedShipRoom1Key
	.align	2, 0
	.globl	FoundAbandonedShipRoom2Key
	.type	 FoundAbandonedShipRoom2Key,function
	.thumb_func
FoundAbandonedShipRoom2Key:
	push	{lr}
	ldr	r1, .L664
	mov	r0, #0x85
	lsl	r0, r0, #0x2
	strh	r0, [r1]
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L662	@cond_branch
	mov	r0, #0x1
	b	.L663
.L665:
	.align	2, 0
.L664:
	.word	gSpecialVar_0x8004
.L662:
	mov	r0, #0x0
.L663:
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 FoundAbandonedShipRoom2Key,.Lfe68-FoundAbandonedShipRoom2Key
	.align	2, 0
	.globl	FoundAbandonedShipRoom4Key
	.type	 FoundAbandonedShipRoom4Key,function
	.thumb_func
FoundAbandonedShipRoom4Key:
	push	{lr}
	ldr	r1, .L669
	ldr	r0, .L669+0x4
	strh	r0, [r1]
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L667	@cond_branch
	mov	r0, #0x1
	b	.L668
.L670:
	.align	2, 0
.L669:
	.word	gSpecialVar_0x8004
	.word	0x215
.L667:
	mov	r0, #0x0
.L668:
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 FoundAbandonedShipRoom4Key,.Lfe69-FoundAbandonedShipRoom4Key
	.align	2, 0
	.globl	FoundAbandonedShipRoom6Key
	.type	 FoundAbandonedShipRoom6Key,function
	.thumb_func
FoundAbandonedShipRoom6Key:
	push	{lr}
	ldr	r1, .L674
	ldr	r0, .L674+0x4
	strh	r0, [r1]
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L672	@cond_branch
	mov	r0, #0x1
	b	.L673
.L675:
	.align	2, 0
.L674:
	.word	gSpecialVar_0x8004
	.word	0x216
.L672:
	mov	r0, #0x0
.L673:
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 FoundAbandonedShipRoom6Key,.Lfe70-FoundAbandonedShipRoom6Key
	.align	2, 0
	.globl	LeadMonHasEffortRibbon
	.type	 LeadMonHasEffortRibbon,function
	.thumb_func
LeadMonHasEffortRibbon:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L677
	add	r0, r0, r1
	mov	r1, #0x47
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L678:
	.align	2, 0
.L677:
	.word	gPlayerParty
.Lfe71:
	.size	 LeadMonHasEffortRibbon,.Lfe71-LeadMonHasEffortRibbon
	.align	2, 0
	.globl	GiveLeadMonEffortRibbon
	.type	 GiveLeadMonEffortRibbon,function
	.thumb_func
GiveLeadMonEffortRibbon:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r0, #0x2a
	bl	IncrementGameStat
	ldr	r0, .L681
	bl	FlagSet
	mov	r1, #0x1
	mov	r0, sp
	strb	r1, [r0]
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L681+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x47
	mov	r2, sp
	bl	SetMonData
	add	r0, r4, #0
	bl	GetRibbonCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	bls	.L680	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x47
	bl	TryPutSpotTheCutiesOnAir
.L680:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L682:
	.align	2, 0
.L681:
	.word	0x89b
	.word	gPlayerParty
.Lfe72:
	.size	 GiveLeadMonEffortRibbon,.Lfe72-GiveLeadMonEffortRibbon
	.align	2, 0
	.globl	Special_AreLeadMonEVsMaxedOut
	.type	 Special_AreLeadMonEVsMaxedOut,function
	.thumb_func
Special_AreLeadMonEVsMaxedOut:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L686
	add	r0, r0, r1
	bl	GetMonEVCount
	lsl	r0, r0, #0x10
	ldr	r1, .L686+0x4
	cmp	r0, r1
	bhi	.L684	@cond_branch
	mov	r0, #0x0
	b	.L685
.L687:
	.align	2, 0
.L686:
	.word	gPlayerParty
	.word	0x1fd0000
.L684:
	mov	r0, #0x1
.L685:
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 Special_AreLeadMonEVsMaxedOut,.Lfe73-Special_AreLeadMonEVsMaxedOut
	.align	2, 0
	.globl	TryUpdateRusturfTunnelState
	.type	 TryUpdateRusturfTunnelState,function
	.thumb_func
TryUpdateRusturfTunnelState:
	push	{lr}
	mov	r0, #0xc7
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L689	@cond_branch
	ldr	r0, .L695
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x83
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L689	@cond_branch
	sub	r0, r0, #0x75
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L690	@cond_branch
	ldr	r0, .L695+0x4
	mov	r1, #0x4
	b	.L694
.L696:
	.align	2, 0
.L695:
	.word	gSaveBlock1Ptr
	.word	0x409a
.L690:
	mov	r0, #0xe9
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L689	@cond_branch
	ldr	r0, .L697
	mov	r1, #0x5
.L694:
	bl	VarSet
	mov	r0, #0x1
	b	.L693
.L698:
	.align	2, 0
.L697:
	.word	0x409a
.L689:
	mov	r0, #0x0
.L693:
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 TryUpdateRusturfTunnelState,.Lfe74-TryUpdateRusturfTunnelState
	.align	2, 0
	.globl	SetShoalItemFlag
	.type	 SetShoalItemFlag,function
	.thumb_func
SetShoalItemFlag:
	push	{lr}
	ldr	r0, .L700
	bl	FlagSet
	pop	{r0}
	bx	r0
.L701:
	.align	2, 0
.L700:
	.word	0x8bf
.Lfe75:
	.size	 SetShoalItemFlag,.Lfe75-SetShoalItemFlag
	.align	2, 0
	.globl	PutZigzagoonInPlayerParty
	.type	 PutZigzagoonInPlayerParty,function
	.thumb_func
PutZigzagoonInPlayerParty:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	ldr	r5, .L703
	ldr	r1, .L703+0x4
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	add	r0, r5, #0
	mov	r2, #0x7
	mov	r3, #0x20
	bl	CreateMon
	mov	r1, #0x1
	add	r0, sp, #0x10
	strh	r1, [r0]
	add	r0, r5, #0
	mov	r1, #0x2e
	add	r2, sp, #0x10
	bl	SetMonData
	add	r1, sp, #0x10
	mov	r0, #0x21
	strh	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0xd
	add	r2, sp, #0x10
	bl	SetMonData
	add	r0, sp, #0x10
	strh	r4, [r0]
	add	r0, r5, #0
	mov	r1, #0xe
	add	r2, sp, #0x10
	bl	SetMonData
	add	r0, r5, #0
	mov	r1, #0xf
	add	r2, sp, #0x10
	bl	SetMonData
	add	r0, r5, #0
	mov	r1, #0x10
	add	r2, sp, #0x10
	bl	SetMonData
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L704:
	.align	2, 0
.L703:
	.word	gPlayerParty
	.word	0x107
.Lfe76:
	.size	 PutZigzagoonInPlayerParty,.Lfe76-PutZigzagoonInPlayerParty
	.align	2, 0
	.globl	IsStarterInParty
	.type	 IsStarterInParty,function
	.thumb_func
IsStarterInParty:
	push	{r4, r5, r6, lr}
	ldr	r0, .L713
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	GetStarterPokemon
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r4, r5
	bcs	.L707	@cond_branch
.L709:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L713+0x4
	add	r0, r0, r1
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, r6
	bne	.L708	@cond_branch
	mov	r0, #0x1
	b	.L712
.L714:
	.align	2, 0
.L713:
	.word	0x4023
	.word	gPlayerParty
.L708:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L709	@cond_branch
.L707:
	mov	r0, #0x0
.L712:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe77:
	.size	 IsStarterInParty,.Lfe77-IsStarterInParty
	.align	2, 0
	.globl	ScriptCheckFreePokemonStorageSpace
	.type	 ScriptCheckFreePokemonStorageSpace,function
	.thumb_func
ScriptCheckFreePokemonStorageSpace:
	push	{lr}
	bl	CheckFreePokemonStorageSpace
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe78:
	.size	 ScriptCheckFreePokemonStorageSpace,.Lfe78-ScriptCheckFreePokemonStorageSpace
	.align	2, 0
	.globl	IsPokerusInParty
	.type	 IsPokerusInParty,function
	.thumb_func
IsPokerusInParty:
	push	{lr}
	ldr	r0, .L719
	mov	r1, #0x3f
	bl	CheckPartyPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L717	@cond_branch
	mov	r0, #0x1
	b	.L718
.L720:
	.align	2, 0
.L719:
	.word	gPlayerParty
.L717:
	mov	r0, #0x0
.L718:
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 IsPokerusInParty,.Lfe79-IsPokerusInParty
	.align	2, 0
	.globl	ShakeCamera
	.type	 ShakeCamera,function
	.thumb_func
ShakeCamera:
	push	{lr}
	ldr	r0, .L722
	mov	r1, #0x9
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L722+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L722+0x8
	ldrh	r0, [r0]
	mov	r2, #0x0
	strh	r0, [r1, #0x8]
	strh	r2, [r1, #0xa]
	ldr	r0, .L722+0xc
	ldrh	r0, [r0]
	strh	r0, [r1, #0xc]
	ldr	r0, .L722+0x10
	ldrh	r0, [r0]
	strh	r0, [r1, #0xe]
	ldr	r0, .L722+0x14
	ldrh	r0, [r0]
	strh	r0, [r1, #0x10]
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	mov	r0, #0xd6
	bl	PlaySE
	pop	{r0}
	bx	r0
.L723:
	.align	2, 0
.L722:
	.word	Task_ShakeCamera
	.word	gTasks
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_0x8007
	.word	gSpecialVar_0x8004
.Lfe80:
	.size	 ShakeCamera,.Lfe80-ShakeCamera
	.align	2, 0
	.type	 Task_ShakeCamera,function
	.thumb_func
Task_ShakeCamera:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L727
	add	r4, r0, r1
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	bl	__modsi3
	cmp	r0, #0
	bne	.L725	@cond_branch
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4, #0x4]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4]
	neg	r0, r0
	strh	r0, [r4]
	ldrh	r0, [r4, #0x8]
	neg	r0, r0
	strh	r0, [r4, #0x8]
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x8
	ldrsh	r1, [r4, r2]
	bl	SetCameraPanning
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L725	@cond_branch
	add	r0, r5, #0
	bl	StopCameraShake
	bl	InstallCameraPanAheadCallback
.L725:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L728:
	.align	2, 0
.L727:
	.word	gTasks+0x8
.Lfe81:
	.size	 Task_ShakeCamera,.Lfe81-Task_ShakeCamera
	.align	2, 0
	.type	 StopCameraShake,function
	.thumb_func
StopCameraShake:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	bl	EnableBothScriptContexts
	pop	{r0}
	bx	r0
.Lfe82:
	.size	 StopCameraShake,.Lfe82-StopCameraShake
	.align	2, 0
	.globl	FoundBlackGlasses
	.type	 FoundBlackGlasses,function
	.thumb_func
FoundBlackGlasses:
	push	{lr}
	mov	r0, #0x95
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 FoundBlackGlasses,.Lfe83-FoundBlackGlasses
	.align	2, 0
	.globl	SetRoute119Weather
	.type	 SetRoute119Weather,function
	.thumb_func
SetRoute119Weather:
	push	{lr}
	bl	GetLastUsedWarpMapType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsMapTypeOutdoors
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L732	@cond_branch
	mov	r0, #0x14
	bl	SetSav1Weather
.L732:
	pop	{r0}
	bx	r0
.Lfe84:
	.size	 SetRoute119Weather,.Lfe84-SetRoute119Weather
	.align	2, 0
	.globl	SetRoute123Weather
	.type	 SetRoute123Weather,function
	.thumb_func
SetRoute123Weather:
	push	{lr}
	bl	GetLastUsedWarpMapType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsMapTypeOutdoors
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L734	@cond_branch
	mov	r0, #0x15
	bl	SetSav1Weather
.L734:
	pop	{r0}
	bx	r0
.Lfe85:
	.size	 SetRoute123Weather,.Lfe85-SetRoute123Weather
	.align	2, 0
	.globl	GetLeadMonIndex
	.type	 GetLeadMonIndex,function
	.thumb_func
GetLeadMonIndex:
	push	{r4, r5, r6, lr}
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	cmp	r5, r6
	bcs	.L737	@cond_branch
.L739:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L743
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L743+0x4
	cmp	r0, r1
	beq	.L738	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	beq	.L738	@cond_branch
	add	r0, r5, #0
	b	.L742
.L744:
	.align	2, 0
.L743:
	.word	gPlayerParty
	.word	0x432
.L738:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, r6
	bcc	.L739	@cond_branch
.L737:
	mov	r0, #0x0
.L742:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe86:
	.size	 GetLeadMonIndex,.Lfe86-GetLeadMonIndex
	.align	2, 0
	.globl	ScriptGetPartyMonSpecies
	.type	 ScriptGetPartyMonSpecies,function
	.thumb_func
ScriptGetPartyMonSpecies:
	push	{lr}
	ldr	r0, .L746
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L746+0x4
	add	r0, r0, r1
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L747:
	.align	2, 0
.L746:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
.Lfe87:
	.size	 ScriptGetPartyMonSpecies,.Lfe87-ScriptGetPartyMonSpecies
	.align	2, 0
	.globl	TryInitBattleTowerAwardManObjectEvent
	.type	 TryInitBattleTowerAwardManObjectEvent,function
	.thumb_func
TryInitBattleTowerAwardManObjectEvent:
	bx	lr
.Lfe88:
	.size	 TryInitBattleTowerAwardManObjectEvent,.Lfe88-TryInitBattleTowerAwardManObjectEvent
	.align	2, 0
	.globl	GetDaysUntilPacifidlogTMAvailable
	.type	 GetDaysUntilPacifidlogTMAvailable,function
	.thumb_func
GetDaysUntilPacifidlogTMAvailable:
	push	{r4, lr}
	ldr	r0, .L754
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r3, r0, #0
	ldr	r2, .L754+0x4
	mov	r1, #0x0
	ldrsh	r0, [r2, r1]
	sub	r0, r0, r3
	cmp	r0, #0x6
	ble	.L750	@cond_branch
	mov	r0, #0x0
	b	.L753
.L755:
	.align	2, 0
.L754:
	.word	0x40c2
	.word	gLocalTime
.L750:
	ldrh	r1, [r2]
	mov	r4, #0x0
	ldrsh	r0, [r2, r4]
	cmp	r0, #0
	blt	.L751	@cond_branch
	sub	r1, r1, r3
	mov	r0, #0x7
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L753
.L751:
	mov	r0, #0x8
.L753:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe89:
	.size	 GetDaysUntilPacifidlogTMAvailable,.Lfe89-GetDaysUntilPacifidlogTMAvailable
	.align	2, 0
	.globl	SetPacifidlogTMReceivedDay
	.type	 SetPacifidlogTMReceivedDay,function
	.thumb_func
SetPacifidlogTMReceivedDay:
	push	{r4, lr}
	ldr	r0, .L757
	ldr	r4, .L757+0x4
	ldrh	r1, [r4]
	bl	VarSet
	ldrh	r0, [r4]
	pop	{r4}
	pop	{r1}
	bx	r1
.L758:
	.align	2, 0
.L757:
	.word	0x40c2
	.word	gLocalTime
.Lfe90:
	.size	 SetPacifidlogTMReceivedDay,.Lfe90-SetPacifidlogTMReceivedDay
	.align	2, 0
	.globl	MonOTNameNotPlayer
	.type	 MonOTNameNotPlayer,function
	.thumb_func
MonOTNameNotPlayer:
	push	{r4, r5, r6, lr}
	ldr	r6, .L764
	ldrh	r0, [r6]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L764+0x4
	add	r0, r0, r4
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x2
	bne	.L763	@cond_branch
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	ldr	r4, .L764+0x8
	mov	r1, #0x7
	add	r2, r4, #0
	bl	GetMonData
	ldr	r0, .L764+0xc
	ldr	r0, [r0]
	add	r1, r4, #0
	bl	StringCompare
	cmp	r0, #0
	beq	.L761	@cond_branch
.L763:
	mov	r0, #0x1
	b	.L762
.L765:
	.align	2, 0
.L764:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L761:
	mov	r0, #0x0
.L762:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe91:
	.size	 MonOTNameNotPlayer,.Lfe91-MonOTNameNotPlayer
	.align	2, 0
	.globl	BufferLottoTicketNumber
	.type	 BufferLottoTicketNumber,function
	.thumb_func
BufferLottoTicketNumber:
	push	{r4, r5, lr}
	ldr	r2, .L776
	ldrh	r1, [r2]
	ldr	r0, .L776+0x4
	cmp	r1, r0
	bls	.L767	@cond_branch
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	b	.L768
.L777:
	.align	2, 0
.L776:
	.word	gSpecialVar_Result
	.word	0x270f
.L767:
	ldr	r0, .L778
	cmp	r1, r0
	bls	.L769	@cond_branch
	ldr	r4, .L778+0x4
	mov	r0, #0xa1
	strb	r0, [r4]
	add	r4, r4, #0x1
	b	.L775
.L779:
	.align	2, 0
.L778:
	.word	0x3e7
	.word	gStringVar1
.L769:
	cmp	r1, #0x63
	bls	.L771	@cond_branch
	ldr	r4, .L780
	mov	r0, #0xa1
	strb	r0, [r4]
	strb	r0, [r4, #0x1]
	add	r4, r4, #0x2
	b	.L775
.L781:
	.align	2, 0
.L780:
	.word	gStringVar1
.L771:
	cmp	r1, #0x9
	bls	.L773	@cond_branch
	ldr	r4, .L782
	mov	r0, #0xa1
	strb	r0, [r4]
	strb	r0, [r4, #0x1]
	strb	r0, [r4, #0x2]
	add	r4, r4, #0x3
.L775:
	ldrh	r5, [r2]
	add	r0, r5, #0
	bl	CountDigits
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
	b	.L768
.L783:
	.align	2, 0
.L782:
	.word	gStringVar1
.L773:
	ldr	r4, .L784
	mov	r0, #0xa1
	strb	r0, [r4]
	strb	r0, [r4, #0x1]
	strb	r0, [r4, #0x2]
	strb	r0, [r4, #0x3]
	add	r4, r4, #0x4
	ldrh	r5, [r2]
	add	r0, r5, #0
	bl	CountDigits
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
.L768:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L785:
	.align	2, 0
.L784:
	.word	gStringVar1
.Lfe92:
	.size	 BufferLottoTicketNumber,.Lfe92-BufferLottoTicketNumber
	.align	2, 0
	.globl	GetMysteryEventCardVal
	.type	 GetMysteryEventCardVal,function
	.thumb_func
GetMysteryEventCardVal:
	push	{lr}
	ldr	r0, .L797
	ldrh	r0, [r0]
	cmp	r0, #0x4
	bhi	.L793	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L797+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L798:
	.align	2, 0
.L797:
	.word	gSpecialVar_Result
	.word	.L794
	.align	2, 0
	.align	2, 0
.L794:
	.word	.L788
	.word	.L789
	.word	.L790
	.word	.L791
	.word	.L792
.L788:
	mov	r0, #0x3
	b	.L796
.L789:
	mov	r0, #0x4
	b	.L796
.L790:
	mov	r0, #0x0
	b	.L796
.L791:
	mov	r0, #0x1
	b	.L796
.L792:
	mov	r0, #0x2
.L796:
	bl	mevent_081445C0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L795
.L793:
	mov	r0, #0x0
.L795:
	pop	{r1}
	bx	r1
.Lfe93:
	.size	 GetMysteryEventCardVal,.Lfe93-GetMysteryEventCardVal
	.align	2, 0
	.globl	BufferTMHMMoveName
	.type	 BufferTMHMMoveName,function
	.thumb_func
BufferTMHMMoveName:
	push	{r4, lr}
	ldr	r1, .L802
	ldr	r2, .L802+0x4
	add	r0, r2, #0
	ldrh	r2, [r1]
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x39
	bls	.L800	@cond_branch
	mov	r0, #0x0
	b	.L801
.L803:
	.align	2, 0
.L802:
	.word	gSpecialVar_0x8004
	.word	-0x1e2
.L800:
	ldr	r4, .L804
	ldrh	r0, [r1]
	bl	ItemIdToBattleMoveId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L804+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x1
.L801:
	pop	{r4}
	pop	{r1}
	bx	r1
.L805:
	.align	2, 0
.L804:
	.word	gStringVar2
	.word	gMoveNames
.Lfe94:
	.size	 BufferTMHMMoveName,.Lfe94-BufferTMHMMoveName
	.align	2, 0
	.globl	IsBadEggInParty
	.type	 IsBadEggInParty,function
	.thumb_func
IsBadEggInParty:
	push	{r4, r5, lr}
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r4, r5
	bcs	.L808	@cond_branch
.L810:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L814
	add	r0, r0, r1
	mov	r1, #0x4
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L809	@cond_branch
	mov	r0, #0x1
	b	.L813
.L815:
	.align	2, 0
.L814:
	.word	gPlayerParty
.L809:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L810	@cond_branch
.L808:
	mov	r0, #0x0
.L813:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe95:
	.size	 IsBadEggInParty,.Lfe95-IsBadEggInParty
	.align	2, 0
	.globl	InMultiPartnerRoom
	.type	 InMultiPartnerRoom,function
	.thumb_func
InMultiPartnerRoom:
	push	{lr}
	ldr	r0, .L819
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L819+0x4
	cmp	r1, r0
	bne	.L817	@cond_branch
	ldr	r0, .L819+0x8
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bne	.L817	@cond_branch
	mov	r0, #0x1
	b	.L818
.L820:
	.align	2, 0
.L819:
	.word	gSaveBlock1Ptr
	.word	0xf1a
	.word	0x40ce
.L817:
	mov	r0, #0x0
.L818:
	pop	{r1}
	bx	r1
.Lfe96:
	.size	 InMultiPartnerRoom,.Lfe96-InMultiPartnerRoom
	.align	2, 0
	.globl	OffsetCameraForBattle
	.type	 OffsetCameraForBattle,function
	.thumb_func
OffsetCameraForBattle:
	push	{lr}
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetCameraPanning
	pop	{r0}
	bx	r0
.Lfe97:
	.size	 OffsetCameraForBattle,.Lfe97-OffsetCameraForBattle
	.globl	gElevatorFloor_WindowTemplate
	.section .rodata
	.align	2, 0
	.type	 gElevatorFloor_WindowTemplate,object
	.size	 gElevatorFloor_WindowTemplate,8
gElevatorFloor_WindowTemplate:
	.byte	0x0
	.byte	0x15
	.byte	0x1
	.byte	0x8
	.byte	0x4
	.byte	0xf
	.short	0x8
	.globl	gDeptStoreFloorNames
	.align	2, 0
	.type	 gDeptStoreFloorNames,object
gDeptStoreFloorNames:
	.word	gText_B4F
	.word	gText_B3F
	.word	gText_B2F
	.word	gText_B1F
	.word	gText_1F
	.word	gText_2F
	.word	gText_3F
	.word	gText_4F
	.word	gText_5F
	.word	gText_6F
	.word	gText_7F
	.word	gText_8F
	.word	gText_9F
	.word	gText_10F
	.word	gText_11F
	.word	gText_Rooftop
	.size	 gDeptStoreFloorNames,64
	.align	1, 0
	.type	 sElevatorWindowTiles_Ascending,object
sElevatorWindowTiles_Ascending:
	.short	0x329
	.short	0x32a
	.short	0x32b
	.short	0x331
	.short	0x332
	.short	0x333
	.short	0x339
	.short	0x33a
	.short	0x33b
	.size	 sElevatorWindowTiles_Ascending,18
	.align	1, 0
	.type	 sElevatorWindowTiles_Descending,object
sElevatorWindowTiles_Descending:
	.short	0x329
	.short	0x32b
	.short	0x32a
	.short	0x331
	.short	0x333
	.short	0x332
	.short	0x339
	.short	0x33b
	.short	0x33a
	.size	 sElevatorWindowTiles_Descending,18
.text
	.align	2, 0
	.globl	SetDeptStoreFloor
	.type	 SetDeptStoreFloor,function
	.thumb_func
SetDeptStoreFloor:
	push	{lr}
	ldr	r0, .L832
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x15]
	sub	r0, r0, #0x10
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x5
	bhi	.L830	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L832+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L833:
	.align	2, 0
.L832:
	.word	gSaveBlock1Ptr
	.word	.L831
	.align	2, 0
	.align	2, 0
.L831:
	.word	.L830
	.word	.L825
	.word	.L826
	.word	.L827
	.word	.L828
	.word	.L829
.L825:
	mov	r1, #0x5
	b	.L823
.L826:
	mov	r1, #0x6
	b	.L823
.L827:
	mov	r1, #0x7
	b	.L823
.L828:
	mov	r1, #0x8
	b	.L823
.L829:
	mov	r1, #0xf
	b	.L823
.L830:
	mov	r1, #0x4
.L823:
	ldr	r0, .L834
	bl	VarSet
	pop	{r0}
	bx	r0
.L835:
	.align	2, 0
.L834:
	.word	0x4043
.Lfe98:
	.size	 SetDeptStoreFloor,.Lfe98-SetDeptStoreFloor
	.align	2, 0
	.globl	GetDeptStoreDefaultFloorChoice
	.type	 GetDeptStoreDefaultFloorChoice,function
	.thumb_func
GetDeptStoreDefaultFloorChoice:
	push	{r4, lr}
	ldr	r2, .L847
	mov	r0, #0x0
	strh	r0, [r2]
	ldr	r1, .L847+0x4
	strh	r0, [r1]
	ldr	r0, .L847+0x8
	ldr	r3, [r0]
	mov	r0, #0x14
	ldrsb	r0, [r3, r0]
	add	r4, r1, #0
	cmp	r0, #0xd
	bne	.L837	@cond_branch
	ldrb	r0, [r3, #0x15]
	sub	r0, r0, #0x10
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x4
	bhi	.L837	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L847+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L848:
	.align	2, 0
.L847:
	.word	sLilycoveDeptStore_NeverRead
	.word	sLilycoveDeptStore_DefaultFloorChoice
	.word	gSaveBlock1Ptr
	.word	.L844
	.align	2, 0
	.align	2, 0
.L844:
	.word	.L843
	.word	.L842
	.word	.L841
	.word	.L840
	.word	.L839
.L839:
	mov	r0, #0x0
	strh	r0, [r2]
	b	.L846
.L840:
	mov	r0, #0x0
	strh	r0, [r2]
	mov	r0, #0x1
	b	.L846
.L841:
	mov	r0, #0x0
	strh	r0, [r2]
	mov	r0, #0x2
	b	.L846
.L842:
	mov	r0, #0x0
	strh	r0, [r2]
	mov	r0, #0x3
	b	.L846
.L843:
	mov	r0, #0x0
	strh	r0, [r2]
	mov	r0, #0x4
.L846:
	strh	r0, [r4]
.L837:
	ldrh	r0, [r4]
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe99:
	.size	 GetDeptStoreDefaultFloorChoice,.Lfe99-GetDeptStoreDefaultFloorChoice
	.section .rodata
	.type	 sElevatorTripLength.303,object
sElevatorTripLength.303:
	.byte	0x8
	.byte	0x10
	.byte	0x18
	.byte	0x20
	.byte	0x26
	.byte	0x2e
	.byte	0x34
	.byte	0x38
	.byte	0x39
.text
	.align	2, 0
	.globl	MoveElevator
	.type	 MoveElevator,function
	.thumb_func
MoveElevator:
	push	{r4, r5, r6, lr}
	ldr	r0, .L853
	mov	r1, #0x9
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L853+0x4
	add	r4, r1, r0
	mov	r3, #0x0
	strh	r3, [r4, #0x2]
	strh	r3, [r4, #0x4]
	mov	r6, #0x1
	strh	r6, [r4, #0x8]
	ldr	r0, .L853+0x8
	ldr	r1, .L853+0xc
	ldrh	r2, [r0]
	ldrh	r0, [r1]
	cmp	r2, r0
	bls	.L850	@cond_branch
	sub	r0, r2, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	strh	r6, [r4, #0xc]
	b	.L851
.L854:
	.align	2, 0
.L853:
	.word	Task_MoveElevator
	.word	gTasks+0x8
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
.L850:
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	strh	r3, [r4, #0xc]
.L851:
	cmp	r5, #0x8
	bls	.L852	@cond_branch
	mov	r5, #0x8
.L852:
	ldr	r0, .L855
	add	r0, r5, r0
	ldrb	r0, [r0]
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	ldrb	r1, [r4, #0xc]
	add	r0, r5, #0
	bl	MoveElevatorWindowLights
	mov	r0, #0x59
	bl	PlaySE
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L856:
	.align	2, 0
.L855:
	.word	sElevatorTripLength.303
.Lfe100:
	.size	 MoveElevator,.Lfe100-MoveElevator
	.align	2, 0
	.type	 Task_MoveElevator,function
	.thumb_func
Task_MoveElevator:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L860
	add	r4, r0, r1
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L858	@cond_branch
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0x8]
	neg	r0, r0
	strh	r0, [r4, #0x8]
	mov	r2, #0x8
	ldrsh	r1, [r4, r2]
	mov	r0, #0x0
	bl	SetCameraPanning
	mov	r0, #0x4
	ldrsh	r1, [r4, r0]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L858	@cond_branch
	mov	r0, #0x49
	bl	PlaySE
	add	r0, r5, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	bl	InstallCameraPanAheadCallback
.L858:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L861:
	.align	2, 0
.L860:
	.word	gTasks+0x8
.Lfe101:
	.size	 Task_MoveElevator,.Lfe101-Task_MoveElevator
	.align	2, 0
	.globl	ShowDeptStoreElevatorFloorSelect
	.type	 ShowDeptStoreElevatorFloorSelect,function
	.thumb_func
ShowDeptStoreElevatorFloorSelect:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	ldr	r5, .L863
	ldr	r0, .L863+0x4
	bl	AddWindow
	strb	r0, [r5]
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	ldr	r4, .L863+0x8
	mov	r0, #0x1
	add	r1, r4, #0
	mov	r2, #0x40
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	ldrb	r0, [r5]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xff
	mov	r9, r1
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r8, r1
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, r4, #0
	bl	AddTextPrinterParameterized
	ldr	r6, .L863+0xc
	ldr	r4, .L863+0x10
	ldrh	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldr	r1, [r0]
	mov	r0, #0x1
	mov	r2, #0x40
	bl	GetStringCenterAlignXOffset
	add	r3, r0, #0
	ldrb	r0, [r5]
	ldrh	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldr	r2, [r1]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x11
	str	r1, [sp]
	mov	r1, r9
	str	r1, [sp, #0x4]
	mov	r1, r8
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	bl	AddTextPrinterParameterized
	ldrb	r0, [r5]
	bl	PutWindowTilemap
	ldrb	r0, [r5]
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L864:
	.align	2, 0
.L863:
	.word	sTutorMoveAndElevatorWindowId
	.word	gElevatorFloor_WindowTemplate
	.word	gText_ElevatorNowOn
	.word	gDeptStoreFloorNames
	.word	gSpecialVar_0x8005
.Lfe102:
	.size	 ShowDeptStoreElevatorFloorSelect,.Lfe102-ShowDeptStoreElevatorFloorSelect
	.align	2, 0
	.globl	CloseDeptStoreElevatorWindow
	.type	 CloseDeptStoreElevatorWindow,function
	.thumb_func
CloseDeptStoreElevatorWindow:
	push	{r4, lr}
	ldr	r4, .L866
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L867:
	.align	2, 0
.L866:
	.word	sTutorMoveAndElevatorWindowId
.Lfe103:
	.size	 CloseDeptStoreElevatorWindow,.Lfe103-CloseDeptStoreElevatorWindow
	.section .rodata
	.type	 sElevatorLightCycles.316,object
sElevatorLightCycles.316:
	.byte	0x3
	.byte	0x6
	.byte	0x9
	.byte	0xc
	.byte	0xf
	.byte	0x12
	.byte	0x15
	.byte	0x18
	.byte	0x1b
.text
	.align	2, 0
	.type	 MoveElevatorWindowLights,function
	.thumb_func
MoveElevatorWindowLights:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r4, .L870
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L869	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L870+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	strh	r0, [r1, #0xa]
	strh	r5, [r1, #0xc]
	ldr	r0, .L870+0x8
	add	r0, r6, r0
	ldrb	r0, [r0]
	strh	r0, [r1, #0xe]
.L869:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L871:
	.align	2, 0
.L870:
	.word	Task_MoveElevatorWindowLights
	.word	gTasks
	.word	sElevatorLightCycles.316
.Lfe104:
	.size	 MoveElevatorWindowLights,.Lfe104-MoveElevatorWindowLights
	.align	2, 0
	.type	 Task_MoveElevatorWindowLights,function
	.thumb_func
Task_MoveElevatorWindowLights:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	lsl	r0, r0, #0x2
	ldr	r1, [sp]
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L897
	add	r6, r0, r1
	mov	r2, #0x2
	ldrsh	r0, [r6, r2]
	cmp	r0, #0x6
	bne	.L873	@cond_branch
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
	mov	r1, #0x4
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L874	@cond_branch
	mov	r1, #0x0
	ldr	r2, .L897+0x4
	mov	sl, r2
.L878:
	mov	r5, #0x0
	add	r7, r1, #0x7
	lsl	r0, r1, #0x1
	add	r2, r1, #0x1
	mov	r8, r2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r9, r0
.L882:
	add	r4, r5, #0
	add	r4, r4, #0x8
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r9
	add	r0, r0, sl
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r2, r1, #0
	orr	r2, r2, r0
	add	r0, r4, #0
	add	r1, r7, #0
	bl	MapGridSetMetatileIdAt
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L882	@cond_branch
	mov	r2, r8
	lsl	r0, r2, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L878	@cond_branch
	b	.L885
.L898:
	.align	2, 0
.L897:
	.word	gTasks+0x8
	.word	sElevatorWindowTiles_Ascending
.L874:
	mov	r1, #0x0
	ldr	r0, .L899
	mov	sl, r0
.L889:
	mov	r5, #0x0
	add	r7, r1, #0x7
	lsl	r0, r1, #0x1
	add	r2, r1, #0x1
	mov	r8, r2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r9, r0
.L893:
	add	r4, r5, #0
	add	r4, r4, #0x8
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r9
	add	r0, r0, sl
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r2, r1, #0
	orr	r2, r2, r0
	add	r0, r4, #0
	add	r1, r7, #0
	bl	MapGridSetMetatileIdAt
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L893	@cond_branch
	mov	r2, r8
	lsl	r0, r2, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L889	@cond_branch
.L885:
	bl	DrawWholeMapView
	mov	r0, #0x0
	strh	r0, [r6, #0x2]
	mov	r0, #0x0
	ldrsh	r1, [r6, r0]
	mov	r2, #0x6
	ldrsh	r0, [r6, r2]
	cmp	r1, r0
	bne	.L873	@cond_branch
	ldr	r0, [sp]
	bl	DestroyTask
.L873:
	ldrh	r0, [r6, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L900:
	.align	2, 0
.L899:
	.word	sElevatorWindowTiles_Descending
.Lfe105:
	.size	 Task_MoveElevatorWindowLights,.Lfe105-Task_MoveElevatorWindowLights
	.align	2, 0
	.globl	BufferVarsForIVRater
	.type	 BufferVarsForIVRater,function
	.thumb_func
BufferVarsForIVRater:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x18
	ldr	r6, .L917
	ldrh	r0, [r6]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L917+0x4
	add	r0, r0, r4
	mov	r1, #0x27
	bl	GetMonData
	str	r0, [sp]
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x28
	bl	GetMonData
	str	r0, [sp, #0x4]
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x29
	bl	GetMonData
	str	r0, [sp, #0x8]
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x2a
	bl	GetMonData
	str	r0, [sp, #0xc]
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x2b
	bl	GetMonData
	str	r0, [sp, #0x10]
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x2c
	bl	GetMonData
	str	r0, [sp, #0x14]
	ldr	r1, .L917+0x8
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r4, #0x0
	add	r2, r1, #0
.L905:
	lsl	r0, r4, #0x2
	add	r0, r0, sp
	ldr	r1, [r0]
	ldrh	r0, [r2]
	add	r0, r0, r1
	strh	r0, [r2]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L905	@cond_branch
	ldr	r2, .L917+0xc
	mov	r0, #0x0
	strh	r0, [r2]
	ldr	r1, .L917+0x10
	ldr	r0, [sp]
	strh	r0, [r1]
	mov	r4, #0x1
	add	r6, r2, #0
	add	r7, r1, #0
.L910:
	ldrh	r0, [r6]
	lsl	r0, r0, #0x2
	mov	r2, sp
	add	r1, r2, r0
	lsl	r0, r4, #0x2
	add	r5, r2, r0
	ldr	r1, [r1]
	ldr	r0, [r5]
	cmp	r1, r0
	bcs	.L911	@cond_branch
	strh	r4, [r6]
	b	.L916
.L918:
	.align	2, 0
.L917:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_0x8007
.L911:
	cmp	r1, r0
	bne	.L909	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L909	@cond_branch
	strh	r4, [r6]
	ldr	r0, [r5]
.L916:
	strh	r0, [r7]
.L909:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L910	@cond_branch
	add	sp, sp, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe106:
	.size	 BufferVarsForIVRater,.Lfe106-BufferVarsForIVRater
	.section .rodata
	.align	1, 0
	.type	 sPokemonCenters.326,object
sPokemonCenters.326:
	.short	0x202
	.short	0x301
	.short	0x405
	.short	0x504
	.short	0x604
	.short	0x700
	.short	0x804
	.short	0x90b
	.short	0xa05
	.short	0xb05
	.short	0xc02
	.short	0xd06
	.short	0xe03
	.short	0xf02
	.short	0x100c
	.short	0x100a
	.short	0x1a35
	.short	0x193c
	.short	0xffff
.text
	.align	2, 0
	.globl	UsedPokemonCenterWarp
	.type	 UsedPokemonCenterWarp,function
	.thumb_func
UsedPokemonCenterWarp:
	push	{r4, lr}
	ldr	r0, .L927
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r2, .L927+0x4
	ldrh	r0, [r2]
	ldr	r1, .L927+0x8
	cmp	r0, r1
	beq	.L921	@cond_branch
	add	r4, r1, #0
	add	r1, r2, #0
.L923:
	ldrh	r0, [r2]
	cmp	r0, r3
	bne	.L922	@cond_branch
	mov	r0, #0x1
	b	.L926
.L928:
	.align	2, 0
.L927:
	.word	gLastUsedWarp
	.word	sPokemonCenters.326
	.word	0xffff
.L922:
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	ldrh	r0, [r1]
	cmp	r0, r4
	bne	.L923	@cond_branch
.L921:
	mov	r0, #0x0
.L926:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe107:
	.size	 UsedPokemonCenterWarp,.Lfe107-UsedPokemonCenterWarp
	.align	2, 0
	.globl	PlayerNotAtTrainerHillEntrance
	.type	 PlayerNotAtTrainerHillEntrance,function
	.thumb_func
PlayerNotAtTrainerHillEntrance:
	push	{lr}
	ldr	r0, .L932
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L932+0x4
	cmp	r1, r0
	beq	.L930	@cond_branch
	mov	r0, #0x1
	b	.L931
.L933:
	.align	2, 0
.L932:
	.word	gSaveBlock1Ptr
	.word	0x3c1a
.L930:
	mov	r0, #0x0
.L931:
	pop	{r1}
	bx	r1
.Lfe108:
	.size	 PlayerNotAtTrainerHillEntrance,.Lfe108-PlayerNotAtTrainerHillEntrance
	.align	2, 0
	.globl	UpdateFrontierManiac
	.type	 UpdateFrontierManiac,function
	.thumb_func
UpdateFrontierManiac:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L935
	bl	GetVarPointer
	add	r5, r0, #0
	ldrh	r0, [r5]
	add	r4, r4, r0
	strh	r4, [r5]
	ldrh	r0, [r5]
	mov	r1, #0xa
	bl	__umodsi3
	strh	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L936:
	.align	2, 0
.L935:
	.word	0x402f
.Lfe109:
	.size	 UpdateFrontierManiac,.Lfe109-UpdateFrontierManiac
	.section .rodata
	.align	2, 0
	.type	 sFrontierManiacMessages.336,object
sFrontierManiacMessages.336:
	.word	BattleFrontier_Lounge2_Text_SalonMaidenIsThere
	.word	BattleFrontier_Lounge2_Text_SalonMaidenSilverMons
	.word	BattleFrontier_Lounge2_Text_SalonMaidenGoldMons
	.word	BattleFrontier_Lounge2_Text_DoubleBattleAdvice1
	.word	BattleFrontier_Lounge2_Text_DoubleBattleAdvice2
	.word	BattleFrontier_Lounge2_Text_DoubleBattleAdvice3
	.word	BattleFrontier_Lounge2_Text_MultiBattleAdvice
	.word	BattleFrontier_Lounge2_Text_MultiBattleAdvice
	.word	BattleFrontier_Lounge2_Text_MultiBattleAdvice
	.word	BattleFrontier_Lounge2_Text_LinkMultiBattleAdvice
	.word	BattleFrontier_Lounge2_Text_LinkMultiBattleAdvice
	.word	BattleFrontier_Lounge2_Text_LinkMultiBattleAdvice
	.word	BattleFrontier_Lounge2_Text_DomeAceIsThere
	.word	BattleFrontier_Lounge2_Text_DomeAceSilverMons
	.word	BattleFrontier_Lounge2_Text_DomeAceGoldMons
	.word	BattleFrontier_Lounge2_Text_FactoryHeadIsThere
	.word	BattleFrontier_Lounge2_Text_FactoryHeadSilverMons
	.word	BattleFrontier_Lounge2_Text_FactoryHeadGoldMons
	.word	BattleFrontier_Lounge2_Text_PalaceMavenIsThere
	.word	BattleFrontier_Lounge2_Text_PalaceMavenSilverMons
	.word	BattleFrontier_Lounge2_Text_PalaceMavenGoldMons
	.word	BattleFrontier_Lounge2_Text_ArenaTycoonIsThere
	.word	BattleFrontier_Lounge2_Text_ArenaTycoonSilverMons
	.word	BattleFrontier_Lounge2_Text_ArenaTycoonGoldMons
	.word	BattleFrontier_Lounge2_Text_PikeQueenIsThere
	.word	BattleFrontier_Lounge2_Text_PikeQueenSilverMons
	.word	BattleFrontier_Lounge2_Text_PikeQueenGoldMons
	.word	BattleFrontier_Lounge2_Text_PyramidKingIsThere
	.word	BattleFrontier_Lounge2_Text_PyramidKingSilverMons
	.word	BattleFrontier_Lounge2_Text_PyramidKingGoldMons
	.type	 sFrontierManiacStreakThresholds.337,object
sFrontierManiacStreakThresholds.337:
	.byte	0x15
	.byte	0x38
	.byte	0x15
	.byte	0x23
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0x2
	.byte	0x4
	.byte	0x7
	.byte	0x15
	.byte	0x7
	.byte	0x15
	.byte	0xe
	.byte	0x1c
	.byte	0xd
	.byte	0x46
	.byte	0x7
	.byte	0x38
.text
	.align	2, 0
	.globl	ShowFrontierManiacMessage
	.type	 ShowFrontierManiacMessage,function
	.thumb_func
ShowFrontierManiacMessage:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	ldr	r0, .L973
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0x9
	bls	.LCB6450
	b	.L938	@long jump
.LCB6450:
	lsl	r0, r6, #0x2
	ldr	r1, .L973+0x4
	add	r1, r0, r1
	ldr	r1, [r1]
	add	r2, r0, #0
	mov	pc, r1
.L974:
	.align	2, 0
.L973:
	.word	0x402f
	.word	.L963
	.align	2, 0
	.align	2, 0
.L963:
	.word	.L942
	.word	.L942
	.word	.L942
	.word	.L942
	.word	.L945
	.word	.L948
	.word	.L951
	.word	.L954
	.word	.L957
	.word	.L960
.L942:
	ldr	r0, .L975
	ldr	r0, [r0]
	mov	r3, #0xce
	lsl	r3, r3, #0x4
	add	r1, r0, r3
	add	r3, r1, r2
	ldr	r1, .L975+0x4
	add	r0, r0, r1
	add	r1, r0, r2
	ldrh	r0, [r3]
	ldrh	r2, [r1]
	cmp	r0, r2
	bcs	.L971	@cond_branch
	b	.L961
.L976:
	.align	2, 0
.L975:
	.word	gSaveBlock2Ptr
	.word	0xce2
.L945:
	ldr	r0, .L977
	ldr	r0, [r0]
	ldr	r3, .L977+0x4
	add	r2, r0, r3
	add	r3, r3, #0x2
.L972:
	add	r1, r0, r3
	ldrh	r0, [r2]
	ldrh	r3, [r1]
	cmp	r0, r3
	bcs	.L971	@cond_branch
	b	.L961
.L978:
	.align	2, 0
.L977:
	.word	gSaveBlock2Ptr
	.word	0xd0c
.L948:
	ldr	r0, .L979
	ldr	r0, [r0]
	ldr	r1, .L979+0x4
	add	r2, r0, r1
	ldr	r3, .L979+0x8
	b	.L972
.L980:
	.align	2, 0
.L979:
	.word	gSaveBlock2Ptr
	.word	0xde2
	.word	0xde4
.L951:
	ldr	r0, .L981
	ldr	r0, [r0]
	ldr	r1, .L981+0x4
	add	r2, r0, r1
	ldr	r3, .L981+0x8
	b	.L972
.L982:
	.align	2, 0
.L981:
	.word	gSaveBlock2Ptr
	.word	0xdc8
	.word	0xdca
.L954:
	ldr	r0, .L983
	ldr	r0, [r0]
	ldr	r1, .L983+0x4
	add	r2, r0, r1
	ldr	r3, .L983+0x8
	b	.L972
.L984:
	.align	2, 0
.L983:
	.word	gSaveBlock2Ptr
	.word	0xdda
	.word	0xddc
.L957:
	ldr	r0, .L985
	ldr	r0, [r0]
	ldr	r1, .L985+0x4
	add	r2, r0, r1
	ldr	r3, .L985+0x8
	b	.L972
.L986:
	.align	2, 0
.L985:
	.word	gSaveBlock2Ptr
	.word	0xe04
	.word	0xe06
.L960:
	ldr	r0, .L987
	ldr	r0, [r0]
	ldr	r1, .L987+0x4
	add	r2, r0, r1
	ldr	r3, .L987+0x8
	add	r1, r0, r3
	ldrh	r0, [r2]
	ldrh	r3, [r1]
	cmp	r0, r3
	bcc	.L961	@cond_branch
.L971:
	add	r4, r0, #0
	b	.L938
.L988:
	.align	2, 0
.L987:
	.word	gSaveBlock2Ptr
	.word	0xe1a
	.word	0xe1c
.L961:
	ldrh	r4, [r1]
.L938:
	mov	r2, #0x0
	ldr	r5, .L989
	lsl	r0, r6, #0x1
	add	r1, r0, r5
	ldrb	r1, [r1]
	add	r3, r0, #0
	ldr	r7, .L989+0x4
	cmp	r1, r4
	bcs	.L966	@cond_branch
	add	r1, r3, #0
.L967:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1
	bhi	.L966	@cond_branch
	add	r0, r2, r1
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, r4
	bcc	.L967	@cond_branch
.L966:
	add	r0, r3, r6
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L990:
	.align	2, 0
.L989:
	.word	sFrontierManiacStreakThresholds.337
	.word	sFrontierManiacMessages.336
.Lfe110:
	.size	 ShowFrontierManiacMessage,.Lfe110-ShowFrontierManiacMessage
	.section .rodata
	.align	1, 0
	.type	 sBattleTowerStreakThresholds.341,object
sBattleTowerStreakThresholds.341:
	.short	0x7
	.short	0xe
	.short	0x15
	.short	0x1c
	.short	0x23
	.short	0x31
	.short	0x3f
	.short	0x4d
	.short	0x5b
	.short	0x0
.text
	.align	2, 0
	.globl	BufferBattleTowerElevatorFloors
	.type	 BufferBattleTowerElevatorFloors,function
	.thumb_func
BufferBattleTowerElevatorFloors:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1001
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, .L1001+0x4
	ldr	r0, [r0]
	ldr	r1, .L1001+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1e
	lsr	r4, r0, #0x1e
	cmp	r5, #0x2
	bne	.L992	@cond_branch
	mov	r0, #0xa9
	lsl	r0, r0, #0x1
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L992	@cond_branch
	ldr	r1, .L1001+0xc
	mov	r0, #0x5
	strh	r0, [r1]
	ldr	r1, .L1001+0x10
	mov	r0, #0x4
	strh	r0, [r1]
	b	.L991
.L1002:
	.align	2, 0
.L1001:
	.word	0x40ce
	.word	gSaveBlock2Ptr
	.word	0xca9
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
.L999:
	mov	r0, #0x4
	strh	r0, [r6]
	add	r0, r3, #0x5
	b	.L1000
.L992:
	mov	r3, #0x0
	ldr	r6, .L1003
	ldr	r7, .L1003+0x4
	lsl	r1, r4, #0x1
	lsl	r2, r5, #0x2
	ldr	r4, .L1003+0x8
	ldr	r0, .L1003+0xc
	ldr	r0, [r0]
	add	r1, r1, r2
	mov	r2, #0xce
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
.L996:
	lsl	r0, r3, #0x1
	add	r0, r0, r4
	ldrh	r0, [r0]
	cmp	r0, r1
	bhi	.L999	@cond_branch
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x8
	bls	.L996	@cond_branch
	mov	r0, #0x4
	strh	r0, [r6]
	mov	r0, #0xc
.L1000:
	strh	r0, [r7]
.L991:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1004:
	.align	2, 0
.L1003:
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
	.word	sBattleTowerStreakThresholds.341
	.word	gSaveBlock2Ptr
.Lfe111:
	.size	 BufferBattleTowerElevatorFloors,.Lfe111-BufferBattleTowerElevatorFloors
	.align	2, 0
	.globl	ShowScrollableMultichoice
	.type	 ShowScrollableMultichoice,function
	.thumb_func
ShowScrollableMultichoice:
	push	{r4, lr}
	ldr	r0, .L1025
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L1025+0x4
	add	r3, r0, r1
	ldr	r1, .L1025+0x8
	ldrh	r0, [r1]
	strh	r0, [r3, #0x1e]
	ldrh	r0, [r1]
	cmp	r0, #0xc
	bls	.LCB6870
	b	.L1020	@long jump
.LCB6870:
	lsl	r0, r0, #0x2
	ldr	r1, .L1025+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1026:
	.align	2, 0
.L1025:
	.word	Task_ShowScrollableMultichoice
	.word	gTasks
	.word	gSpecialVar_0x8004
	.word	.L1021
	.align	2, 0
	.align	2, 0
.L1021:
	.word	.L1007
	.word	.L1008
	.word	.L1009
	.word	.L1010
	.word	.L1011
	.word	.L1012
	.word	.L1013
	.word	.L1014
	.word	.L1015
	.word	.L1017
	.word	.L1017
	.word	.L1018
	.word	.L1019
.L1007:
	mov	r1, #0x0
	mov	r0, #0x1
	strh	r0, [r3, #0x8]
	strh	r0, [r3, #0xa]
	strh	r0, [r3, #0xc]
	strh	r0, [r3, #0xe]
	b	.L1022
.L1008:
	mov	r1, #0x0
	mov	r0, #0x5
	strh	r0, [r3, #0x8]
	mov	r0, #0x8
	strh	r0, [r3, #0xa]
	mov	r0, #0x1
	strh	r0, [r3, #0xc]
	strh	r0, [r3, #0xe]
	mov	r0, #0x9
	strh	r0, [r3, #0x10]
	mov	r0, #0xa
	b	.L1023
.L1009:
	mov	r2, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r1, #0xc
	strh	r1, [r3, #0xa]
	mov	r0, #0x1
	strh	r0, [r3, #0xc]
	strh	r0, [r3, #0xe]
	mov	r0, #0x7
	b	.L1024
.L1010:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0xb
	strh	r0, [r3, #0xa]
	mov	r0, #0xe
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xf
	strh	r0, [r3, #0x10]
	mov	r0, #0xc
	b	.L1023
.L1011:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0xb
	strh	r0, [r3, #0xa]
	mov	r0, #0xe
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xf
	strh	r0, [r3, #0x10]
	mov	r0, #0xc
	b	.L1023
.L1012:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0x5
	strh	r0, [r3, #0xa]
	mov	r0, #0xe
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xf
	strh	r0, [r3, #0x10]
	mov	r0, #0xc
	b	.L1023
.L1013:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0x10
	strh	r0, [r3, #0xa]
	mov	r0, #0xe
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xf
	strh	r0, [r3, #0x10]
	mov	r0, #0xc
	b	.L1023
.L1014:
	mov	r2, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r1, #0xc
	strh	r1, [r3, #0xa]
	mov	r0, #0xf
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xe
.L1024:
	strh	r0, [r3, #0x10]
	strh	r1, [r3, #0x12]
	strh	r2, [r3, #0x14]
	strh	r4, [r3, #0x26]
	b	.L1006
.L1015:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0xa
	strh	r0, [r3, #0xa]
	mov	r0, #0x11
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xb
	strh	r0, [r3, #0x10]
	mov	r0, #0xc
	b	.L1023
.L1017:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0xb
	strh	r0, [r3, #0xa]
	mov	r0, #0xf
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xe
	strh	r0, [r3, #0x10]
	mov	r0, #0xc
	b	.L1023
.L1018:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0x7
	strh	r0, [r3, #0xa]
	mov	r0, #0x13
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xa
	strh	r0, [r3, #0x10]
	mov	r0, #0xc
	b	.L1023
.L1019:
	mov	r1, #0x0
	mov	r0, #0x6
	strh	r0, [r3, #0x8]
	mov	r0, #0x7
	strh	r0, [r3, #0xa]
	mov	r0, #0x11
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0xc
.L1022:
	strh	r0, [r3, #0x10]
.L1023:
	strh	r0, [r3, #0x12]
	strh	r1, [r3, #0x14]
	strh	r4, [r3, #0x26]
	b	.L1006
.L1020:
	ldr	r1, .L1027
	mov	r0, #0x7f
	strh	r0, [r1]
	add	r0, r4, #0
	bl	DestroyTask
.L1006:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1028:
	.align	2, 0
.L1027:
	.word	gSpecialVar_Result
.Lfe112:
	.size	 ShowScrollableMultichoice,.Lfe112-ShowScrollableMultichoice
	.section .rodata
	.align	2, 0
	.type	 sScrollableMultichoiceOptions,object
sScrollableMultichoiceOptions:
	.word	gText_Exit
	.space	60
	.word	gText_BlueFlute
	.word	gText_YellowFlute
	.word	gText_RedFlute
	.word	gText_WhiteFlute
	.word	gText_BlackFlute
	.word	gText_PrettyChair
	.word	gText_PrettyDesk
	.word	gText_Exit
	.space	32
	.word	gText_0Pts
	.word	gText_10Pts
	.word	gText_20Pts
	.word	gText_30Pts
	.word	gText_40Pts
	.word	gText_50Pts
	.word	gText_60Pts
	.word	gText_70Pts
	.word	gText_80Pts
	.word	gText_90Pts
	.word	gText_100Pts
	.word	gText_QuestionMark
	.space	16
	.word	gText_KissPoster16BP
	.word	gText_KissCushion32BP
	.word	gText_SmoochumDoll32BP
	.word	gText_TogepiDoll48BP
	.word	gText_MeowthDoll48BP
	.word	gText_ClefairyDoll48BP
	.word	gText_DittoDoll48BP
	.word	gText_CyndaquilDoll80BP
	.word	gText_ChikoritaDoll80BP
	.word	gText_TotodileDoll80BP
	.word	gText_Exit
	.space	20
	.word	gText_Dolls
	.word	gText_MatDesk
	.word	gText_OrnaPost
	.word	gText_ChairPlant
	.word	gText_Contest
	.word	gText_TMs
	.word	gText_MegaC
	.word	gText_MegaB
	.word	gText_MegaA
	.word	gText_MegaS
	.word	gText_Exit
	.space	20
	.word	gText_NUPoke
	.word	gText_RUPoke
	.word	gText_UUPoke
	.word	gText_OUPoke
	.word	gText_Exit
	.space	44
	.word	gText_WhiteHerbBP
	.word	gText_PowerHerbBP
	.word	gText_ScopeLensBP
	.word	gText_WideLensBP
	.word	gText_QuickClawBP
	.word	gText_LifeOrbBP
	.word	gText_ChoiceBandBP
	.word	gText_ChoiceSpecsBP
	.word	gText_ChoiceScarfBP
	.word	gText_RockyHelmetBP
	.word	gText_WeaknessPolicyBP
	.word	gText_AssaultVestBP
	.word	gText_FocusSashBP
	.word	gText_KingsRockBP
	.word	gText_LeftoversBP
	.word	gText_Exit
	.word	gText_EnergyPowder50
	.word	gText_EnergyRoot80
	.word	gText_HealPowder50
	.word	gText_RevivalHerb300
	.word	gText_Protein1000
	.word	gText_Iron1000
	.word	gText_Carbos1000
	.word	gText_Calcium1000
	.word	gText_Zinc1000
	.word	gText_HPUp1000
	.word	gText_PPUp3000
	.word	gText_Exit
	.space	16
	.word	gText_BattleTower2
	.word	gText_BattleDome
	.word	gText_BattlePalace
	.word	gText_BattleArena
	.word	gText_BattleFactory
	.word	gText_BattlePike
	.word	gText_BattlePyramid
	.word	gText_RankingHall
	.word	gText_ExchangeService
	.word	gText_Exit
	.space	24
	.word	gText_Softboiled16BP
	.word	gText_SeismicToss24BP
	.word	gText_DreamEater24BP
	.word	gText_MegaPunch24BP
	.word	gText_MegaKick48BP
	.word	gText_BodySlam48BP
	.word	gText_RockSlide48BP
	.word	gText_Counter48BP
	.word	gText_ThunderWave48BP
	.word	gText_SwordsDance48BP
	.word	gText_Exit
	.space	20
	.word	gText_DefenseCurl16BP
	.word	gText_Snore24BP
	.word	gText_MudSlap24BP
	.word	gText_Swift24BP
	.word	gText_IcyWind24BP
	.word	gText_Endure48BP
	.word	gText_PsychUp48BP
	.word	gText_IcePunch48BP
	.word	gText_ThunderPunch48BP
	.word	gText_FirePunch48BP
	.word	gText_Exit
	.space	20
	.word	gText_SlateportCity
	.word	gText_BattleFrontier
	.word	gText_SouthernIsland
	.word	gText_NavelRock
	.word	gText_BirthIsland
	.word	gText_FarawayIsland
	.word	gText_Exit
	.space	36
	.word	gText_BattleTrainers
	.word	gText_BattleBasics
	.word	gText_PokemonNature
	.word	gText_PokemonMoves
	.word	gText_Underpowered
	.word	gText_WhenInDanger
	.word	gText_Exit
	.space	36
	.size	 sScrollableMultichoiceOptions,832
.text
	.align	2, 0
	.type	 Task_ShowScrollableMultichoice,function
	.thumb_func
Task_ShowScrollableMultichoice:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L1038
	add	r6, r0, r1
	bl	ScriptContext2_Enable
	ldr	r0, .L1038+0x4
	mov	r5, #0x0
	strh	r5, [r0]
	ldr	r1, .L1038+0x8
	mov	r0, #0x40
	strb	r0, [r1]
	ldrh	r0, [r6, #0x1e]
	mov	r1, #0x0
	bl	FillFrontierExchangeCornerWindowAndItemIcon
	ldrb	r0, [r6, #0x1e]
	mov	r1, #0x0
	bl	ShowBattleFrontierTutorWindow
	ldr	r4, .L1038+0xc
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	lsl	r0, r0, #0x3
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r0, .L1038+0x10
	strh	r5, [r0]
	bl	InitScrollableMultichoice
	mov	r3, #0x0
	mov	r4, #0x0
	mov	r2, #0xa
	ldrsh	r0, [r6, r2]
	add	r1, sp, #0x18
	mov	r8, r1
	cmp	r3, r0
	bge	.L1031	@cond_branch
	ldr	r5, .L1038+0x14
.L1033:
	lsl	r1, r4, #0x2
	ldr	r0, .L1038+0x18
	ldrh	r0, [r0]
	lsl	r0, r0, #0x6
	add	r1, r1, r0
	add	r1, r1, r5
	ldr	r0, [r1]
	ldr	r1, .L1038+0xc
	ldr	r2, [r1]
	lsl	r1, r4, #0x3
	add	r1, r1, r2
	str	r0, [r1]
	str	r4, [r1, #0x4]
	add	r1, r3, #0
	bl	DisplayTextAndGetWidth
	add	r3, r0, #0
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r2, #0xa
	ldrsh	r0, [r6, r2]
	cmp	r4, r0
	blt	.L1033	@cond_branch
.L1031:
	add	r0, r3, #0
	bl	ConvertPixelWidthToTileWidth
	strh	r0, [r6, #0x10]
	mov	r1, #0xc
	ldrsh	r0, [r6, r1]
	mov	r2, #0x10
	ldrsh	r1, [r6, r2]
	add	r0, r0, r1
	cmp	r0, #0x1d
	ble	.L1035	@cond_branch
	mov	r0, #0x1d
	sub	r0, r0, r1
	cmp	r0, #0
	bge	.L1036	@cond_branch
	mov	r0, #0x0
.L1036:
	strh	r0, [r6, #0xc]
.L1035:
	ldrb	r2, [r6, #0xc]
	ldrb	r3, [r6, #0xe]
	ldrb	r0, [r6, #0x10]
	str	r0, [sp]
	ldrb	r0, [r6, #0x12]
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	mov	r0, #0x64
	str	r0, [sp, #0xc]
	add	r0, sp, #0x10
	mov	r1, #0x0
	bl	CreateWindowTemplate
	ldr	r0, [sp, #0x10]		@ created by thumb_load_double_from_address
	ldr	r1, [sp, #0x14]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x18]
	str	r1, [sp, #0x1c]
	mov	r0, r8
	bl	AddWindow
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0x22]
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	ldr	r4, .L1038+0x1c
	ldrh	r0, [r6, #0xa]
	strh	r0, [r4, #0xc]
	ldrh	r0, [r6, #0x8]
	strh	r0, [r4, #0xe]
	ldrh	r0, [r6, #0x22]
	strb	r0, [r4, #0x10]
	add	r0, r7, #0
	bl	ScrollableMultichoice_UpdateScrollArrows
	ldrh	r1, [r6, #0x16]
	ldrh	r2, [r6, #0x18]
	add	r0, r4, #0
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r6, #0x24]
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L1038
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1038+0x20
	str	r1, [r0]
	add	sp, sp, #0x20
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1039:
	.align	2, 0
.L1038:
	.word	gTasks
	.word	sScrollableMultichoice_ScrollOffset
	.word	sScrollableMultichoice_ItemSpriteId
	.word	sScrollableMultichoice_ListMenuItem
	.word	sFrontierExchangeCorner_NeverRead
	.word	sScrollableMultichoiceOptions
	.word	gSpecialVar_0x8004
	.word	gScrollableMultichoice_ListMenuTemplate
	.word	ScrollableMultichoice_ProcessInput
.Lfe113:
	.size	 Task_ShowScrollableMultichoice,.Lfe113-Task_ShowScrollableMultichoice
	.align	2, 0
	.type	 InitScrollableMultichoice,function
	.thumb_func
InitScrollableMultichoice:
	ldr	r1, .L1041
	ldr	r0, .L1041+0x4
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r0, .L1041+0x8
	str	r0, [r1, #0x4]
	mov	r0, #0x0
	str	r0, [r1, #0x8]
	mov	r2, #0x0
	mov	r0, #0x1
	strh	r0, [r1, #0xc]
	strh	r0, [r1, #0xe]
	strb	r2, [r1, #0x10]
	strb	r2, [r1, #0x11]
	mov	r0, #0x8
	strb	r0, [r1, #0x12]
	strb	r2, [r1, #0x13]
	mov	r0, #0x21
	strb	r0, [r1, #0x14]
	mov	r0, #0x31
	strb	r0, [r1, #0x15]
	mov	r0, #0x0
	strb	r0, [r1, #0x16]
	mov	r0, #0x1
	strb	r0, [r1, #0x17]
	bx	lr
.L1042:
	.align	2, 0
.L1041:
	.word	gScrollableMultichoice_ListMenuTemplate
	.word	sScrollableMultichoice_ListMenuItem
	.word	ScrollableMultichoice_MoveCursor
.Lfe114:
	.size	 InitScrollableMultichoice,.Lfe114-InitScrollableMultichoice
	.align	2, 0
	.type	 ScrollableMultichoice_MoveCursor,function
	.thumb_func
ScrollableMultichoice_MoveCursor:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1045
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L1044	@cond_branch
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L1045+0x4
	add	r4, r4, r0
	ldrh	r0, [r4, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	mov	r2, #0x0
	bl	ListMenuGetScrollAndRow
	ldr	r1, .L1045+0x8
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r1]
	ldrh	r0, [r4, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	bl	ListMenuGetCurrentItemArrayId
	ldrh	r0, [r4, #0x1e]
	ldr	r5, .L1045+0xc
	ldrh	r1, [r5]
	bl	HideFrontierExchangeCornerItemIcon
	ldrh	r0, [r4, #0x1e]
	mov	r1, sp
	ldrh	r1, [r1]
	bl	FillFrontierExchangeCornerWindowAndItemIcon
	ldrb	r0, [r4, #0x1e]
	mov	r1, sp
	ldrh	r1, [r1]
	bl	ShowBattleFrontierTutorMoveDescription
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r5]
.L1044:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1046:
	.align	2, 0
.L1045:
	.word	ScrollableMultichoice_ProcessInput
	.word	gTasks
	.word	sScrollableMultichoice_ScrollOffset
	.word	sFrontierExchangeCorner_NeverRead
.Lfe115:
	.size	 ScrollableMultichoice_MoveCursor,.Lfe115-ScrollableMultichoice_MoveCursor
	.align	2, 0
	.type	 ScrollableMultichoice_ProcessInput,function
	.thumb_func
ScrollableMultichoice_ProcessInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L1058
	add	r6, r0, r1
	ldrh	r0, [r6, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L1050	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L1051	@cond_branch
	b	.L1048
.L1059:
	.align	2, 0
.L1058:
	.word	gTasks
.L1050:
	ldr	r1, .L1060
	mov	r0, #0x7f
	strh	r0, [r1]
	mov	r0, #0x5
	bl	PlaySE
	b	.L1057
.L1061:
	.align	2, 0
.L1060:
	.word	gSpecialVar_Result
.L1051:
	ldr	r0, .L1062
	strh	r4, [r0]
	mov	r0, #0x5
	bl	PlaySE
	mov	r1, #0x14
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L1057	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	sub	r0, r0, #0x1
	cmp	r4, r0
	bne	.L1054	@cond_branch
.L1057:
	add	r0, r5, #0
	bl	CloseScrollableMultichoice
	b	.L1048
.L1063:
	.align	2, 0
.L1062:
	.word	gSpecialVar_Result
.L1054:
	add	r0, r5, #0
	bl	ScrollableMultichoice_RemoveScrollArrows
	ldr	r0, .L1064
	str	r0, [r6]
	bl	EnableBothScriptContexts
.L1048:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1065:
	.align	2, 0
.L1064:
	.word	sub_813A600
.Lfe116:
	.size	 ScrollableMultichoice_ProcessInput,.Lfe116-ScrollableMultichoice_ProcessInput
	.align	2, 0
	.type	 CloseScrollableMultichoice,function
	.thumb_func
CloseScrollableMultichoice:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L1067
	add	r4, r4, r0
	ldrh	r0, [r4, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, sp
	bl	ListMenuGetCurrentItemArrayId
	ldrh	r0, [r4, #0x1e]
	mov	r1, sp
	ldrh	r1, [r1]
	bl	HideFrontierExchangeCornerItemIcon
	add	r0, r5, #0
	bl	ScrollableMultichoice_RemoveScrollArrows
	ldrh	r0, [r4, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldr	r0, .L1067+0x4
	ldr	r0, [r0]
	bl	Free
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
	bl	EnableBothScriptContexts
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1068:
	.align	2, 0
.L1067:
	.word	gTasks
	.word	sScrollableMultichoice_ListMenuItem
.Lfe117:
	.size	 CloseScrollableMultichoice,.Lfe117-CloseScrollableMultichoice
	.align	2, 0
	.type	 sub_813A600,function
	.thumb_func
sub_813A600:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1075
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x14
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	beq	.L1070	@cond_branch
	cmp	r0, #0x2
	bne	.L1070	@cond_branch
	mov	r0, #0x1
	strh	r0, [r1, #0x14]
	ldr	r0, .L1075+0x4
	str	r0, [r1]
.L1070:
	pop	{r0}
	bx	r0
.L1076:
	.align	2, 0
.L1075:
	.word	gTasks
	.word	sub_813A664
.Lfe118:
	.size	 sub_813A600,.Lfe118-sub_813A600
	.align	2, 0
	.globl	sub_813A630
	.type	 sub_813A630,function
	.thumb_func
sub_813A630:
	push	{lr}
	ldr	r0, .L1080
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	bne	.L1078	@cond_branch
	bl	EnableBothScriptContexts
	b	.L1079
.L1081:
	.align	2, 0
.L1080:
	.word	sub_813A600
.L1078:
	ldr	r0, .L1082
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x14]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x14]
.L1079:
	pop	{r0}
	bx	r0
.L1083:
	.align	2, 0
.L1082:
	.word	gTasks
.Lfe119:
	.size	 sub_813A630,.Lfe119-sub_813A630
	.align	2, 0
	.type	 sub_813A664,function
	.thumb_func
sub_813A664:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ScriptContext2_Enable
	add	r0, r4, #0
	bl	ScrollableMultichoice_UpdateScrollArrows
	ldr	r1, .L1085
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L1085+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1086:
	.align	2, 0
.L1085:
	.word	gTasks
	.word	ScrollableMultichoice_ProcessInput
.Lfe120:
	.size	 sub_813A664,.Lfe120-sub_813A664
	.section .rodata
	.align	2, 0
	.type	 sScrollableMultichoice_ScrollArrowsTemplate.372,object
	.size	 sScrollableMultichoice_ScrollArrowsTemplate.372,16
sScrollableMultichoice_ScrollArrowsTemplate.372:
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.short	0x0
	.short	0x0
	.short	0x7d0
	.short	0x64
	.byte	0x0
	.space	1
.text
	.align	2, 0
	.type	 ScrollableMultichoice_UpdateScrollArrows,function
	.thumb_func
ScrollableMultichoice_UpdateScrollArrows:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L1089
	add	r4, r1, r0
	mov	r1, sp
	ldr	r0, .L1089+0x4
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r0]
	str	r0, [r1]
	mov	r0, #0x8
	ldrsh	r1, [r4, r0]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	beq	.L1088	@cond_branch
	mov	r2, sp
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsr	r0, r1, #0x1f
	add	r1, r1, r0
	asr	r1, r1, #0x1
	lsl	r1, r1, #0x3
	add	r1, r1, #0xc
	mov	r5, #0xc
	ldrsh	r0, [r4, r5]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	mov	r3, #0x0
	strb	r1, [r2, #0x1]
	mov	r1, sp
	mov	r0, #0x8
	strb	r0, [r1, #0x2]
	mov	r0, #0x10
	ldrsh	r1, [r4, r0]
	lsr	r0, r1, #0x1f
	add	r1, r1, r0
	asr	r1, r1, #0x1
	lsl	r1, r1, #0x3
	add	r1, r1, #0xc
	mov	r5, #0xc
	ldrsh	r0, [r4, r5]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	strb	r1, [r2, #0x4]
	mov	r1, sp
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x3
	add	r0, r0, #0xa
	strb	r0, [r1, #0x5]
	mov	r0, sp
	strh	r3, [r0, #0x6]
	mov	r2, sp
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x8]
	sub	r0, r0, r1
	strh	r0, [r2, #0x8]
	ldr	r1, .L1089+0x8
	mov	r0, sp
	bl	AddScrollIndicatorArrowPair
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x20]
.L1088:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1090:
	.align	2, 0
.L1089:
	.word	gTasks
	.word	sScrollableMultichoice_ScrollArrowsTemplate.372
	.word	sScrollableMultichoice_ScrollOffset
.Lfe121:
	.size	 ScrollableMultichoice_UpdateScrollArrows,.Lfe121-ScrollableMultichoice_UpdateScrollArrows
	.align	2, 0
	.type	 ScrollableMultichoice_RemoveScrollArrows,function
	.thumb_func
ScrollableMultichoice_RemoveScrollArrows:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L1093
	add	r2, r1, r0
	mov	r0, #0x8
	ldrsh	r1, [r2, r0]
	mov	r3, #0xa
	ldrsh	r0, [r2, r3]
	cmp	r1, r0
	beq	.L1092	@cond_branch
	ldrh	r0, [r2, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveScrollIndicatorArrowPair
.L1092:
	pop	{r0}
	bx	r0
.L1094:
	.align	2, 0
.L1093:
	.word	gTasks
.Lfe122:
	.size	 ScrollableMultichoice_RemoveScrollArrows,.Lfe122-ScrollableMultichoice_RemoveScrollArrows
	.align	2, 0
	.globl	ShowGlassWorkshopMenu
	.type	 ShowGlassWorkshopMenu,function
	.thumb_func
ShowGlassWorkshopMenu:
	bx	lr
.Lfe123:
	.size	 ShowGlassWorkshopMenu,.Lfe123-ShowGlassWorkshopMenu
	.align	2, 0
	.globl	SetBattleTowerLinkPlayerGfx
	.type	 SetBattleTowerLinkPlayerGfx,function
	.thumb_func
SetBattleTowerLinkPlayerGfx:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r6, .L1104
	ldr	r0, .L1104+0x4
	add	r5, r0, #0
.L1100:
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0
	bne	.L1101	@cond_branch
	sub	r0, r5, r4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	VarSet
	b	.L1099
.L1105:
	.align	2, 0
.L1104:
	.word	gLinkPlayers
	.word	0x401f
.L1101:
	sub	r0, r5, r4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x69
	bl	VarSet
.L1099:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	bls	.L1100	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe124:
	.size	 SetBattleTowerLinkPlayerGfx,.Lfe124-SetBattleTowerLinkPlayerGfx
	.section .rodata
	.align	2, 0
	.type	 sNatureGirlMessages.385,object
	.size	 sNatureGirlMessages.385,100
sNatureGirlMessages.385:
	.word	BattleFrontier_Lounge5_Text_NatureGirlHardy
	.word	BattleFrontier_Lounge5_Text_NatureGirlLonely
	.word	BattleFrontier_Lounge5_Text_NatureGirlBrave
	.word	BattleFrontier_Lounge5_Text_NatureGirlAdamant
	.word	BattleFrontier_Lounge5_Text_NatureGirlNaughty
	.word	BattleFrontier_Lounge5_Text_NatureGirlBold
	.word	BattleFrontier_Lounge5_Text_NatureGirlDocileNaiveQuietQuirky
	.word	BattleFrontier_Lounge5_Text_NatureGirlRelaxed
	.word	BattleFrontier_Lounge5_Text_NatureGirlImpish
	.word	BattleFrontier_Lounge5_Text_NatureGirlLax
	.word	BattleFrontier_Lounge5_Text_NatureGirlTimid
	.word	BattleFrontier_Lounge5_Text_NatureGirlHasty
	.word	BattleFrontier_Lounge5_Text_NatureGirlSerious
	.word	BattleFrontier_Lounge5_Text_NatureGirlJolly
	.word	BattleFrontier_Lounge5_Text_NatureGirlDocileNaiveQuietQuirky
	.word	BattleFrontier_Lounge5_Text_NatureGirlModest
	.word	BattleFrontier_Lounge5_Text_NatureGirlMild
	.word	BattleFrontier_Lounge5_Text_NatureGirlDocileNaiveQuietQuirky
	.word	BattleFrontier_Lounge5_Text_NatureGirlBashful
	.word	BattleFrontier_Lounge5_Text_NatureGirlRash
	.word	BattleFrontier_Lounge5_Text_NatureGirlCalm
	.word	BattleFrontier_Lounge5_Text_NatureGirlGentle
	.word	BattleFrontier_Lounge5_Text_NatureGirlSassy
	.word	BattleFrontier_Lounge5_Text_NatureGirlCareful
	.word	BattleFrontier_Lounge5_Text_NatureGirlDocileNaiveQuietQuirky
.text
	.align	2, 0
	.globl	ShowNatureGirlMessage
	.type	 ShowNatureGirlMessage,function
	.thumb_func
ShowNatureGirlMessage:
	push	{lr}
	ldr	r1, .L1108
	ldrh	r0, [r1]
	cmp	r0, #0x5
	bls	.L1107	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1]
.L1107:
	ldrh	r1, [r1]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1108+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	GetNature
	lsl	r0, r0, #0x18
	ldr	r1, .L1108+0x8
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.L1109:
	.align	2, 0
.L1108:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	sNatureGirlMessages.385
.Lfe125:
	.size	 ShowNatureGirlMessage,.Lfe125-ShowNatureGirlMessage
	.align	2, 0
	.globl	UpdateFrontierGambler
	.type	 UpdateFrontierGambler,function
	.thumb_func
UpdateFrontierGambler:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L1111
	bl	GetVarPointer
	add	r5, r0, #0
	ldrh	r0, [r5]
	add	r4, r4, r0
	strh	r4, [r5]
	ldrh	r0, [r5]
	mov	r1, #0xc
	bl	__umodsi3
	strh	r0, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1112:
	.align	2, 0
.L1111:
	.word	0x4030
.Lfe126:
	.size	 UpdateFrontierGambler,.Lfe126-UpdateFrontierGambler
	.section .rodata
	.align	2, 0
	.type	 sFrontierGamblerLookingMessages.392,object
sFrontierGamblerLookingMessages.392:
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleTowerSingle
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleTowerDouble
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleTowerMulti
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleDomeSingle
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleDomeDouble
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleFactorySingle
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleFactoryDouble
	.word	BattleFrontier_Lounge3_Text_ChallengeBattlePalaceSingle
	.word	BattleFrontier_Lounge3_Text_ChallengeBattlePalaceDouble
	.word	BattleFrontier_Lounge3_Text_ChallengeBattleArena
	.word	BattleFrontier_Lounge3_Text_ChallengeBattlePike
	.word	BattleFrontier_Lounge3_Text_ChallengeBattlePyramid
.text
	.align	2, 0
	.globl	ShowFrontierGamblerLookingMessage
	.type	 ShowFrontierGamblerLookingMessage,function
	.thumb_func
ShowFrontierGamblerLookingMessage:
	push	{r4, lr}
	ldr	r0, .L1114
	bl	VarGet
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r1, .L1114+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ShowFieldMessage
	ldr	r0, .L1114+0x8
	add	r1, r4, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L1115:
	.align	2, 0
.L1114:
	.word	0x4030
	.word	sFrontierGamblerLookingMessages.392
	.word	0x4031
.Lfe127:
	.size	 ShowFrontierGamblerLookingMessage,.Lfe127-ShowFrontierGamblerLookingMessage
	.section .rodata
	.align	2, 0
	.type	 sFrontierGamblerGoMessages.396,object
sFrontierGamblerGoMessages.396:
	.word	BattleFrontier_Lounge3_Text_GetToBattleTowerSingle
	.word	BattleFrontier_Lounge3_Text_GetToBattleTowerDouble
	.word	BattleFrontier_Lounge3_Text_GetToBattleTowerMulti
	.word	BattleFrontier_Lounge3_Text_GetToBattleDomeSingle
	.word	BattleFrontier_Lounge3_Text_GetToBattleDomeDouble
	.word	BattleFrontier_Lounge3_Text_GetToBattleFactorySingle
	.word	BattleFrontier_Lounge3_Text_GetToBattleFactoryDouble
	.word	BattleFrontier_Lounge3_Text_GetToBattlePalaceSingle
	.word	BattleFrontier_Lounge3_Text_GetToBattlePalaceDouble
	.word	BattleFrontier_Lounge3_Text_GetToBattleArena
	.word	BattleFrontier_Lounge3_Text_GetToBattlePike
	.word	BattleFrontier_Lounge3_Text_GetToBattlePyramid
.text
	.align	2, 0
	.globl	ShowFrontierGamblerGoMessage
	.type	 ShowFrontierGamblerGoMessage,function
	.thumb_func
ShowFrontierGamblerGoMessage:
	push	{r4, lr}
	ldr	r4, .L1117
	ldr	r0, .L1117+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0xe
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	ShowFieldMessage
	pop	{r4}
	pop	{r0}
	bx	r0
.L1118:
	.align	2, 0
.L1117:
	.word	sFrontierGamblerGoMessages.396
	.word	0x4031
.Lfe128:
	.size	 ShowFrontierGamblerGoMessage,.Lfe128-ShowFrontierGamblerGoMessage
	.section .rodata
	.align	1, 0
	.type	 sFrontierChallenges.400,object
sFrontierChallenges.400:
	.short	0x0
	.short	0x1
	.short	0x2
	.short	0x100
	.short	0x101
	.short	0x400
	.short	0x401
	.short	0x200
	.short	0x201
	.short	0x300
	.short	0x500
	.short	0x600
.text
	.align	2, 0
	.globl	FrontierGamblerSetWonOrLost
	.type	 FrontierGamblerSetWonOrLost,function
	.thumb_func
FrontierGamblerSetWonOrLost:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L1124
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r0, .L1124+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L1124+0x8
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r4, .L1124+0xc
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bne	.L1120	@cond_branch
	ldr	r1, .L1124+0x10
	lsl	r0, r6, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r0, r5, #0x8
	add	r0, r0, r7
	cmp	r1, r0
	bne	.L1120	@cond_branch
	mov	r0, r8
	cmp	r0, #0
	beq	.L1122	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2
	bl	VarSet
	b	.L1120
.L1125:
	.align	2, 0
.L1124:
	.word	0x40ce
	.word	0x4031
	.word	0x40cf
	.word	0x4033
	.word	sFrontierChallenges.400
.L1122:
	add	r0, r4, #0
	mov	r1, #0x3
	bl	VarSet
.L1120:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe129:
	.size	 FrontierGamblerSetWonOrLost,.Lfe129-FrontierGamblerSetWonOrLost
	.align	2, 0
	.globl	UpdateBattlePointsWindow
	.type	 UpdateBattlePointsWindow,function
	.thumb_func
UpdateBattlePointsWindow:
	push	{lr}
	add	sp, sp, #-0x2c
	ldr	r0, .L1127
	ldr	r0, [r0]
	ldr	r1, .L1127+0x4
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r0, sp, #0xc
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1127+0x8
	bl	StringCopy
	mov	r0, #0x1
	add	r1, sp, #0xc
	mov	r2, #0x30
	bl	GetStringRightAlignXOffset
	add	r3, r0, #0
	ldr	r0, .L1127+0xc
	ldrb	r0, [r0]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	add	r2, sp, #0xc
	bl	AddTextPrinterParameterized
	add	sp, sp, #0x2c
	pop	{r0}
	bx	r0
.L1128:
	.align	2, 0
.L1127:
	.word	gSaveBlock2Ptr
	.word	0xeb8
	.word	gText_BP
	.word	sBattlePointsWindowId
.Lfe130:
	.size	 UpdateBattlePointsWindow,.Lfe130-UpdateBattlePointsWindow
	.section .rodata
	.align	2, 0
	.type	 sBattlePoints_WindowTemplate.407,object
	.size	 sBattlePoints_WindowTemplate.407,8
sBattlePoints_WindowTemplate.407:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0xf
	.short	0x8
.text
	.align	2, 0
	.globl	ShowBattlePointsWindow
	.type	 ShowBattlePointsWindow,function
	.thumb_func
ShowBattlePointsWindow:
	push	{r4, lr}
	ldr	r4, .L1130
	ldr	r0, .L1130+0x4
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	bl	UpdateBattlePointsWindow
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L1131:
	.align	2, 0
.L1130:
	.word	sBattlePointsWindowId
	.word	sBattlePoints_WindowTemplate.407
.Lfe131:
	.size	 ShowBattlePointsWindow,.Lfe131-ShowBattlePointsWindow
	.align	2, 0
	.globl	CloseBattlePointsWindow
	.type	 CloseBattlePointsWindow,function
	.thumb_func
CloseBattlePointsWindow:
	push	{r4, lr}
	ldr	r4, .L1133
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L1134:
	.align	2, 0
.L1133:
	.word	sBattlePointsWindowId
.Lfe132:
	.size	 CloseBattlePointsWindow,.Lfe132-CloseBattlePointsWindow
	.align	2, 0
	.globl	TakeFrontierBattlePoints
	.type	 TakeFrontierBattlePoints,function
	.thumb_func
TakeFrontierBattlePoints:
	push	{lr}
	ldr	r0, .L1139
	ldr	r0, [r0]
	ldr	r2, .L1139+0x4
	add	r1, r0, r2
	ldr	r0, .L1139+0x8
	ldrh	r2, [r1]
	ldrh	r0, [r0]
	cmp	r2, r0
	bcs	.L1136	@cond_branch
	mov	r0, #0x0
	b	.L1138
.L1140:
	.align	2, 0
.L1139:
	.word	gSaveBlock2Ptr
	.word	0xeb8
	.word	gSpecialVar_0x8004
.L1136:
	sub	r0, r2, r0
.L1138:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.Lfe133:
	.size	 TakeFrontierBattlePoints,.Lfe133-TakeFrontierBattlePoints
	.align	2, 0
	.globl	GiveFrontierBattlePoints
	.type	 GiveFrontierBattlePoints,function
	.thumb_func
GiveFrontierBattlePoints:
	push	{lr}
	ldr	r0, .L1144
	ldr	r0, [r0]
	ldr	r1, .L1144+0x4
	add	r2, r0, r1
	ldrh	r1, [r2]
	ldr	r0, .L1144+0x8
	ldrh	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L1144+0xc
	cmp	r1, r0
	ble	.L1142	@cond_branch
	strh	r0, [r2]
	b	.L1143
.L1145:
	.align	2, 0
.L1144:
	.word	gSaveBlock2Ptr
	.word	0xeb8
	.word	gSpecialVar_0x8004
	.word	0x270f
.L1142:
	strh	r1, [r2]
.L1143:
	pop	{r0}
	bx	r0
.Lfe134:
	.size	 GiveFrontierBattlePoints,.Lfe134-GiveFrontierBattlePoints
	.align	2, 0
	.globl	GetFrontierBattlePoints
	.type	 GetFrontierBattlePoints,function
	.thumb_func
GetFrontierBattlePoints:
	ldr	r0, .L1147
	ldr	r0, [r0]
	ldr	r1, .L1147+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	bx	lr
.L1148:
	.align	2, 0
.L1147:
	.word	gSaveBlock2Ptr
	.word	0xeb8
.Lfe135:
	.size	 GetFrontierBattlePoints,.Lfe135-GetFrontierBattlePoints
	.section .rodata
	.align	2, 0
	.type	 sFrontierExchangeCorner_ItemIconWindowTemplate.423,object
	.size	 sFrontierExchangeCorner_ItemIconWindowTemplate.423,8
sFrontierExchangeCorner_ItemIconWindowTemplate.423:
	.byte	0x0
	.byte	0x2
	.byte	0x9
	.byte	0x4
	.byte	0x4
	.byte	0xf
	.short	0x14
.text
	.align	2, 0
	.globl	ShowFrontierExchangeCornerItemIconWindow
	.type	 ShowFrontierExchangeCornerItemIconWindow,function
	.thumb_func
ShowFrontierExchangeCornerItemIconWindow:
	push	{r4, lr}
	ldr	r4, .L1150
	ldr	r0, .L1150+0x4
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.L1151:
	.align	2, 0
.L1150:
	.word	sFrontierExchangeCorner_ItemIconWindowId
	.word	sFrontierExchangeCorner_ItemIconWindowTemplate.423
.Lfe136:
	.size	 ShowFrontierExchangeCornerItemIconWindow,.Lfe136-ShowFrontierExchangeCornerItemIconWindow
	.align	2, 0
	.globl	CloseFrontierExchangeCornerItemIconWindow
	.type	 CloseFrontierExchangeCornerItemIconWindow,function
	.thumb_func
CloseFrontierExchangeCornerItemIconWindow:
	push	{r4, lr}
	ldr	r4, .L1153
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L1154:
	.align	2, 0
.L1153:
	.word	sFrontierExchangeCorner_ItemIconWindowId
.Lfe137:
	.size	 CloseFrontierExchangeCornerItemIconWindow,.Lfe137-CloseFrontierExchangeCornerItemIconWindow
	.section .rodata
	.align	1, 0
	.type	 sFrontierExchangeCorner_Decor1.430,object
sFrontierExchangeCorner_Decor1.430:
	.short	0x4b
	.short	0x67
	.short	0x57
	.short	0x4f
	.short	0x54
	.short	0x55
	.short	0x56
	.short	0x50
	.short	0x51
	.short	0x52
	.short	0xffff
	.align	1, 0
	.type	 sFrontierExchangeCorner_Decor2.431,object
sFrontierExchangeCorner_Decor2.431:
	.short	0x96
	.short	0xb4
	.short	0xcb
	.short	0x9f
	.short	0x189
	.short	0x1e2
	.short	0x4
	.short	0x3
	.short	0x2
	.short	0x1
	.short	0xffff
	.align	1, 0
	.type	 sFrontierExchangeCorner_Vitamins.432,object
sFrontierExchangeCorner_Vitamins.432:
	.short	0x4
	.short	0x3
	.short	0x2
	.short	0x1
	.short	0xffff
	.align	1, 0
	.type	 sFrontierExchangeCorner_HoldItems.433,object
sFrontierExchangeCorner_HoldItems.433:
	.short	0xd4
	.short	0x109
	.short	0xe3
	.short	0x10d
	.short	0xd7
	.short	0x11a
	.short	0xda
	.short	0x10b
	.short	0x10a
	.short	0x125
	.short	0x12f
	.short	0x130
	.short	0x10c
	.short	0xdb
	.short	0xe5
	.short	0xffff
	.align	2, 0
	.type	 sFrontierExchangeCorner_Decor1Descriptions.434,object
sFrontierExchangeCorner_Decor1Descriptions.434:
	.word	BattleFrontier_ExchangeServiceCorner_Text_KissPosterDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_KissCushionDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_SmoochumDollDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_TogepiDollDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_MeowthDollDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_ClefairyDollDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_DittoDollDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_CyndaquilDollDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_ChikoritaDollDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_TotodileDollDesc
	.word	gText_Exit
	.align	2, 0
	.type	 sFrontierExchangeCorner_Decor2Descriptions.435,object
sFrontierExchangeCorner_Decor2Descriptions.435:
	.word	BattleFrontier_ExchangeServiceCorner_Text_Doll
	.word	BattleFrontier_ExchangeServiceCorner_Text_MatDesk
	.word	BattleFrontier_ExchangeServiceCorner_Text_OrnaPost
	.word	BattleFrontier_ExchangeServiceCorner_Text_ChairPlant
	.word	BattleFrontier_ExchangeServiceCorner_Text_Contest
	.word	BattleFrontier_ExchangeServiceCorner_Text_TM
	.word	BattleFrontier_ExchangeServiceCorner_Text_MegaC
	.word	BattleFrontier_ExchangeServiceCorner_Text_MegaB
	.word	BattleFrontier_ExchangeServiceCorner_Text_MegaA
	.word	BattleFrontier_ExchangeServiceCorner_Text_MegaS
	.word	gText_Exit
	.align	2, 0
	.type	 sFrontierExchangeCorner_VitaminsDescriptions.436,object
sFrontierExchangeCorner_VitaminsDescriptions.436:
	.word	BattleFrontier_ExchangeServiceCorner_Text_ProteinDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_CalciumDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_IronDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_ZincDesc
	.word	gText_Exit
	.align	2, 0
	.type	 sFrontierExchangeCorner_HoldItemsDescriptions.437,object
sFrontierExchangeCorner_HoldItemsDescriptions.437:
	.word	BattleFrontier_ExchangeServiceCorner_Text_WhiteHerbDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_PowerHerbDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_ScopeLensDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_WideLensDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_QuickClawDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_LifeOrbDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_ChoiceBandDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_ChoiceSpecsDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_ChoiceScarfDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_RockyHelmetDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_WeaknessPolicyDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_AssaultVestDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_FocusSashDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_KingsRockDesc
	.word	BattleFrontier_ExchangeServiceCorner_Text_LeftoversDesc
	.word	gText_Exit
.text
	.align	2, 0
	.type	 FillFrontierExchangeCornerWindowAndItemIcon,function
	.thumb_func
FillFrontierExchangeCornerWindowAndItemIcon:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsr	r4, r0, #0x10
	ldr	r1, .L1168
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	cmp	r0, #0x3
	bls	.LCB8444
	b	.L1156	@long jump
.LCB8444:
	mov	r0, #0xd8
	str	r0, [sp]
	mov	r0, #0x20
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x11
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillWindowPixelRect
	cmp	r4, #0x4
	beq	.L1161	@cond_branch
	cmp	r4, #0x4
	bgt	.L1166	@cond_branch
	cmp	r4, #0x3
	beq	.L1158	@cond_branch
	b	.L1156
.L1169:
	.align	2, 0
.L1168:
	.word	-0x30000
.L1166:
	cmp	r4, #0x5
	beq	.L1162	@cond_branch
	cmp	r4, #0x6
	beq	.L1163	@cond_branch
	b	.L1156
.L1158:
	ldr	r1, .L1170
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	str	r4, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized2
	ldr	r1, .L1170+0x4
	lsl	r0, r5, #0x1
	add	r1, r0, r1
	ldrh	r5, [r1]
	ldr	r0, .L1170+0x8
	cmp	r5, r0
	bne	.L1159	@cond_branch
	ldrh	r0, [r1]
	bl	ShowFrontierExchangeCornerItemIcon
	b	.L1156
.L1171:
	.align	2, 0
.L1170:
	.word	sFrontierExchangeCorner_Decor1Descriptions.434
	.word	sFrontierExchangeCorner_Decor1.430
	.word	0xffff
.L1159:
	ldr	r4, .L1172
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r1, #0x21
	mov	r2, #0x58
	mov	r3, #0x0
	bl	AddDecorationIconObject
	ldr	r1, .L1172+0x4
	strb	r0, [r1]
	b	.L1156
.L1173:
	.align	2, 0
.L1172:
	.word	0x157c
	.word	sScrollableMultichoice_ItemSpriteId
.L1161:
	ldr	r1, .L1174
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized2
	ldr	r1, .L1174+0x4
	b	.L1167
.L1175:
	.align	2, 0
.L1174:
	.word	sFrontierExchangeCorner_Decor2Descriptions.435
	.word	sFrontierExchangeCorner_Decor2.431
.L1162:
	ldr	r1, .L1176
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized2
	ldr	r1, .L1176+0x4
.L1167:
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ShowFrontierExchangeCornerItemIcon
	b	.L1156
.L1177:
	.align	2, 0
.L1176:
	.word	sFrontierExchangeCorner_VitaminsDescriptions.436
	.word	sFrontierExchangeCorner_Vitamins.432
.L1163:
	ldr	r1, .L1178
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	str	r0, [sp, #0xc]
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized2
	ldr	r1, .L1178+0x4
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ShowFrontierExchangeCornerItemIcon
.L1156:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1179:
	.align	2, 0
.L1178:
	.word	sFrontierExchangeCorner_HoldItemsDescriptions.437
	.word	sFrontierExchangeCorner_HoldItems.433
.Lfe138:
	.size	 FillFrontierExchangeCornerWindowAndItemIcon,.Lfe138-FillFrontierExchangeCornerWindowAndItemIcon
	.align	2, 0
	.type	 ShowFrontierExchangeCornerItemIcon,function
	.thumb_func
ShowFrontierExchangeCornerItemIcon:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r4, .L1182
	add	r0, r4, #0
	bl	FreeSpriteTilesByTag
	add	r0, r4, #0
	bl	FreeSpritePaletteByTag
	add	r0, r4, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	AddItemIconSprite
	ldr	r4, .L1182+0x4
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L1181	@cond_branch
	ldr	r3, .L1182+0x8
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r1, #0x24
	strh	r1, [r0, #0x20]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	mov	r1, #0x5c
	strh	r1, [r0, #0x22]
.L1181:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1183:
	.align	2, 0
.L1182:
	.word	0x157c
	.word	sScrollableMultichoice_ItemSpriteId
	.word	gSprites
.Lfe139:
	.size	 ShowFrontierExchangeCornerItemIcon,.Lfe139-ShowFrontierExchangeCornerItemIcon
	.align	2, 0
	.type	 HideFrontierExchangeCornerItemIcon,function
	.thumb_func
HideFrontierExchangeCornerItemIcon:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r2, .L1193
	ldrb	r0, [r2]
	cmp	r0, #0x40
	beq	.L1185	@cond_branch
	cmp	r1, #0x6
	bgt	.L1186	@cond_branch
	cmp	r1, #0x3
	blt	.L1186	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1193+0x4
	add	r0, r0, r1
	bl	DestroySpriteAndFreeResources
.L1186:
	ldr	r1, .L1193
	mov	r0, #0x40
	strb	r0, [r1]
.L1185:
	pop	{r0}
	bx	r0
.L1194:
	.align	2, 0
.L1193:
	.word	sScrollableMultichoice_ItemSpriteId
	.word	gSprites
.Lfe140:
	.size	 HideFrontierExchangeCornerItemIcon,.Lfe140-HideFrontierExchangeCornerItemIcon
	.section .rodata
	.align	1, 0
	.type	 sBattleFrontier_TutorMoves1,object
sBattleFrontier_TutorMoves1:
	.short	0x87
	.short	0x45
	.short	0x8a
	.short	0x5
	.short	0x19
	.short	0x22
	.short	0x9d
	.short	0x44
	.short	0x56
	.short	0xe
	.size	 sBattleFrontier_TutorMoves1,20
	.align	1, 0
	.type	 sBattleFrontier_TutorMoves2,object
sBattleFrontier_TutorMoves2:
	.short	0x6f
	.short	0xad
	.short	0xbd
	.short	0x81
	.short	0xc4
	.short	0xcb
	.short	0xf4
	.short	0x8
	.short	0x9
	.short	0x7
	.size	 sBattleFrontier_TutorMoves2,20
.text
	.align	2, 0
	.globl	BufferBattleFrontierTutorMoveName
	.type	 BufferBattleFrontierTutorMoveName,function
	.thumb_func
BufferBattleFrontierTutorMoveName:
	push	{lr}
	ldr	r0, .L1198
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L1196	@cond_branch
	ldr	r0, .L1198+0x4
	ldr	r2, .L1198+0x8
	ldr	r1, .L1198+0xc
	ldrh	r1, [r1]
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L1198+0x10
	add	r1, r1, r2
	bl	StringCopy
	b	.L1197
.L1199:
	.align	2, 0
.L1198:
	.word	gSpecialVar_0x8005
	.word	gStringVar1
	.word	sBattleFrontier_TutorMoves2
	.word	gSpecialVar_0x8004
	.word	gMoveNames
.L1196:
	ldr	r0, .L1200
	ldr	r2, .L1200+0x4
	ldr	r1, .L1200+0x8
	ldrh	r1, [r1]
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	ldrh	r2, [r1]
	mov	r1, #0xd
	mul	r1, r1, r2
	ldr	r2, .L1200+0xc
	add	r1, r1, r2
	bl	StringCopy
.L1197:
	pop	{r0}
	bx	r0
.L1201:
	.align	2, 0
.L1200:
	.word	gStringVar1
	.word	sBattleFrontier_TutorMoves1
	.word	gSpecialVar_0x8004
	.word	gMoveNames
.Lfe141:
	.size	 BufferBattleFrontierTutorMoveName,.Lfe141-BufferBattleFrontierTutorMoveName
	.section .rodata
	.align	2, 0
	.type	 sBattleFrontierTutor_WindowTemplate.450,object
	.size	 sBattleFrontierTutor_WindowTemplate.450,8
sBattleFrontierTutor_WindowTemplate.450:
	.byte	0x0
	.byte	0x1
	.byte	0x7
	.byte	0xc
	.byte	0x6
	.byte	0xf
	.short	0x1c
.text
	.align	2, 0
	.type	 ShowBattleFrontierTutorWindow,function
	.thumb_func
ShowBattleFrontierTutorWindow:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	sub	r0, r0, #0x9
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L1203	@cond_branch
	ldr	r0, .L1205
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1204	@cond_branch
	ldr	r4, .L1205+0x4
	ldr	r0, .L1205+0x8
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
.L1204:
	add	r0, r5, #0
	add	r1, r6, #0
	bl	ShowBattleFrontierTutorMoveDescription
.L1203:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1206:
	.align	2, 0
.L1205:
	.word	gSpecialVar_0x8006
	.word	sTutorMoveAndElevatorWindowId
	.word	sBattleFrontierTutor_WindowTemplate.450
.Lfe142:
	.size	 ShowBattleFrontierTutorWindow,.Lfe142-ShowBattleFrontierTutorWindow
	.section .rodata
	.align	2, 0
	.type	 sBattleFrontier_TutorMoveDescriptions1.454,object
sBattleFrontier_TutorMoveDescriptions1.454:
	.word	BattleFrontier_Lounge7_Text_SoftboiledDesc
	.word	BattleFrontier_Lounge7_Text_SeismicTossDesc
	.word	BattleFrontier_Lounge7_Text_DreamEaterDesc
	.word	BattleFrontier_Lounge7_Text_MegaPunchDesc
	.word	BattleFrontier_Lounge7_Text_MegaKickDesc
	.word	BattleFrontier_Lounge7_Text_BodySlamDesc
	.word	BattleFrontier_Lounge7_Text_RockSlideDesc
	.word	BattleFrontier_Lounge7_Text_CounterDesc
	.word	BattleFrontier_Lounge7_Text_ThunderWaveDesc
	.word	BattleFrontier_Lounge7_Text_SwordsDanceDesc
	.word	gText_Exit
	.align	2, 0
	.type	 sBattleFrontier_TutorMoveDescriptions2.455,object
sBattleFrontier_TutorMoveDescriptions2.455:
	.word	BattleFrontier_Lounge7_Text_DefenseCurlDesc
	.word	BattleFrontier_Lounge7_Text_SnoreDesc
	.word	BattleFrontier_Lounge7_Text_MudSlapDesc
	.word	BattleFrontier_Lounge7_Text_SwiftDesc
	.word	BattleFrontier_Lounge7_Text_IcyWindDesc
	.word	BattleFrontier_Lounge7_Text_EndureDesc
	.word	BattleFrontier_Lounge7_Text_PsychUpDesc
	.word	BattleFrontier_Lounge7_Text_IcePunchDesc
	.word	BattleFrontier_Lounge7_Text_ThunderPunchDesc
	.word	BattleFrontier_Lounge7_Text_FirePunchDesc
	.word	gText_Exit
.text
	.align	2, 0
	.type	 ShowBattleFrontierTutorMoveDescription,function
	.thumb_func
ShowBattleFrontierTutorMoveDescription:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	add	r7, r5, #0
	lsr	r6, r0, #0x18
	mov	r1, #0xf7
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L1208	@cond_branch
	ldr	r4, .L1211
	ldrb	r0, [r4]
	mov	r1, #0x60
	str	r1, [sp]
	mov	r1, #0x30
	str	r1, [sp, #0x4]
	mov	r1, #0x11
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillWindowPixelRect
	cmp	r6, #0xa
	bne	.L1209	@cond_branch
	ldrb	r0, [r4]
	ldr	r2, .L1211+0x4
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r2, [r1]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	b	.L1208
.L1212:
	.align	2, 0
.L1211:
	.word	sTutorMoveAndElevatorWindowId
	.word	sBattleFrontier_TutorMoveDescriptions2.455
.L1209:
	ldrb	r0, [r4]
	ldr	r2, .L1213
	lsl	r1, r7, #0x2
	add	r1, r1, r2
	ldr	r2, [r1]
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
.L1208:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1214:
	.align	2, 0
.L1213:
	.word	sBattleFrontier_TutorMoveDescriptions1.454
.Lfe143:
	.size	 ShowBattleFrontierTutorMoveDescription,.Lfe143-ShowBattleFrontierTutorMoveDescription
	.align	2, 0
	.globl	CloseBattleFrontierTutorWindow
	.type	 CloseBattleFrontierTutorWindow,function
	.thumb_func
CloseBattleFrontierTutorWindow:
	push	{r4, lr}
	ldr	r4, .L1216
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L1217:
	.align	2, 0
.L1216:
	.word	sTutorMoveAndElevatorWindowId
.Lfe144:
	.size	 CloseBattleFrontierTutorWindow,.Lfe144-CloseBattleFrontierTutorWindow
	.align	2, 0
	.globl	sub_813ADD4
	.type	 sub_813ADD4,function
	.thumb_func
sub_813ADD4:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x18
	ldr	r0, .L1225
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	beq	.L1219	@cond_branch
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L1225+0x4
	add	r6, r0, r1
	ldrh	r0, [r6, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r4, sp
	add	r4, r4, #0x16
	add	r1, sp, #0x14
	add	r2, r4, #0
	bl	ListMenuGetScrollAndRow
	ldrh	r0, [r6, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	SetStandardWindowBorderStyle
	mov	r5, #0x0
	mov	r9, r4
	ldr	r0, .L1225+0x8
	mov	r8, r0
	mov	r4, #0x0
.L1223:
	ldrh	r0, [r6, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, sp, #0x14
	ldrh	r2, [r1]
	add	r2, r2, r5
	lsl	r2, r2, #0x2
	ldr	r1, .L1225+0xc
	ldrh	r1, [r1]
	lsl	r1, r1, #0x6
	add	r2, r2, r1
	add	r2, r2, r8
	ldr	r2, [r2]
	lsl	r1, r5, #0x1c
	lsr	r1, r1, #0x18
	str	r1, [sp]
	mov	r7, #0xff
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	str	r4, [sp, #0x10]
	mov	r1, #0x1
	mov	r3, #0xa
	bl	AddTextPrinterParameterized5
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L1223	@cond_branch
	ldrh	r0, [r6, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1225+0x10
	mov	r3, r9
	ldrh	r1, [r3]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x18
	str	r1, [sp]
	str	r7, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldrh	r0, [r6, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PutWindowTilemap
	ldrh	r0, [r6, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x3
	bl	CopyWindowToVram
.L1219:
	add	sp, sp, #0x18
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1226:
	.align	2, 0
.L1225:
	.word	sub_813A600
	.word	gTasks
	.word	sScrollableMultichoiceOptions
	.word	gSpecialVar_0x8004
	.word	gText_SelectorArrow
.Lfe145:
	.size	 sub_813ADD4,.Lfe145-sub_813ADD4
	.align	2, 0
	.globl	GetBattleFrontierTutorMoveIndex
	.type	 GetBattleFrontierTutorMoveIndex,function
	.thumb_func
GetBattleFrontierTutorMoveIndex:
	push	{r4, lr}
	mov	r1, #0x0
	ldr	r0, .L1244
	strh	r1, [r0]
	ldr	r0, .L1244+0x4
	bl	VarGet
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L1244+0x8
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r4, #0
	beq	.L1228	@cond_branch
	mov	r2, #0x0
	lsl	r1, r1, #0x1
	ldr	r3, .L1244+0xc
	ldr	r0, .L1244+0x10
	add	r0, r1, r0
	ldrh	r1, [r0]
.L1229:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	cmp	r0, r1
	beq	.L1242	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1d
	bls	.L1229	@cond_branch
	b	.L1235
.L1245:
	.align	2, 0
.L1244:
	.word	gSpecialVar_0x8005
	.word	0x400e
	.word	0x400d
	.word	gTutorMoves
	.word	sBattleFrontier_TutorMoves2
.L1242:
.L1243:
	ldr	r0, .L1246
	strh	r2, [r0]
	b	.L1235
.L1247:
	.align	2, 0
.L1246:
	.word	gSpecialVar_0x8005
.L1228:
	mov	r2, #0x0
	lsl	r1, r1, #0x1
	ldr	r3, .L1248
	ldr	r0, .L1248+0x4
	add	r0, r1, r0
	ldrh	r1, [r0]
.L1236:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	cmp	r0, r1
	beq	.L1243	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1d
	bls	.L1236	@cond_branch
.L1235:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1249:
	.align	2, 0
.L1248:
	.word	gTutorMoves
	.word	sBattleFrontier_TutorMoves1
.Lfe146:
	.size	 GetBattleFrontierTutorMoveIndex,.Lfe146-GetBattleFrontierTutorMoveIndex
	.align	2, 0
	.globl	sub_813AF48
	.type	 sub_813AF48,function
	.thumb_func
sub_813AF48:
	push	{r4, r5, lr}
	ldr	r0, .L1252
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xff
	beq	.L1251	@cond_branch
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L1252+0x4
	add	r4, r4, r0
	ldrh	r0, [r4, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldr	r0, .L1252+0x8
	ldr	r0, [r0]
	bl	Free
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
.L1251:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1253:
	.align	2, 0
.L1252:
	.word	sub_813A600
	.word	gTasks
	.word	sScrollableMultichoice_ListMenuItem
.Lfe147:
	.size	 sub_813AF48,.Lfe147-sub_813AF48
	.align	2, 0
	.globl	DoDeoxysRockInteraction
	.type	 DoDeoxysRockInteraction,function
	.thumb_func
DoDeoxysRockInteraction:
	push	{lr}
	ldr	r0, .L1255
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L1256:
	.align	2, 0
.L1255:
	.word	Task_DeoxysRockInteraction
.Lfe148:
	.size	 DoDeoxysRockInteraction,.Lfe148-DoDeoxysRockInteraction
	.section .rodata
	.align	1, 0
	.type	 sDeoxysRockPalettes,object
sDeoxysRockPalettes:
	.short	0x530e
	.short	0x5ad6
	.short	0x4a52
	.short	0x316b
	.short	0x24e7
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x6f7b
	.short	0x0
	.short	0x530e
	.short	0x56d6
	.short	0x4633
	.short	0x2d4c
	.short	0x20c7
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x56d7
	.short	0x4214
	.short	0x292d
	.short	0x1ca8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x56d8
	.short	0x3df5
	.short	0x250f
	.short	0x18a9
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x52f9
	.short	0x39d7
	.short	0x2110
	.short	0x148a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x52fa
	.short	0x39d8
	.short	0x20f2
	.short	0x148b
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x52fb
	.short	0x35b9
	.short	0x1cd3
	.short	0x106c
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x4f1c
	.short	0x319b
	.short	0x18d4
	.short	0xc4d
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x4f1d
	.short	0x2d7c
	.short	0x14b6
	.short	0x84e
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x4f1e
	.short	0x295d
	.short	0x1097
	.short	0x42f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x530e
	.short	0x4f3f
	.short	0x295f
	.short	0x1099
	.short	0x430
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sDeoxysRockPalettes,352
	.type	 sDeoxysRockCoords,object
sDeoxysRockCoords:
	.byte	0xf
	.byte	0xc
	.byte	0xb
	.byte	0xe
	.byte	0xf
	.byte	0x8
	.byte	0x13
	.byte	0xe
	.byte	0xc
	.byte	0xb
	.byte	0x12
	.byte	0xb
	.byte	0xf
	.byte	0xe
	.byte	0xb
	.byte	0xe
	.byte	0x13
	.byte	0xe
	.byte	0xf
	.byte	0xf
	.byte	0xf
	.byte	0xa
	.size	 sDeoxysRockCoords,22
	.type	 sStoneMaxStepCounts.474,object
sStoneMaxStepCounts.474:
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x6
	.byte	0x3
	.byte	0x3
.text
	.align	2, 0
	.type	 Task_DeoxysRockInteraction,function
	.thumb_func
Task_DeoxysRockInteraction:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L1266
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1258	@cond_branch
	ldr	r1, .L1266+0x4
	mov	r0, #0x3
	b	.L1264
.L1267:
	.align	2, 0
.L1266:
	.word	0x8d4
	.word	gSpecialVar_Result
.L1258:
	ldr	r0, .L1268
	mov	r8, r0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r4, .L1268+0x4
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	VarSet
	cmp	r5, #0
	beq	.L1260	@cond_branch
	ldr	r0, .L1268+0x8
	sub	r1, r5, #0x1
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, r6
	bcs	.L1260	@cond_branch
	mov	r0, #0x0
	bl	ChangeDeoxysRockLevel
	mov	r0, r8
	mov	r1, #0x0
	bl	VarSet
	ldr	r1, .L1268+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L1265
.L1269:
	.align	2, 0
.L1268:
	.word	0x4035
	.word	0x4034
	.word	sStoneMaxStepCounts.474
	.word	gSpecialVar_Result
.L1260:
	cmp	r5, #0xa
	bne	.L1262	@cond_branch
	ldr	r0, .L1270
	bl	FlagSet
	ldr	r1, .L1270+0x4
	mov	r0, #0x2
.L1264:
	strh	r0, [r1]
	bl	EnableBothScriptContexts
.L1265:
	add	r0, r7, #0
	bl	DestroyTask
	b	.L1259
.L1271:
	.align	2, 0
.L1270:
	.word	0x8d4
	.word	gSpecialVar_Result
.L1262:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	ChangeDeoxysRockLevel
	ldr	r0, .L1272
	add	r1, r5, #0
	bl	VarSet
	ldr	r1, .L1272+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	add	r0, r7, #0
	bl	DestroyTask
.L1259:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1273:
	.align	2, 0
.L1272:
	.word	0x4035
	.word	gSpecialVar_Result
.Lfe149:
	.size	 Task_DeoxysRockInteraction,.Lfe149-Task_DeoxysRockInteraction
	.align	2, 0
	.type	 ChangeDeoxysRockLevel,function
	.thumb_func
ChangeDeoxysRockLevel:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x5
	ldr	r1, .L1280
	add	r0, r0, r1
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	mov	r2, #0x8
	bl	LoadPalette
	ldr	r0, .L1280+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0x1
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	cmp	r4, #0
	bne	.L1275	@cond_branch
	mov	r0, #0xc4
	bl	PlaySE
	b	.L1276
.L1281:
	.align	2, 0
.L1280:
	.word	sDeoxysRockPalettes
	.word	gSaveBlock1Ptr
.L1275:
	mov	r0, #0x82
	lsl	r0, r0, #0x1
	bl	PlaySE
.L1276:
	ldr	r0, .L1282
	mov	r1, #0x8
	bl	CreateTask
	ldr	r3, .L1282+0x4
	mov	r0, #0x1
	str	r0, [r3]
	mov	r0, #0x3a
	str	r0, [r3, #0x4]
	mov	r0, #0x1a
	str	r0, [r3, #0x8]
	ldr	r0, .L1282+0x8
	lsl	r2, r4, #0x1
	add	r1, r2, r0
	ldrb	r1, [r1]
	str	r1, [r3, #0xc]
	add	r0, r0, #0x1
	add	r0, r2, r0
	ldrb	r0, [r0]
	str	r0, [r3, #0x10]
	add	r5, r2, #0
	cmp	r4, #0
	bne	.L1277	@cond_branch
	mov	r0, #0x3c
	b	.L1279
.L1283:
	.align	2, 0
.L1282:
	.word	WaitForDeoxysRockMovement
	.word	gFieldEffectArguments
	.word	sDeoxysRockCoords
.L1277:
	mov	r0, #0x5
.L1279:
	str	r0, [r3, #0x14]
	mov	r0, #0x42
	bl	FieldEffectStart
	ldr	r0, .L1284
	add	r1, r5, r0
	ldrb	r1, [r1]
	add	r0, r0, #0x1
	add	r0, r5, r0
	ldrb	r2, [r0]
	mov	r0, #0x1
	bl	Overworld_SetObjEventTemplateCoords
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1285:
	.align	2, 0
.L1284:
	.word	sDeoxysRockCoords
.Lfe150:
	.size	 ChangeDeoxysRockLevel,.Lfe150-ChangeDeoxysRockLevel
	.align	2, 0
	.type	 WaitForDeoxysRockMovement,function
	.thumb_func
WaitForDeoxysRockMovement:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x42
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1287	@cond_branch
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
.L1287:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe151:
	.size	 WaitForDeoxysRockMovement,.Lfe151-WaitForDeoxysRockMovement
	.align	2, 0
	.globl	IncrementBirthIslandRockStepCount
	.type	 IncrementBirthIslandRockStepCount,function
	.thumb_func
IncrementBirthIslandRockStepCount:
	push	{r4, lr}
	ldr	r4, .L1292
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L1292+0x4
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L1292+0x8
	cmp	r1, r0
	bne	.L1289	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x63
	bls	.L1290	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	VarSet
	b	.L1289
.L1293:
	.align	2, 0
.L1292:
	.word	0x4034
	.word	gSaveBlock1Ptr
	.word	0x3a1a
.L1290:
	add	r0, r4, #0
	add	r1, r2, #0
	bl	VarSet
.L1289:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe152:
	.size	 IncrementBirthIslandRockStepCount,.Lfe152-IncrementBirthIslandRockStepCount
	.align	2, 0
	.globl	SetDeoxysRockPalette
	.type	 SetDeoxysRockPalette,function
	.thumb_func
SetDeoxysRockPalette:
	push	{lr}
	ldr	r0, .L1295
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x13
	ldr	r1, .L1295+0x4
	add	r0, r0, r1
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	mov	r2, #0x8
	bl	LoadPalette
	mov	r0, #0x80
	lsl	r0, r0, #0x13
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	pop	{r0}
	bx	r0
.L1296:
	.align	2, 0
.L1295:
	.word	0x4035
	.word	sDeoxysRockPalettes
.Lfe153:
	.size	 SetDeoxysRockPalette,.Lfe153-SetDeoxysRockPalette
	.align	2, 0
	.globl	SetPCBoxToSendMon
	.type	 SetPCBoxToSendMon,function
	.thumb_func
SetPCBoxToSendMon:
	ldr	r1, .L1298
	strb	r0, [r1]
	bx	lr
.L1299:
	.align	2, 0
.L1298:
	.word	sPCBoxToSendMon
.Lfe154:
	.size	 SetPCBoxToSendMon,.Lfe154-SetPCBoxToSendMon
	.align	2, 0
	.globl	GetPCBoxToSendMon
	.type	 GetPCBoxToSendMon,function
	.thumb_func
GetPCBoxToSendMon:
	ldr	r0, .L1301
	ldrb	r0, [r0]
	bx	lr
.L1302:
	.align	2, 0
.L1301:
	.word	sPCBoxToSendMon
.Lfe155:
	.size	 GetPCBoxToSendMon,.Lfe155-GetPCBoxToSendMon
	.align	2, 0
	.globl	ShouldShowBoxWasFullMessage
	.type	 ShouldShowBoxWasFullMessage,function
	.thumb_func
ShouldShowBoxWasFullMessage:
	push	{r4, r5, lr}
	ldr	r5, .L1307
	add	r0, r5, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1304	@cond_branch
	bl	StorageGetCurrentBox
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L1307+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L1304	@cond_branch
	add	r0, r5, #0
	bl	FlagSet
	mov	r0, #0x1
	b	.L1306
.L1308:
	.align	2, 0
.L1307:
	.word	0x8d7
	.word	0x4036
.L1304:
	mov	r0, #0x0
.L1306:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe156:
	.size	 ShouldShowBoxWasFullMessage,.Lfe156-ShouldShowBoxWasFullMessage
	.align	2, 0
	.globl	IsDestinationBoxFull
	.type	 IsDestinationBoxFull,function
	.thumb_func
IsDestinationBoxFull:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1324
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	SetPCBoxToSendMon
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1310:
	mov	r5, #0x0
	lsl	r6, r4, #0x18
	lsl	r7, r4, #0x10
.L1316:
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	lsr	r0, r6, #0x18
	bl	GetBoxedMonPtr
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetBoxMonData
	cmp	r0, #0
	bne	.L1315	@cond_branch
	bl	GetPCBoxToSendMon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r4
	beq	.L1318	@cond_branch
	ldr	r0, .L1324+0x4
	bl	FlagClear
.L1318:
	ldr	r0, .L1324
	lsr	r1, r7, #0x10
	bl	VarSet
	bl	ShouldShowBoxWasFullMessage
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L1323
.L1325:
	.align	2, 0
.L1324:
	.word	0x4036
	.word	0x8d7
.L1315:
	add	r5, r5, #0x1
	cmp	r5, #0x1d
	ble	.L1316	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0xe
	bne	.L1312	@cond_branch
	mov	r4, #0x0
.L1312:
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L1310	@cond_branch
	mov	r0, #0x0
.L1323:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe157:
	.size	 IsDestinationBoxFull,.Lfe157-IsDestinationBoxFull
	.align	2, 0
	.globl	CreateAbnormalWeatherEvent
	.type	 CreateAbnormalWeatherEvent,function
	.thumb_func
CreateAbnormalWeatherEvent:
	push	{r4, lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L1334
	mov	r1, #0x0
	bl	VarSet
	mov	r0, #0xdf
	lsl	r0, r0, #0x1
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1333	@cond_branch
	ldr	r0, .L1334+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1329	@cond_branch
	ldr	r0, .L1334+0x8
	mov	r1, #0x7
	and	r4, r4, r1
	add	r1, r4, #0
	add	r1, r1, #0x9
	bl	VarSet
	b	.L1328
.L1335:
	.align	2, 0
.L1334:
	.word	0x4038
	.word	0x1bf
	.word	0x4037
.L1329:
	mov	r0, #0x1
	and	r4, r4, r0
	cmp	r4, #0
	bne	.L1331	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L1333:
	ldr	r0, .L1336
	mov	r1, #0x7
	and	r4, r4, r1
	add	r1, r4, #0x1
	bl	VarSet
	b	.L1328
.L1337:
	.align	2, 0
.L1336:
	.word	0x4037
.L1331:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L1338
	mov	r1, #0x7
	and	r4, r4, r1
	add	r1, r4, #0
	add	r1, r1, #0x9
	bl	VarSet
.L1328:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1339:
	.align	2, 0
.L1338:
	.word	0x4037
.Lfe158:
	.size	 CreateAbnormalWeatherEvent,.Lfe158-CreateAbnormalWeatherEvent
	.section .rodata
	.type	 sAbnormalWeatherMapNumbers.505,object
sAbnormalWeatherMapNumbers.505:
	.byte	0x1d
	.byte	0x1d
	.byte	0x1e
	.byte	0x1e
	.byte	0x1f
	.byte	0x1f
	.byte	0x21
	.byte	0x21
	.byte	0x14
	.byte	0x14
	.byte	0x28
	.byte	0x28
	.byte	0x2a
	.byte	0x2a
	.byte	0x2c
	.byte	0x2c
.text
	.align	2, 0
	.globl	GetAbnormalWeatherMapNameAndType
	.type	 GetAbnormalWeatherMapNameAndType,function
	.thumb_func
GetAbnormalWeatherMapNameAndType:
	push	{r4, lr}
	ldr	r0, .L1344
	bl	VarGet
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L1344+0x4
	ldr	r2, .L1344+0x8
	sub	r1, r4, #0x1
	add	r1, r1, r2
	ldrb	r1, [r1]
	mov	r2, #0x0
	bl	GetMapName
	cmp	r4, #0x8
	bls	.L1341	@cond_branch
	mov	r0, #0x1
	b	.L1343
.L1345:
	.align	2, 0
.L1344:
	.word	0x4037
	.word	gStringVar1
	.word	sAbnormalWeatherMapNumbers.505
.L1341:
	mov	r0, #0x0
.L1343:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe159:
	.size	 GetAbnormalWeatherMapNameAndType,.Lfe159-GetAbnormalWeatherMapNameAndType
	.section .rodata
	.type	 sAbnormalWeatherMapNumbers.509,object
sAbnormalWeatherMapNumbers.509:
	.byte	0x1d
	.byte	0x1d
	.byte	0x1e
	.byte	0x1e
	.byte	0x1f
	.byte	0x1f
	.byte	0x21
	.byte	0x21
	.byte	0x14
	.byte	0x14
	.byte	0x28
	.byte	0x28
	.byte	0x2a
	.byte	0x2a
	.byte	0x2c
	.byte	0x2c
.text
	.align	2, 0
	.globl	AbnormalWeatherHasExpired
	.type	 AbnormalWeatherHasExpired,function
	.thumb_func
AbnormalWeatherHasExpired:
	push	{r4, r5, r6, lr}
	ldr	r5, .L1372
	add	r0, r5, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L1372+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0
	beq	.L1370	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L1372+0x8
	cmp	r4, r0
	bls	.L1348	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L1372+0xc
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x18
	bne	.L1349	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x69
	bgt	.L1349	@cond_branch
	cmp	r0, #0x65
	blt	.L1349	@cond_branch
	ldr	r0, .L1372+0x10
	mov	r1, #0x1
	b	.L1371
.L1373:
	.align	2, 0
.L1372:
	.word	0x4038
	.word	0x4037
	.word	0x3e7
	.word	gSaveBlock1Ptr
	.word	0x4039
.L1349:
	ldr	r0, .L1374
	ldr	r2, [r0]
	mov	r1, #0x4
	ldrsb	r1, [r2, r1]
	add	r3, r0, #0
	cmp	r1, #0
	bne	.L1358	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, #0x34
	beq	.L1363	@cond_branch
	cmp	r0, #0x34
	blt	.L1358	@cond_branch
	cmp	r0, #0x38
	bgt	.L1358	@cond_branch
	cmp	r0, #0x36
	blt	.L1358	@cond_branch
.L1363:
	ldr	r0, .L1374+0x4
	mov	r1, #0x1
	b	.L1371
.L1375:
	.align	2, 0
.L1374:
	.word	gSaveBlock1Ptr
	.word	0x4039
.L1358:
	ldr	r3, [r3]
	mov	r2, #0x5
	ldrsb	r2, [r3, r2]
	ldr	r1, .L1376
	sub	r0, r6, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r2, r0
	bne	.L1366	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r3, r0]
	cmp	r0, #0
	bne	.L1366	@cond_branch
	mov	r0, #0x1
	b	.L1369
.L1377:
	.align	2, 0
.L1376:
	.word	sAbnormalWeatherMapNumbers.509
.L1366:
	ldr	r0, .L1378
	mov	r1, #0x0
	b	.L1371
.L1379:
	.align	2, 0
.L1378:
	.word	0x4037
.L1348:
	add	r0, r5, #0
	add	r1, r4, #0
.L1371:
	bl	VarSet
.L1370:
	mov	r0, #0x0
.L1369:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe160:
	.size	 AbnormalWeatherHasExpired,.Lfe160-AbnormalWeatherHasExpired
	.align	2, 0
	.globl	Unused_SetWeatherSunny
	.type	 Unused_SetWeatherSunny,function
	.thumb_func
Unused_SetWeatherSunny:
	push	{lr}
	mov	r0, #0x2
	bl	SetCurrentAndNextWeather
	pop	{r0}
	bx	r0
.Lfe161:
	.size	 Unused_SetWeatherSunny,.Lfe161-Unused_SetWeatherSunny
	.section .rodata
	.type	 sPokeMarts.516,object
sPokeMarts.516:
	.byte	0x2
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x3
	.byte	0x1
	.byte	0x8
	.byte	0x6
	.byte	0x1
	.byte	0x9
	.byte	0xd
	.byte	0x1
	.byte	0xa
	.byte	0x7
	.byte	0x1
	.byte	0xb
	.byte	0x7
	.byte	0x1
	.byte	0xc
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x5
	.byte	0x1
	.byte	0xf
	.byte	0x4
	.byte	0x1
	.byte	0x1a
	.byte	0x37
	.byte	0x1
.text
	.align	2, 0
	.globl	GetMartEmployeeObjectEventId
	.type	 GetMartEmployeeObjectEventId,function
	.thumb_func
GetMartEmployeeObjectEventId:
	push	{r4, r5, r6, r7, lr}
	mov	r3, #0x0
	ldr	r0, .L1390
	ldr	r4, [r0]
	mov	r6, #0x4
	ldrsb	r6, [r4, r6]
	ldr	r5, .L1390+0x4
	add	r0, r5, #0x2
	mov	ip, r0
	add	r7, r5, #0x1
.L1385:
	lsl	r0, r3, #0x1
	add	r2, r0, r3
	add	r0, r2, r5
	ldrb	r0, [r0]
	cmp	r6, r0
	bne	.L1384	@cond_branch
	mov	r1, #0x5
	ldrsb	r1, [r4, r1]
	add	r0, r2, r7
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L1384	@cond_branch
	mov	r1, ip
	add	r0, r2, r1
	ldrb	r0, [r0]
	b	.L1389
.L1391:
	.align	2, 0
.L1390:
	.word	gSaveBlock1Ptr
	.word	sPokeMarts.516
.L1384:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xb
	bls	.L1385	@cond_branch
	mov	r0, #0x1
.L1389:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe162:
	.size	 GetMartEmployeeObjectEventId,.Lfe162-GetMartEmployeeObjectEventId
	.align	2, 0
	.globl	IsTrainerRegistered
	.type	 IsTrainerRegistered,function
	.thumb_func
IsTrainerRegistered:
	push	{lr}
	ldr	r0, .L1396
	ldrh	r0, [r0]
	bl	GetRematchIdxByTrainerIdx
	cmp	r0, #0
	blt	.L1393	@cond_branch
	mov	r1, #0xae
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1393	@cond_branch
	mov	r0, #0x1
	b	.L1395
.L1397:
	.align	2, 0
.L1396:
	.word	gSpecialVar_0x8004
.L1393:
	mov	r0, #0x0
.L1395:
	pop	{r1}
	bx	r1
.Lfe163:
	.size	 IsTrainerRegistered,.Lfe163-IsTrainerRegistered
	.align	2, 0
	.globl	ShouldDistributeEonTicket
	.type	 ShouldDistributeEonTicket,function
	.thumb_func
ShouldDistributeEonTicket:
	push	{lr}
	ldr	r0, .L1401
	bl	VarGet
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1399	@cond_branch
	mov	r0, #0x1
	b	.L1400
.L1402:
	.align	2, 0
.L1401:
	.word	0x403f
.L1399:
	mov	r0, #0x0
.L1400:
	pop	{r1}
	bx	r1
.Lfe164:
	.size	 ShouldDistributeEonTicket,.Lfe164-ShouldDistributeEonTicket
	.align	2, 0
	.globl	sub_813B534
	.type	 sub_813B534,function
	.thumb_func
sub_813B534:
	push	{lr}
	ldr	r2, .L1405
	ldr	r1, .L1405+0x4
	ldr	r0, [r1]
	str	r0, [r2]
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r0, .L1405+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1404	@cond_branch
	ldr	r0, .L1405+0xc
	mov	r1, #0x5
	bl	CreateTask
.L1404:
	pop	{r0}
	bx	r0
.L1406:
	.align	2, 0
.L1405:
	.word	sBattleTowerMultiBattleTypeFlags
	.word	gBattleTypeFlags
	.word	gReceivedRemoteLinkPlayers
	.word	sub_80B3AF8
.Lfe165:
	.size	 sub_813B534,.Lfe165-sub_813B534
	.align	2, 0
	.globl	LinkRetireStatusWithBattleTowerPartner
	.type	 LinkRetireStatusWithBattleTowerPartner,function
	.thumb_func
LinkRetireStatusWithBattleTowerPartner:
	push	{lr}
	ldr	r0, .L1408
	mov	r1, #0x5
	bl	CreateTask
	pop	{r0}
	bx	r0
.L1409:
	.align	2, 0
.L1408:
	.word	Task_LinkRetireStatusWithBattleTowerPartner
.Lfe166:
	.size	 LinkRetireStatusWithBattleTowerPartner,.Lfe166-LinkRetireStatusWithBattleTowerPartner
	.align	2, 0
	.type	 Task_LinkRetireStatusWithBattleTowerPartner,function
	.thumb_func
Task_LinkRetireStatusWithBattleTowerPartner:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L1453
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x9
	bls	.LCB10447
	b	.L1411	@long jump
.LCB10447:
	lsl	r0, r0, #0x2
	ldr	r1, .L1453+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1454:
	.align	2, 0
.L1453:
	.word	gTasks
	.word	.L1448
	.align	2, 0
	.align	2, 0
.L1448:
	.word	.L1412
	.word	.L1414
	.word	.L1418
	.word	.L1427
	.word	.L1431
	.word	.L1435
	.word	.L1440
	.word	.L1442
	.word	.L1444
	.word	.L1446
.L1412:
	ldr	r0, .L1455
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB10474
	b	.L1411	@long jump
.LCB10474:
	b	.L1450
.L1456:
	.align	2, 0
.L1455:
	.word	sub_80B3AF8
.L1414:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.LCB10490
	b	.L1411	@long jump
.LCB10490:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB10497
	b	.L1450	@long jump
.LCB10497:
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1457
	mov	r2, #0x2
	bl	SendBlock
	b	.L1451
.L1458:
	.align	2, 0
.L1457:
	.word	gSpecialVar_0x8004
.L1418:
	bl	GetBlockReceivedStatus
	mov	r1, #0x2
	and	r1, r1, r0
	cmp	r1, #0
	bne	.LCB10525
	b	.L1411	@long jump
.LCB10525:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB10532
	b	.L1450	@long jump
.LCB10532:
	ldr	r5, .L1459
	ldr	r0, .L1459+0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r5]
	mov	r0, #0x1
	bl	ResetBlockReceivedFlag
	ldr	r0, .L1459+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L1421	@cond_branch
	ldrh	r1, [r5]
	cmp	r1, #0x1
	bne	.L1421	@cond_branch
	ldr	r0, .L1459+0xc
	strh	r1, [r0]
	b	.L1450
.L1460:
	.align	2, 0
.L1459:
	.word	gSpecialVar_0x8005
	.word	gBlockRecvBuffer
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_Result
.L1421:
	ldr	r0, .L1461
	ldrh	r1, [r0]
	add	r2, r0, #0
	cmp	r1, #0
	bne	.L1423	@cond_branch
	ldr	r0, .L1461+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L1423	@cond_branch
	ldr	r1, .L1461+0x8
	mov	r0, #0x2
	b	.L1452
.L1462:
	.align	2, 0
.L1461:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_Result
.L1423:
	ldrh	r0, [r2]
	cmp	r0, #0x1
	bne	.L1425	@cond_branch
	ldr	r0, .L1463
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1425	@cond_branch
	ldr	r1, .L1463+0x4
	mov	r0, #0x3
	b	.L1452
.L1464:
	.align	2, 0
.L1463:
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_Result
.L1425:
	ldr	r1, .L1465
	mov	r0, #0x0
.L1452:
	strh	r0, [r1]
	b	.L1450
.L1466:
	.align	2, 0
.L1465:
	.word	gSpecialVar_Result
.L1427:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.LCB10641
	b	.L1411	@long jump
.LCB10641:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1450	@cond_branch
	bl	bitmask_all_link_players_but_self
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1467
	mov	r2, #0x2
	bl	SendBlock
	b	.L1451
.L1468:
	.align	2, 0
.L1467:
	.word	gSpecialVar_Result
.L1431:
	bl	GetBlockReceivedStatus
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L1411	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1450	@cond_branch
	ldr	r1, .L1469
	ldr	r0, .L1469+0x4
	ldrh	r0, [r0]
	strh	r0, [r1]
	mov	r0, #0x0
	bl	ResetBlockReceivedFlag
.L1451:
	ldr	r1, .L1469+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	b	.L1411
.L1470:
	.align	2, 0
.L1469:
	.word	gSpecialVar_Result
	.word	gBlockRecvBuffer
	.word	gTasks
.L1435:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1436	@cond_branch
	ldr	r0, .L1471
	ldrh	r0, [r0]
	cmp	r0, #0x2
	bne	.L1450	@cond_branch
	ldr	r0, .L1471+0x4
	bl	ShowFieldAutoScrollMessage
	b	.L1450
.L1472:
	.align	2, 0
.L1471:
	.word	gSpecialVar_Result
	.word	gText_YourPartnerHasRetired
.L1436:
	ldr	r0, .L1473
	ldrh	r0, [r0]
	cmp	r0, #0x3
	bne	.L1450	@cond_branch
	ldr	r0, .L1473+0x4
	bl	ShowFieldAutoScrollMessage
	b	.L1450
.L1474:
	.align	2, 0
.L1473:
	.word	gSpecialVar_Result
	.word	gText_YourPartnerHasRetired
.L1440:
	mov	r0, #0x0
	bl	IsTextPrinterActive
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1411	@cond_branch
	b	.L1450
.L1442:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1411	@cond_branch
	bl	SetLinkStandbyCallback
	b	.L1450
.L1444:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1411	@cond_branch
.L1450:
	ldr	r0, .L1475
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L1411
.L1476:
	.align	2, 0
.L1475:
	.word	gTasks
.L1446:
	ldr	r0, .L1477
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1447	@cond_branch
	bl	SetCloseLinkCallback
.L1447:
	ldr	r0, .L1477+0x4
	ldr	r1, .L1477+0x8
	ldr	r1, [r1]
	str	r1, [r0]
	bl	EnableBothScriptContexts
	add	r0, r4, #0
	bl	DestroyTask
.L1411:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1478:
	.align	2, 0
.L1477:
	.word	gWirelessCommType
	.word	gBattleTypeFlags
	.word	sBattleTowerMultiBattleTypeFlags
.Lfe167:
	.size	 Task_LinkRetireStatusWithBattleTowerPartner,.Lfe167-Task_LinkRetireStatusWithBattleTowerPartner
	.align	2, 0
	.globl	Script_DoRayquazaScene
	.type	 Script_DoRayquazaScene,function
	.thumb_func
Script_DoRayquazaScene:
	push	{lr}
	ldr	r0, .L1482
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L1480	@cond_branch
	ldr	r2, .L1482+0x4
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DoRayquazaScene
	b	.L1481
.L1483:
	.align	2, 0
.L1482:
	.word	gSpecialVar_0x8004
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.L1480:
	ldr	r2, .L1484
	mov	r0, #0x1
	mov	r1, #0x0
	bl	DoRayquazaScene
.L1481:
	pop	{r0}
	bx	r0
.L1485:
	.align	2, 0
.L1484:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe168:
	.size	 Script_DoRayquazaScene,.Lfe168-Script_DoRayquazaScene
	.align	2, 0
	.globl	LoopWingFlapSE
	.type	 LoopWingFlapSE,function
	.thumb_func
LoopWingFlapSE:
	push	{lr}
	ldr	r0, .L1487
	mov	r1, #0x8
	bl	CreateTask
	mov	r0, #0x9d
	bl	PlaySE
	pop	{r0}
	bx	r0
.L1488:
	.align	2, 0
.L1487:
	.word	Task_LoopWingFlapSE
.Lfe169:
	.size	 LoopWingFlapSE,.Lfe169-LoopWingFlapSE
	.align	2, 0
	.type	 Task_LoopWingFlapSE,function
	.thumb_func
Task_LoopWingFlapSE:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L1492
	add	r4, r0, r1
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	ldr	r0, .L1492+0x4
	ldrh	r0, [r0]
	cmp	r1, r0
	bne	.L1490	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r4, #0x2]
	mov	r0, #0x9d
	bl	PlaySE
.L1490:
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr	r0, .L1492+0x8
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1491	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L1491:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1493:
	.align	2, 0
.L1492:
	.word	gTasks+0x8
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8004
.Lfe170:
	.size	 Task_LoopWingFlapSE,.Lfe170-Task_LoopWingFlapSE
	.align	2, 0
	.globl	CloseBattlePikeCurtain
	.type	 CloseBattlePikeCurtain,function
	.thumb_func
CloseBattlePikeCurtain:
	push	{lr}
	ldr	r0, .L1495
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1495+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x0
	mov	r0, #0x4
	strh	r0, [r1, #0x8]
	strh	r0, [r1, #0xa]
	strh	r0, [r1, #0xc]
	strh	r2, [r1, #0xe]
	pop	{r0}
	bx	r0
.L1496:
	.align	2, 0
.L1495:
	.word	Task_CloseBattlePikeCurtain
	.word	gTasks
.Lfe171:
	.size	 CloseBattlePikeCurtain,.Lfe171-CloseBattlePikeCurtain
	.align	2, 0
	.type	 Task_CloseBattlePikeCurtain,function
	.thumb_func
Task_CloseBattlePikeCurtain:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	lsl	r0, r0, #0x3
	ldr	r1, .L1510
	add	r5, r0, r1
	mov	r0, #0x6
	ldrsh	r1, [r5, r0]
	lsl	r1, r1, #0x1
	add	r1, r1, r5
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	mov	r1, #0x6
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x1
	add	r0, r0, r5
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	bne	.L1498	@cond_branch
	mov	r6, #0x0
.L1502:
	mov	r4, #0x0
	lsl	r3, r6, #0x3
	mov	sl, r3
	add	r7, r6, #0x1
	mov	r8, r7
.L1506:
	ldr	r0, .L1510+0x4
	ldr	r1, [r0]
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	add	r0, r0, r4
	add	r0, r0, #0x6
	mov	r3, #0x2
	ldrsh	r1, [r1, r3]
	add	r1, r1, r6
	add	r1, r1, #0x4
	ldr	r7, .L1510+0x8
	add	r2, r4, r7
	add	r2, r2, sl
	mov	r7, #0x6
	ldrsh	r3, [r5, r7]
	lsl	r3, r3, #0x5
	add	r2, r2, r3
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	bl	MapGridSetMetatileIdAt
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1506	@cond_branch
	mov	r1, r8
	lsl	r0, r1, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bls	.L1502	@cond_branch
	bl	DrawWholeMapView
	ldrh	r0, [r5, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x6]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L1498	@cond_branch
	mov	r0, r9
	bl	DestroyTask
	bl	EnableBothScriptContexts
.L1498:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1511:
	.align	2, 0
.L1510:
	.word	gTasks+0x8
	.word	gSaveBlock1Ptr
	.word	0x201
.Lfe172:
	.size	 Task_CloseBattlePikeCurtain,.Lfe172-Task_CloseBattlePikeCurtain
	.align	2, 0
	.globl	GetBattlePyramidHint
	.type	 GetBattlePyramidHint,function
	.thumb_func
GetBattlePyramidHint:
	push	{r4, r5, lr}
	ldr	r5, .L1513
	ldr	r0, .L1513+0x4
	ldrh	r0, [r0]
	mov	r1, #0x7
	bl	__udivsi3
	strh	r0, [r5]
	ldrh	r4, [r5]
	add	r0, r4, #0
	mov	r1, #0x14
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	sub	r4, r4, r1
	strh	r4, [r5]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1514:
	.align	2, 0
.L1513:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8004
.Lfe173:
	.size	 GetBattlePyramidHint,.Lfe173-GetBattlePyramidHint
	.align	2, 0
	.globl	ResetHealLocationFromDewford
	.type	 ResetHealLocationFromDewford,function
	.thumb_func
ResetHealLocationFromDewford:
	push	{lr}
	ldr	r0, .L1517
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x1c]
	mov	r0, #0xb0
	lsl	r0, r0, #0x4
	cmp	r1, r0
	bne	.L1516	@cond_branch
	mov	r0, #0x3
	bl	SetLastHealLocationWarp
.L1516:
	pop	{r0}
	bx	r0
.L1518:
	.align	2, 0
.L1517:
	.word	gSaveBlock1Ptr
.Lfe174:
	.size	 ResetHealLocationFromDewford,.Lfe174-ResetHealLocationFromDewford
	.section .rodata
	.align	1, 0
	.type	 sPokemonCenters.556,object
sPokemonCenters.556:
	.short	0x202
	.short	0x301
	.short	0x405
	.short	0x504
	.short	0x604
	.short	0x700
	.short	0x804
	.short	0x90b
	.short	0xa05
	.short	0xb05
	.short	0xc02
	.short	0xd06
	.short	0xe03
	.short	0xf02
	.short	0x100c
	.short	0x100a
	.short	0x1a35
	.short	0x1918
	.short	0x1919
	.short	0x191a
	.short	0x191b
	.short	0xffff
.text
	.align	2, 0
	.globl	InPokemonCenter
	.type	 InPokemonCenter,function
	.thumb_func
InPokemonCenter:
	push	{r4, lr}
	ldr	r0, .L1527
	ldr	r0, [r0]
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r2, .L1527+0x4
	ldrh	r0, [r2]
	ldr	r1, .L1527+0x8
	cmp	r0, r1
	beq	.L1521	@cond_branch
	add	r4, r1, #0
	add	r1, r2, #0
.L1523:
	ldrh	r0, [r2]
	cmp	r0, r3
	bne	.L1522	@cond_branch
	mov	r0, #0x1
	b	.L1526
.L1528:
	.align	2, 0
.L1527:
	.word	gSaveBlock1Ptr
	.word	sPokemonCenters.556
	.word	0xffff
.L1522:
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	ldrh	r0, [r1]
	cmp	r0, r4
	bne	.L1523	@cond_branch
.L1521:
	mov	r0, #0x0
.L1526:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe175:
	.size	 InPokemonCenter,.Lfe175-InPokemonCenter
	.align	2, 0
	.globl	ResetFanClub
	.type	 ResetFanClub,function
	.thumb_func
ResetFanClub:
	ldr	r0, .L1530
	ldr	r0, [r0]
	ldr	r2, .L1530+0x4
	add	r1, r0, r2
	mov	r2, #0x0
	strh	r2, [r1]
	mov	r1, #0xa1
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	strh	r2, [r0]
	bx	lr
.L1531:
	.align	2, 0
.L1530:
	.word	gSaveBlock1Ptr
	.word	0x141e
.Lfe176:
	.size	 ResetFanClub,.Lfe176-ResetFanClub
	.align	2, 0
	.globl	TryLoseFansFromPlayTimeAfterLinkBattle
	.type	 TryLoseFansFromPlayTimeAfterLinkBattle,function
	.thumb_func
TryLoseFansFromPlayTimeAfterLinkBattle:
	push	{lr}
	bl	DidPlayerGetFirstFans
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1533	@cond_branch
	bl	TryLoseFansFromPlayTime
	ldr	r0, .L1534
	ldr	r1, [r0]
	ldr	r0, .L1534+0x4
	ldr	r0, [r0]
	ldrh	r0, [r0, #0xe]
	mov	r2, #0xa1
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	strh	r0, [r1]
.L1533:
	pop	{r0}
	bx	r0
.L1535:
	.align	2, 0
.L1534:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
.Lfe177:
	.size	 TryLoseFansFromPlayTimeAfterLinkBattle,.Lfe177-TryLoseFansFromPlayTimeAfterLinkBattle
	.align	2, 0
	.globl	UpdateTrainerFanClubGameClear
	.type	 UpdateTrainerFanClubGameClear,function
	.thumb_func
UpdateTrainerFanClubGameClear:
	push	{r4, lr}
	ldr	r4, .L1538
	ldr	r0, [r4]
	ldr	r1, .L1538+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsr	r0, r0, #0x7
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1537	@cond_branch
	bl	SetPlayerGotFirstFans
	bl	SetInitialFansOfPlayer
	ldr	r1, [r4]
	ldr	r0, .L1538+0x8
	ldr	r0, [r0]
	ldrh	r0, [r0, #0xe]
	mov	r2, #0xa1
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	strh	r0, [r1]
	ldr	r0, .L1538+0xc
	bl	FlagClear
	ldr	r0, .L1538+0x10
	bl	FlagClear
	ldr	r0, .L1538+0x14
	bl	FlagClear
	mov	r0, #0xc6
	lsl	r0, r0, #0x2
	bl	FlagClear
	ldr	r0, .L1538+0x18
	bl	FlagClear
	ldr	r0, .L1538+0x1c
	mov	r1, #0x1
	bl	VarSet
.L1537:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1539:
	.align	2, 0
.L1538:
	.word	gSaveBlock1Ptr
	.word	0x141e
	.word	gSaveBlock2Ptr
	.word	0x315
	.word	0x316
	.word	0x317
	.word	0x2da
	.word	0x4095
.Lfe178:
	.size	 UpdateTrainerFanClubGameClear,.Lfe178-UpdateTrainerFanClubGameClear
	.section .rodata
	.type	 sCounterIncrements.569,object
sCounterIncrements.569:
	.byte	0x2
	.byte	0x1
	.byte	0x2
	.byte	0x1
.text
	.align	2, 0
	.globl	TryGainNewFanFromCounter
	.type	 TryGainNewFanFromCounter,function
	.thumb_func
TryGainNewFanFromCounter:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L1546
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bne	.L1541	@cond_branch
	ldr	r4, .L1546+0x4
	ldr	r0, [r4]
	ldr	r5, .L1546+0x8
	add	r3, r0, r5
	ldrh	r2, [r3]
	mov	r1, #0x7f
	and	r1, r1, r2
	ldr	r0, .L1546+0xc
	add	r0, r6, r0
	ldrb	r0, [r0]
	add	r1, r1, r0
	cmp	r1, #0x13
	ble	.L1542	@cond_branch
	bl	GetNumFansOfPlayerInTrainerFanClub
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bhi	.L1543	@cond_branch
	bl	PlayerGainRandomTrainerFan
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrh	r2, [r0]
	ldr	r1, .L1546+0x10
	and	r1, r1, r2
	strh	r1, [r0]
	b	.L1541
.L1547:
	.align	2, 0
.L1546:
	.word	0x4095
	.word	gSaveBlock1Ptr
	.word	0x141e
	.word	sCounterIncrements.569
	.word	0xff80
.L1543:
	ldr	r2, [r4]
	add	r2, r2, r5
	ldrh	r1, [r2]
	ldr	r0, .L1548
	and	r0, r0, r1
	mov	r1, #0x14
	orr	r0, r0, r1
	strh	r0, [r2]
	b	.L1541
.L1549:
	.align	2, 0
.L1548:
	.word	0xff80
.L1542:
	add	r0, r2, r0
	strh	r0, [r3]
.L1541:
	ldr	r0, .L1550
	ldr	r0, [r0]
	ldr	r1, .L1550+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x7f
	and	r0, r0, r1
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1551:
	.align	2, 0
.L1550:
	.word	gSaveBlock1Ptr
	.word	0x141e
.Lfe179:
	.size	 TryGainNewFanFromCounter,.Lfe179-TryGainNewFanFromCounter
	.section .rodata
	.type	 sFanClubMemberIds.573,object
	.size	 sFanClubMemberIds.573,8
sFanClubMemberIds.573:
	.byte	0x8
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.byte	0xf
.text
	.align	2, 0
	.type	 PlayerGainRandomTrainerFan,function
	.thumb_func
PlayerGainRandomTrainerFan:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	mov	r3, #0x0
	mov	r5, #0x0
	ldr	r7, .L1562
	ldr	r2, .L1562+0x4
	mov	r6, #0x1
.L1556:
	ldr	r0, [r7]
	add	r0, r0, r2
	ldrh	r1, [r0]
	ldr	r0, .L1562+0x8
	add	r0, r5, r0
	ldrb	r4, [r0]
	asr	r1, r1, r4
	and	r1, r1, r6
	cmp	r1, #0
	bne	.L1555	@cond_branch
	add	r3, r5, #0
	str	r2, [sp]
	str	r3, [sp, #0x4]
	bl	Random
	add	r1, r6, #0
	and	r1, r1, r0
	ldr	r2, [sp]
	ldr	r3, [sp, #0x4]
	cmp	r1, #0
	beq	.L1555	@cond_branch
	ldr	r0, [r7]
	add	r0, r0, r2
	add	r1, r6, #0
	lsl	r1, r1, r4
	ldrh	r2, [r0]
	orr	r1, r1, r2
	strh	r1, [r0]
	b	.L1561
.L1563:
	.align	2, 0
.L1562:
	.word	gSaveBlock1Ptr
	.word	0x141e
	.word	sFanClubMemberIds.573
.L1555:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x7
	bls	.L1556	@cond_branch
	ldr	r0, .L1564
	ldr	r2, [r0]
	ldr	r0, .L1564+0x4
	add	r2, r2, r0
	ldr	r1, .L1564+0x8
	add	r1, r3, r1
	mov	r0, #0x1
	ldrb	r1, [r1]
	lsl	r0, r0, r1
	ldrh	r1, [r2]
	orr	r0, r0, r1
	strh	r0, [r2]
.L1561:
	add	r0, r3, #0
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1565:
	.align	2, 0
.L1564:
	.word	gSaveBlock1Ptr
	.word	0x141e
	.word	sFanClubMemberIds.573
.Lfe180:
	.size	 PlayerGainRandomTrainerFan,.Lfe180-PlayerGainRandomTrainerFan
	.section .rodata
	.type	 sFanClubMemberIds.577,object
	.size	 sFanClubMemberIds.577,8
sFanClubMemberIds.577:
	.byte	0x8
	.byte	0xd
	.byte	0xe
	.byte	0xb
	.byte	0xa
	.byte	0xc
	.byte	0xf
	.byte	0x9
.text
	.align	2, 0
	.type	 PlayerLoseRandomTrainerFan,function
	.thumb_func
PlayerLoseRandomTrainerFan:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r0, #0x0
	mov	sl, r0
	bl	GetNumFansOfPlayerInTrainerFanClub
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bne	.L1567	@cond_branch
	mov	r0, #0x0
	b	.L1576
.L1577:
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r9
	lsl	r4, r4, r6
	ldrh	r1, [r0]
	eor	r4, r4, r1
	strh	r4, [r0]
	b	.L1575
.L1567:
	mov	r5, #0x0
	ldr	r2, .L1578
	mov	r8, r2
	ldr	r0, .L1578+0x4
	mov	r9, r0
	mov	r4, #0x1
.L1571:
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r9
	ldrh	r1, [r0]
	ldr	r7, .L1578+0x8
	add	r0, r5, r7
	ldrb	r6, [r0]
	asr	r1, r1, r6
	and	r1, r1, r4
	cmp	r1, #0
	beq	.L1570	@cond_branch
	mov	sl, r5
	bl	Random
	add	r1, r4, #0
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L1577	@cond_branch
.L1570:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x7
	bls	.L1571	@cond_branch
	ldr	r0, .L1578
	ldr	r0, [r0]
	ldr	r2, .L1578+0x4
	add	r4, r0, r2
	ldrh	r1, [r4]
	mov	r2, sl
	add	r0, r2, r7
	ldrb	r2, [r0]
	add	r0, r1, #0
	asr	r0, r0, r2
	mov	r3, #0x1
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L1575	@cond_branch
	add	r0, r3, #0
	lsl	r0, r0, r2
	eor	r1, r1, r0
	strh	r1, [r4]
.L1575:
	mov	r0, sl
.L1576:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1579:
	.align	2, 0
.L1578:
	.word	gSaveBlock1Ptr
	.word	0x141e
	.word	sFanClubMemberIds.577
.Lfe181:
	.size	 PlayerLoseRandomTrainerFan,.Lfe181-PlayerLoseRandomTrainerFan
	.align	2, 0
	.globl	GetNumFansOfPlayerInTrainerFanClub
	.type	 GetNumFansOfPlayerInTrainerFanClub,function
	.thumb_func
GetNumFansOfPlayerInTrainerFanClub:
	push	{r4, r5, lr}
	mov	r3, #0x0
	mov	r2, #0x0
	ldr	r0, .L1587
	ldr	r0, [r0]
	ldr	r1, .L1587+0x4
	add	r0, r0, r1
	ldrh	r4, [r0]
	mov	r5, #0x1
.L1584:
	add	r1, r2, #0
	add	r1, r1, #0x8
	add	r0, r4, #0
	asr	r0, r0, r1
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L1583	@cond_branch
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
.L1583:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x7
	bls	.L1584	@cond_branch
	add	r0, r3, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1588:
	.align	2, 0
.L1587:
	.word	gSaveBlock1Ptr
	.word	0x141e
.Lfe182:
	.size	 GetNumFansOfPlayerInTrainerFanClub,.Lfe182-GetNumFansOfPlayerInTrainerFanClub
	.align	2, 0
	.globl	TryLoseFansFromPlayTime
	.type	 TryLoseFansFromPlayTime,function
	.thumb_func
TryLoseFansFromPlayTime:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r2, .L1600
	ldr	r0, [r2]
	ldrh	r1, [r0, #0xe]
	ldr	r0, .L1600+0x4
	cmp	r1, r0
	bhi	.L1589	@cond_branch
	add	r6, r2, #0
	b	.L1593
.L1601:
	.align	2, 0
.L1600:
	.word	gSaveBlock2Ptr
	.word	0x3e6
.L1596:
	ldr	r0, [r6]
	ldrh	r1, [r0, #0xe]
	ldr	r4, .L1602
	ldr	r0, [r4]
	mov	r2, #0xa1
	lsl	r2, r2, #0x5
	add	r0, r0, r2
	ldrh	r0, [r0]
	sub	r1, r1, r0
	cmp	r1, #0xb
	ble	.L1589	@cond_branch
	bl	PlayerLoseRandomTrainerFan
	ldr	r0, [r4]
	mov	r1, #0xa1
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r1, r1, #0xc
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1593:
	bl	GetNumFansOfPlayerInTrainerFanClub
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x4
	bhi	.L1594	@cond_branch
	ldr	r0, .L1602
	ldr	r1, [r0]
	ldr	r0, [r6]
	ldrh	r0, [r0, #0xe]
	mov	r2, #0xa1
	lsl	r2, r2, #0x5
	add	r1, r1, r2
	strh	r0, [r1]
	b	.L1589
.L1603:
	.align	2, 0
.L1602:
	.word	gSaveBlock1Ptr
.L1594:
	cmp	r5, #0x8
	bne	.L1596	@cond_branch
.L1589:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe183:
	.size	 TryLoseFansFromPlayTime,.Lfe183-TryLoseFansFromPlayTime
	.align	2, 0
	.globl	IsFanClubMemberFanOfPlayer
	.type	 IsFanClubMemberFanOfPlayer,function
	.thumb_func
IsFanClubMemberFanOfPlayer:
	ldr	r0, .L1605
	ldr	r0, [r0]
	ldr	r1, .L1605+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldr	r1, .L1605+0x8
	ldrh	r1, [r1]
	asr	r0, r0, r1
	mov	r1, #0x1
	and	r0, r0, r1
	bx	lr
.L1606:
	.align	2, 0
.L1605:
	.word	gSaveBlock1Ptr
	.word	0x141e
	.word	gSpecialVar_0x8004
.Lfe184:
	.size	 IsFanClubMemberFanOfPlayer,.Lfe184-IsFanClubMemberFanOfPlayer
	.align	2, 0
	.type	 SetInitialFansOfPlayer,function
	.thumb_func
SetInitialFansOfPlayer:
	ldr	r0, .L1608
	ldr	r2, [r0]
	ldr	r0, .L1608+0x4
	add	r2, r2, r0
	ldrh	r1, [r2]
	mov	r3, #0x80
	lsl	r3, r3, #0x6
	add	r0, r3, #0
	orr	r0, r0, r1
	mov	r3, #0x80
	lsl	r3, r3, #0x1
	add	r1, r3, #0
	orr	r0, r0, r1
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	add	r1, r3, #0
	orr	r0, r0, r1
	strh	r0, [r2]
	bx	lr
.L1609:
	.align	2, 0
.L1608:
	.word	gSaveBlock1Ptr
	.word	0x141e
.Lfe185:
	.size	 SetInitialFansOfPlayer,.Lfe185-SetInitialFansOfPlayer
	.align	2, 0
	.globl	BufferFanClubTrainerName
	.type	 BufferFanClubTrainerName,function
	.thumb_func
BufferFanClubTrainerName:
	push	{lr}
	mov	r3, #0x0
	mov	r2, #0x0
	ldr	r0, .L1622
	ldrh	r0, [r0]
	sub	r0, r0, #0x8
	cmp	r0, #0x7
	bhi	.L1611	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1622+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1623:
	.align	2, 0
.L1622:
	.word	gSpecialVar_0x8004
	.word	.L1620
	.align	2, 0
	.align	2, 0
.L1620:
	.word	.L1611
	.word	.L1611
	.word	.L1614
	.word	.L1615
	.word	.L1616
	.word	.L1617
	.word	.L1618
	.word	.L1611
.L1614:
	mov	r3, #0x0
	mov	r2, #0x3
	b	.L1611
.L1615:
	mov	r3, #0x0
	mov	r2, #0x1
	b	.L1611
.L1616:
	mov	r3, #0x1
	mov	r2, #0x0
	b	.L1611
.L1617:
	mov	r3, #0x0
	mov	r2, #0x4
	b	.L1611
.L1618:
	mov	r3, #0x1
	mov	r2, #0x5
.L1611:
	ldr	r0, .L1624
	ldr	r0, [r0]
	ldr	r1, .L1624+0x4
	add	r0, r0, r1
	add	r1, r3, #0
	bl	BufferFanClubTrainerName_
	pop	{r0}
	bx	r0
.L1625:
	.align	2, 0
.L1624:
	.word	gSaveBlock1Ptr
	.word	0x3150
.Lfe186:
	.size	 BufferFanClubTrainerName,.Lfe186-BufferFanClubTrainerName
	.align	2, 0
	.type	 BufferFanClubTrainerName_,function
	.thumb_func
BufferFanClubTrainerName_:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r0, r5, #0x4
	add	r1, r6, r0
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L1627	@cond_branch
	cmp	r2, #0x5
	bhi	.L1635	@cond_branch
	lsl	r0, r2, #0x2
	ldr	r1, .L1638
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1639:
	.align	2, 0
.L1638:
	.word	.L1636
	.align	2, 0
	.align	2, 0
.L1636:
	.word	.L1635
	.word	.L1630
	.word	.L1631
	.word	.L1632
	.word	.L1633
	.word	.L1634
.L1630:
	ldr	r0, .L1640
	ldr	r1, .L1640+0x4
	bl	StringCopy
	b	.L1637
.L1641:
	.align	2, 0
.L1640:
	.word	gStringVar1
	.word	gText_Steven
.L1631:
	ldr	r0, .L1642
	ldr	r1, .L1642+0x4
	bl	StringCopy
	b	.L1637
.L1643:
	.align	2, 0
.L1642:
	.word	gStringVar1
	.word	gText_Brawly
.L1632:
	ldr	r0, .L1644
	ldr	r1, .L1644+0x4
	bl	StringCopy
	b	.L1637
.L1645:
	.align	2, 0
.L1644:
	.word	gStringVar1
	.word	gText_Winona
.L1633:
	ldr	r0, .L1646
	ldr	r1, .L1646+0x4
	bl	StringCopy
	b	.L1637
.L1647:
	.align	2, 0
.L1646:
	.word	gStringVar1
	.word	gText_Phoebe
.L1634:
	ldr	r0, .L1648
	ldr	r1, .L1648+0x4
	bl	StringCopy
	b	.L1637
.L1649:
	.align	2, 0
.L1648:
	.word	gStringVar1
	.word	gText_Glacia
.L1635:
	ldr	r0, .L1650
	ldr	r1, .L1650+0x4
	bl	StringCopy
	b	.L1637
.L1651:
	.align	2, 0
.L1650:
	.word	gStringVar1
	.word	gText_Wallace
.L1627:
	ldr	r4, .L1652
	add	r0, r4, #0
	mov	r2, #0x7
	bl	StringCopyN
	mov	r0, #0xff
	strb	r0, [r4, #0x7]
	add	r0, r6, #0
	add	r0, r0, #0x50
	add	r0, r0, r5
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	ConvertInternationalString
.L1637:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1653:
	.align	2, 0
.L1652:
	.word	gStringVar1
.Lfe187:
	.size	 BufferFanClubTrainerName_,.Lfe187-BufferFanClubTrainerName_
	.align	2, 0
	.globl	UpdateTrainerFansAfterLinkBattle
	.type	 UpdateTrainerFansAfterLinkBattle,function
	.thumb_func
UpdateTrainerFansAfterLinkBattle:
	push	{lr}
	ldr	r0, .L1658
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bne	.L1655	@cond_branch
	bl	TryLoseFansFromPlayTimeAfterLinkBattle
	ldr	r0, .L1658+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1656	@cond_branch
	bl	PlayerGainRandomTrainerFan
	b	.L1655
.L1659:
	.align	2, 0
.L1658:
	.word	0x4095
	.word	gBattleOutcome
.L1656:
	bl	PlayerLoseRandomTrainerFan
.L1655:
	pop	{r0}
	bx	r0
.Lfe188:
	.size	 UpdateTrainerFansAfterLinkBattle,.Lfe188-UpdateTrainerFansAfterLinkBattle
	.align	2, 0
	.type	 DidPlayerGetFirstFans,function
	.thumb_func
DidPlayerGetFirstFans:
	ldr	r0, .L1661
	ldr	r0, [r0]
	ldr	r1, .L1661+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsr	r0, r0, #0x7
	mov	r1, #0x1
	and	r0, r0, r1
	bx	lr
.L1662:
	.align	2, 0
.L1661:
	.word	gSaveBlock1Ptr
	.word	0x141e
.Lfe189:
	.size	 DidPlayerGetFirstFans,.Lfe189-DidPlayerGetFirstFans
	.align	2, 0
	.globl	SetPlayerGotFirstFans
	.type	 SetPlayerGotFirstFans,function
	.thumb_func
SetPlayerGotFirstFans:
	ldr	r0, .L1664
	ldr	r1, [r0]
	ldr	r0, .L1664+0x4
	add	r1, r1, r0
	ldrh	r2, [r1]
	mov	r0, #0x80
	orr	r0, r0, r2
	strh	r0, [r1]
	bx	lr
.L1665:
	.align	2, 0
.L1664:
	.word	gSaveBlock1Ptr
	.word	0x141e
.Lfe190:
	.size	 SetPlayerGotFirstFans,.Lfe190-SetPlayerGotFirstFans
	.align	2, 0
	.globl	Script_TryGainNewFanFromCounter
	.type	 Script_TryGainNewFanFromCounter,function
	.thumb_func
Script_TryGainNewFanFromCounter:
	push	{lr}
	ldr	r0, .L1667
	ldrb	r0, [r0]
	bl	TryGainNewFanFromCounter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L1668:
	.align	2, 0
.L1667:
	.word	gSpecialVar_0x8004
.Lfe191:
	.size	 Script_TryGainNewFanFromCounter,.Lfe191-Script_TryGainNewFanFromCounter
	.align	2, 0
	.globl	ClearEv
	.type	 ClearEv,function
	.thumb_func
ClearEv:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	mov	r1, #0x0
	mov	r0, sp
	strb	r1, [r0]
	ldr	r6, .L1670
	ldrh	r0, [r6]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L1670+0x4
	add	r0, r0, r4
	mov	r1, #0x1a
	mov	r2, sp
	bl	SetMonData
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x1b
	mov	r2, sp
	bl	SetMonData
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x1c
	mov	r2, sp
	bl	SetMonData
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x1d
	mov	r2, sp
	bl	SetMonData
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x1e
	mov	r2, sp
	bl	SetMonData
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	mov	r1, #0x1f
	mov	r2, sp
	bl	SetMonData
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	bl	CalculateMonStats
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1671:
	.align	2, 0
.L1670:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.Lfe192:
	.size	 ClearEv,.Lfe192-ClearEv
	.align	2, 0
	.globl	SetEv
	.type	 SetEv,function
	.thumb_func
SetEv:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0xff
	mov	r1, sp
	strb	r0, [r1]
	ldr	r0, .L1683
	ldrh	r0, [r0]
	cmp	r0, #0x5
	bhi	.L1673	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1683+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1684:
	.align	2, 0
.L1683:
	.word	gSpecialVar_Result
	.word	.L1680
	.align	2, 0
	.align	2, 0
.L1680:
	.word	.L1674
	.word	.L1675
	.word	.L1676
	.word	.L1677
	.word	.L1678
	.word	.L1679
.L1674:
	ldr	r0, .L1685
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1685+0x4
	add	r0, r0, r1
	mov	r1, #0x1a
	b	.L1682
.L1686:
	.align	2, 0
.L1685:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1675:
	ldr	r0, .L1687
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1687+0x4
	add	r0, r0, r1
	mov	r1, #0x1b
	b	.L1682
.L1688:
	.align	2, 0
.L1687:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1676:
	ldr	r0, .L1689
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1689+0x4
	add	r0, r0, r1
	mov	r1, #0x1c
	b	.L1682
.L1690:
	.align	2, 0
.L1689:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1677:
	ldr	r0, .L1691
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1691+0x4
	add	r0, r0, r1
	mov	r1, #0x1d
	b	.L1682
.L1692:
	.align	2, 0
.L1691:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1678:
	ldr	r0, .L1693
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1693+0x4
	add	r0, r0, r1
	mov	r1, #0x1e
.L1682:
	mov	r2, sp
	bl	SetMonData
	b	.L1673
.L1694:
	.align	2, 0
.L1693:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1679:
	ldr	r0, .L1695
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1695+0x4
	add	r0, r0, r1
	mov	r1, #0x1f
	mov	r2, sp
	bl	SetMonData
.L1673:
	ldr	r0, .L1695
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1695+0x4
	add	r0, r0, r1
	bl	CalculateMonStats
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L1696:
	.align	2, 0
.L1695:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.Lfe193:
	.size	 SetEv,.Lfe193-SetEv
	.align	2, 0
	.globl	SetIV
	.type	 SetIV,function
	.thumb_func
SetIV:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L1726
	ldrh	r0, [r0]
	cmp	r0, #0x5
	bls	.LCB12530
	b	.L1698	@long jump
.LCB12530:
	lsl	r0, r0, #0x2
	ldr	r1, .L1726+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1727:
	.align	2, 0
.L1726:
	.word	gSpecialVar_Result
	.word	.L1717
	.align	2, 0
	.align	2, 0
.L1717:
	.word	.L1699
	.word	.L1702
	.word	.L1705
	.word	.L1708
	.word	.L1711
	.word	.L1714
.L1699:
	ldr	r0, .L1728
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1728+0x4
	add	r0, r0, r1
	mov	r1, #0x27
	bl	GetMonData
	cmp	r0, #0x1f
	bne	.L1700	@cond_branch
	mov	r1, #0x0
	b	.L1719
.L1729:
	.align	2, 0
.L1728:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1700:
	mov	r1, #0x1f
.L1719:
	mov	r0, sp
	strb	r1, [r0]
	ldr	r0, .L1730
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1730+0x4
	add	r0, r0, r1
	mov	r1, #0x27
	b	.L1720
.L1731:
	.align	2, 0
.L1730:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1702:
	ldr	r0, .L1732
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1732+0x4
	add	r0, r0, r1
	mov	r1, #0x28
	bl	GetMonData
	cmp	r0, #0x1f
	bne	.L1703	@cond_branch
	mov	r1, sp
	mov	r0, #0x0
	b	.L1721
.L1733:
	.align	2, 0
.L1732:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1703:
	mov	r1, sp
	mov	r0, #0x1f
.L1721:
	strb	r0, [r1]
	ldr	r0, .L1734
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1734+0x4
	add	r0, r0, r1
	mov	r1, #0x28
	b	.L1720
.L1735:
	.align	2, 0
.L1734:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1705:
	ldr	r0, .L1736
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1736+0x4
	add	r0, r0, r1
	mov	r1, #0x29
	bl	GetMonData
	cmp	r0, #0x1f
	bne	.L1706	@cond_branch
	mov	r1, sp
	mov	r0, #0x0
	b	.L1722
.L1737:
	.align	2, 0
.L1736:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1706:
	mov	r1, sp
	mov	r0, #0x1f
.L1722:
	strb	r0, [r1]
	ldr	r0, .L1738
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1738+0x4
	add	r0, r0, r1
	mov	r1, #0x29
	b	.L1720
.L1739:
	.align	2, 0
.L1738:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1708:
	ldr	r0, .L1740
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1740+0x4
	add	r0, r0, r1
	mov	r1, #0x2a
	bl	GetMonData
	cmp	r0, #0x1f
	bne	.L1709	@cond_branch
	mov	r1, sp
	mov	r0, #0x0
	b	.L1723
.L1741:
	.align	2, 0
.L1740:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1709:
	mov	r1, sp
	mov	r0, #0x1f
.L1723:
	strb	r0, [r1]
	ldr	r0, .L1742
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1742+0x4
	add	r0, r0, r1
	mov	r1, #0x2a
	b	.L1720
.L1743:
	.align	2, 0
.L1742:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1711:
	ldr	r0, .L1744
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1744+0x4
	add	r0, r0, r1
	mov	r1, #0x2b
	bl	GetMonData
	cmp	r0, #0x1f
	bne	.L1712	@cond_branch
	mov	r1, sp
	mov	r0, #0x0
	b	.L1724
.L1745:
	.align	2, 0
.L1744:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1712:
	mov	r1, sp
	mov	r0, #0x1f
.L1724:
	strb	r0, [r1]
	ldr	r0, .L1746
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1746+0x4
	add	r0, r0, r1
	mov	r1, #0x2b
.L1720:
	mov	r2, sp
	bl	SetMonData
	b	.L1698
.L1747:
	.align	2, 0
.L1746:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1714:
	ldr	r0, .L1748
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1748+0x4
	add	r0, r0, r1
	mov	r1, #0x2c
	bl	GetMonData
	cmp	r0, #0x1f
	bne	.L1715	@cond_branch
	mov	r1, sp
	mov	r0, #0x0
	b	.L1725
.L1749:
	.align	2, 0
.L1748:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.L1715:
	mov	r1, sp
	mov	r0, #0x1f
.L1725:
	strb	r0, [r1]
	ldr	r0, .L1750
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1750+0x4
	add	r0, r0, r1
	mov	r1, #0x2c
	mov	r2, sp
	bl	SetMonData
.L1698:
	ldr	r0, .L1750
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1750+0x4
	add	r0, r0, r1
	bl	CalculateMonStats
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L1751:
	.align	2, 0
.L1750:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.Lfe194:
	.size	 SetIV,.Lfe194-SetIV
	.align	2, 0
	.globl	SetNature
	.type	 SetNature,function
	.thumb_func
SetNature:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L1778
	ldrh	r0, [r0]
	cmp	r0, #0x7f
	bls	.LCB12853
	b	.L1753	@long jump
.LCB12853:
	lsl	r0, r0, #0x2
	ldr	r1, .L1778+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1779:
	.align	2, 0
.L1778:
	.word	gSpecialVar_Result
	.word	.L1775
	.align	2, 0
	.align	2, 0
.L1775:
	.word	.L1754
	.word	.L1755
	.word	.L1756
	.word	.L1757
	.word	.L1758
	.word	.L1759
	.word	.L1760
	.word	.L1761
	.word	.L1762
	.word	.L1763
	.word	.L1764
	.word	.L1765
	.word	.L1766
	.word	.L1767
	.word	.L1768
	.word	.L1769
	.word	.L1770
	.word	.L1771
	.word	.L1772
	.word	.L1773
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1753
	.word	.L1774
.L1754:
	mov	r1, #0x1
	b	.L1777
.L1755:
	mov	r1, #0x3
	b	.L1777
.L1756:
	mov	r1, #0x4
	b	.L1777
.L1757:
	mov	r1, #0x2
	b	.L1777
.L1758:
	mov	r1, #0x5
	b	.L1777
.L1759:
	mov	r1, #0x8
	b	.L1777
.L1760:
	mov	r1, #0x9
	b	.L1777
.L1761:
	mov	r1, #0x7
	b	.L1777
.L1762:
	mov	r1, #0xf
	b	.L1777
.L1763:
	mov	r1, #0x10
	b	.L1777
.L1764:
	mov	r1, #0x13
	b	.L1777
.L1765:
	mov	r1, #0x11
	b	.L1777
.L1766:
	mov	r1, #0x14
	b	.L1777
.L1767:
	mov	r1, #0x15
	b	.L1777
.L1768:
	mov	r1, #0x17
	b	.L1777
.L1769:
	mov	r1, #0x16
	b	.L1777
.L1770:
	mov	r1, #0xa
	b	.L1777
.L1771:
	mov	r1, #0xb
	b	.L1777
.L1772:
	mov	r1, #0xd
	b	.L1777
.L1773:
	mov	r1, #0xe
	b	.L1777
.L1774:
	mov	r1, #0x1a
.L1777:
	mov	r0, sp
	strb	r1, [r0]
.L1753:
	ldr	r6, .L1780
	ldrh	r0, [r6]
	mov	r5, #0x64
	mul	r0, r0, r5
	ldr	r4, .L1780+0x4
	add	r0, r0, r4
	mov	r1, #0x59
	mov	r2, sp
	bl	SetMonData
	ldrh	r0, [r6]
	mul	r0, r0, r5
	add	r0, r0, r4
	bl	CalculateMonStats
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1781:
	.align	2, 0
.L1780:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
.Lfe195:
	.size	 SetNature,.Lfe195-SetNature
	.align	2, 0
	.globl	ClearParty
	.type	 ClearParty,function
	.thumb_func
ClearParty:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, .L1783
	ldr	r2, .L1783+0x4
	mov	r0, sp
	bl	CpuSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L1784:
	.align	2, 0
.L1783:
	.word	gPlayerParty
	.word	0x5000096
.Lfe196:
	.size	 ClearParty,.Lfe196-ClearParty
	.align	2, 0
	.globl	CatchingContestValue
	.type	 CatchingContestValue,function
	.thumb_func
CatchingContestValue:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L1786
	mov	r8, r0
	ldrh	r0, [r0]
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r4, .L1786+0x4
	add	r0, r0, r4
	mov	r1, #0x38
	bl	GetMonData
	add	r6, r0, #0
	mov	r1, r8
	ldrh	r0, [r1]
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r0, r0, r4
	mov	r1, #0x27
	bl	GetMonData
	add	r5, r0, #0
	mov	r1, r8
	ldrh	r0, [r1]
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r0, r0, r4
	mov	r1, #0x28
	bl	GetMonData
	add	r7, r0, #0
	mov	r1, r8
	ldrh	r0, [r1]
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r0, r0, r4
	mov	r1, #0x2a
	bl	GetMonData
	mov	sl, r0
	mov	r1, r8
	ldrh	r0, [r1]
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r0, r0, r4
	mov	r1, #0x39
	bl	GetMonData
	mov	r9, r0
	mov	r1, r8
	ldrh	r0, [r1]
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r0, r0, r4
	mov	r1, #0x39
	bl	GetMonData
	add	r1, r0, #0
	lsl	r4, r6, #0x2
	add	r4, r4, r6
	add	r5, r5, r7
	add	r5, r5, sl
	lsl	r5, r5, #0x1
	add	r4, r4, r5
	mov	r0, r9
	bl	__udivsi3
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r4, r4, r0
	ldr	r0, .L1786+0x8
	strh	r4, [r0]
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1787:
	.align	2, 0
.L1786:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_Result
.Lfe197:
	.size	 CatchingContestValue,.Lfe197-CatchingContestValue
	.align	2, 0
	.globl	CountSymbols
	.type	 CountSymbols,function
	.thumb_func
CountSymbols:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r4, .L1795
	ldr	r6, .L1795+0x4
.L1792:
	add	r0, r4, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1791	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1791:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, r6
	bls	.L1792	@cond_branch
	ldr	r0, .L1795+0x8
	strh	r5, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1796:
	.align	2, 0
.L1795:
	.word	0x8c4
	.word	0x8d1
	.word	gSpecialVar_Result
.Lfe198:
	.size	 CountSymbols,.Lfe198-CountSymbols
	.align	2, 0
	.globl	doubleVar
	.type	 doubleVar,function
	.thumb_func
doubleVar:
	ldr	r1, .L1798
	ldrh	r0, [r1]
	lsl	r0, r0, #0x1
	strh	r0, [r1]
	bx	lr
.L1799:
	.align	2, 0
.L1798:
	.word	gSpecialVar_0x800B
.Lfe199:
	.size	 doubleVar,.Lfe199-doubleVar
	.section .rodata
	.type	 sText_Greeting0,object
sText_Greeting0:
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xe7
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting0,26
	.type	 sText_Greeting1,object
sText_Greeting1:
	.byte	0xbb
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe6
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x36
	.byte	0xfe
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xed
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting1,23
	.type	 sText_Greeting2,object
sText_Greeting2:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0x0
	.byte	0xd9
	.byte	0xec
	.byte	0xe4
	.byte	0xd9
	.byte	0xe6
	.byte	0xe8
	.byte	0xb8
	.byte	0xfe
	.byte	0xe7
	.byte	0xe3
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0x0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xed
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting2,34
	.type	 sText_Greeting3,object
sText_Greeting3:
	.byte	0xbe
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting3,22
	.type	 sText_Greeting4,object
sText_Greeting4:
	.byte	0xbe
	.byte	0xe3
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0x0
	.byte	0xe0
	.byte	0xd9
	.byte	0xdb
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd5
	.byte	0xe6
	.byte	0xdd
	.byte	0xd9
	.byte	0xe7
	.byte	0xac
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting4,30
	.type	 sText_Greeting5,object
sText_Greeting5:
	.byte	0xbe
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xe3
	.byte	0xe0
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xd7
	.byte	0xdf
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting5,18
	.type	 sText_Greeting6,object
sText_Greeting6:
	.byte	0xbc
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdf
	.byte	0xb8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xe0
	.byte	0xe0
	.byte	0xfe
	.byte	0xe1
	.byte	0xdd
	.byte	0xe7
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xea
	.byte	0xdd
	.byte	0xd7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting6,36
	.type	 sText_Greeting7,object
sText_Greeting7:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xdb
	.byte	0xdd
	.byte	0xe2
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfe
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xdd
	.byte	0xd7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting7,39
	.type	 sText_Greeting8,object
sText_Greeting8:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe0
	.byte	0xe0
	.byte	0x0
	.byte	0xe2
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xe7
	.byte	0xd9
	.byte	0xad
	.byte	0xfe
	.byte	0xc8
	.byte	0xe3
	.byte	0xe8
	.byte	0x0
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting8,28
	.type	 sText_Greeting9,object
sText_Greeting9:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe0
	.byte	0xe0
	.byte	0xd9
	.byte	0xe2
	.byte	0xdb
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xac
	.byte	0xfe
	.byte	0xc2
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xd7
	.byte	0xe9
	.byte	0xe8
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting9,34
	.type	 sText_Greeting10,object
sText_Greeting10:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xd7
	.byte	0xdc
	.byte	0xe3
	.byte	0xe3
	.byte	0xe0
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xdf
	.byte	0xdd
	.byte	0xd8
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting10,36
	.type	 sText_Greeting11,object
sText_Greeting11:
	.byte	0xbf
	.byte	0xe2
	.byte	0x0
	.byte	0xdb
	.byte	0xd5
	.byte	0xe6
	.byte	0xd8
	.byte	0xd9
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting11,11
	.type	 sText_Greeting12,object
sText_Greeting12:
	.byte	0xc7
	.byte	0xed
	.byte	0x0
	.byte	0xd8
	.byte	0xd5
	.byte	0xd8
	.byte	0x0
	.byte	0xd6
	.byte	0xe9
	.byte	0xed
	.byte	0xe7
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting12,28
	.type	 sText_Greeting13,object
sText_Greeting13:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0xab
	.byte	0xfe
	.byte	0xbc
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xdf
	.byte	0xab
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting13,27
	.type	 sText_Greeting14,object
sText_Greeting14:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xe3
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xfe
	.byte	0xe7
	.byte	0xe8
	.byte	0xd9
	.byte	0xe4
	.byte	0xe4
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xde
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xd9
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting14,51
	.type	 sText_Greeting15,object
sText_Greeting15:
	.byte	0xbd
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0x0
	.byte	0xe5
	.byte	0xe9
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0xac
	.byte	0xfe
	.byte	0xc3
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe3
	.byte	0xea
	.byte	0xd9
	.byte	0xe2
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting15,48
	.type	 sText_Greeting16,object
sText_Greeting16:
	.byte	0xcd
	.byte	0xe3
	.byte	0xb8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xed
	.byte	0x0
	.byte	0xe0
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xde
	.byte	0xe9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xe3
	.byte	0xe2
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xe3
	.byte	0xeb
	.byte	0xac
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting16,39
	.type	 sText_Greeting17,object
sText_Greeting17:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xe2
	.byte	0xd5
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xd5
	.byte	0xe0
	.byte	0xad
	.byte	0xfe
	.byte	0xbb
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xac
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting17,25
	.type	 sText_Greeting18,object
sText_Greeting18:
	.byte	0xcc
	.byte	0xd9
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0xb8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xd7
	.byte	0xe0
	.byte	0xdd
	.byte	0xd7
	.byte	0xdf
	.byte	0xfe
	.byte	0xcc
	.byte	0xe9
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xe9
	.byte	0xe6
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting18,43
	.type	 sText_Greeting19,object
sText_Greeting19:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xe4
	.byte	0xe9
	.byte	0xe8
	.byte	0x0
	.byte	0xe9
	.byte	0xe4
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd8
	.byte	0xd9
	.byte	0xd7
	.byte	0xd9
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting19,31
	.type	 sText_Greeting20,object
sText_Greeting20:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xeb
	.byte	0xd9
	.byte	0xd9
	.byte	0xe4
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xd9
	.byte	0xd5
	.byte	0xe1
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting20,31
	.type	 sText_Greeting21,object
sText_Greeting21:
	.byte	0xc8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xe6
	.byte	0xd7
	.byte	0xed
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting21,11
	.type	 sText_Greeting22,object
sText_Greeting22:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xb4
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xfe
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xe3
	.byte	0xd8
	.byte	0xed
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xdb
	.byte	0x0
	.byte	0xd5
	.byte	0xda
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting22,45
	.type	 sText_Greeting23,object
sText_Greeting23:
	.byte	0xc3
	.byte	0xb4
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xe2
	.byte	0xd9
	.byte	0xea
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe0
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting23,34
	.type	 sText_Greeting24,object
sText_Greeting24:
	.byte	0xbb
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xed
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xeb
	.byte	0xe6
	.byte	0xd9
	.byte	0xd7
	.byte	0xdf
	.byte	0xd9
	.byte	0xd8
	.byte	0xac
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting24,31
	.type	 sText_Greeting25,object
sText_Greeting25:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0xfe
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xcd
	.byte	0xdc
	.byte	0xd5
	.byte	0xd8
	.byte	0xe3
	.byte	0xeb
	.byte	0x0
	.byte	0xcc
	.byte	0xd9
	.byte	0xd5
	.byte	0xe0
	.byte	0xe1
	.byte	0xab
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting25,53
	.type	 sText_Greeting26,object
sText_Greeting26:
	.byte	0xd1
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdd
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xdd
	.byte	0xe8
	.byte	0xac
	.byte	0xfe
	.byte	0xd1
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe1
	.byte	0x0
	.byte	0xc3
	.byte	0xac
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting26,30
	.type	 sText_Greeting27,object
sText_Greeting27:
	.byte	0xc3
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xd5
	.byte	0xe2
	.byte	0xed
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xfe
	.byte	0xe1
	.byte	0xe3
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xac
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting27,43
	.type	 sText_Greeting28,object
sText_Greeting28:
	.byte	0xcd
	.byte	0xe8
	.byte	0xe6
	.byte	0xd9
	.byte	0xe2
	.byte	0xdb
	.byte	0xe8
	.byte	0xdc
	.byte	0x0
	.byte	0xd7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xe6
	.byte	0xe3
	.byte	0xe1
	.byte	0x0
	.byte	0xeb
	.byte	0xdd
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe2
	.byte	0xad
	.byte	0xfe
	.byte	0xcc
	.byte	0xd9
	.byte	0xe1
	.byte	0xd9
	.byte	0xe1
	.byte	0xd6
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting28,44
	.type	 sText_Greeting29,object
sText_Greeting29:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe7
	.byte	0xe8
	.byte	0xd5
	.byte	0xe2
	.byte	0xd8
	.byte	0x0
	.byte	0xd5
	.byte	0xfe
	.byte	0xdb
	.byte	0xdc
	.byte	0xe3
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xd7
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting29,38
	.type	 sText_Greeting30,object
sText_Greeting30:
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0xfe
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xd9
	.byte	0xe4
	.byte	0xdd
	.byte	0xd7
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.byte	0xff
	.size	 sText_Greeting30,29
	.type	 sText_Greeting31,object
sText_Greeting31:
	.byte	0xc9
	.byte	0xdc
	.byte	0xb8
	.byte	0x0
	.byte	0xdc
	.byte	0xd9
	.byte	0xed
	.byte	0xad
	.byte	0xad
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting31,11
	.type	 sText_Greeting32,object
sText_Greeting32:
	.byte	0xc8
	.byte	0xdd
	.byte	0xd7
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xd9
	.byte	0xe8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xab
	.byte	0xff
	.size	 sText_Greeting32,18
	.type	 sText_Greeting33,object
sText_Greeting33:
	.byte	0xc6
	.byte	0xd9
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdc
	.byte	0xd5
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe9
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xdb
	.byte	0xd9
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0xe6
	.byte	0xab
	.byte	0xff
	.size	 sText_Greeting33,25
	.type	 sText_Greeting34,object
sText_Greeting34:
	.byte	0xbe
	.byte	0xdd
	.byte	0xd8
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xeb
	.byte	0xd5
	.byte	0xe2
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xe1
	.byte	0xd9
	.byte	0xac
	.byte	0xff
	.size	 sText_Greeting34,27
	.type	 sText_Greeting35,object
sText_Greeting35:
	.byte	0xbe
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xd8
	.byte	0xe6
	.byte	0xd5
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe3
	.byte	0xe9
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting35,21
	.type	 sText_Greeting36,object
sText_Greeting36:
	.byte	0xc2
	.byte	0xd9
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe7
	.byte	0xe4
	.byte	0xd5
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xe7
	.byte	0xe3
	.byte	0xe1
	.byte	0xd9
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xe2
	.byte	0xdb
	.byte	0xd9
	.byte	0xac
	.byte	0xff
	.size	 sText_Greeting36,32
	.type	 sText_Greeting37,object
sText_Greeting37:
	.byte	0xd1
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xac
	.byte	0x0
	.byte	0xbc
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xac
	.byte	0x0
	.byte	0xd1
	.byte	0xdc
	.byte	0xd5
	.byte	0xe8
	.byte	0xb4
	.byte	0xe7
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe3
	.byte	0xe2
	.byte	0xac
	.byte	0xff
	.size	 sText_Greeting37,33
	.type	 sText_Greeting38,object
sText_Greeting38:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd5
	.byte	0xd8
	.byte	0xed
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xe6
	.byte	0xe3
	.byte	0xd7
	.byte	0xdf
	.byte	0x0
	.byte	0xb4
	.byte	0xe2
	.byte	0x0
	.byte	0xe6
	.byte	0xe3
	.byte	0xe0
	.byte	0xe0
	.byte	0xab
	.byte	0xff
	.size	 sText_Greeting38,27
	.type	 sText_Greeting39,object
sText_Greeting39:
	.byte	0xc8
	.byte	0xe3
	.byte	0x0
	.byte	0xe6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xd9
	.byte	0xd5
	.byte	0xe6
	.byte	0xed
	.byte	0xb8
	.byte	0x0
	.byte	0xd9
	.byte	0xdc
	.byte	0xac
	.byte	0xff
	.size	 sText_Greeting39,27
	.type	 sText_Greeting40,object
sText_Greeting40:
	.byte	0xd3
	.byte	0xe3
	.byte	0xe9
	.byte	0xab
	.byte	0xfe
	.byte	0xc3
	.byte	0x0
	.byte	0xe2
	.byte	0xd9
	.byte	0xd9
	.byte	0xd8
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting40,27
	.type	 sText_Greeting41,object
sText_Greeting41:
	.byte	0xce
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xeb
	.byte	0xdc
	.byte	0xd9
	.byte	0xd9
	.byte	0xe0
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xda
	.byte	0xd5
	.byte	0xe8
	.byte	0xd9
	.byte	0x0
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe9
	.byte	0xe6
	.byte	0xe2
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting41,30
	.type	 sText_Greeting42,object
sText_Greeting42:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xe6
	.byte	0xd5
	.byte	0xe6
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0x0
	.byte	0xdb
	.byte	0xe3
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting42,18
	.type	 sText_Greeting43,object
sText_Greeting43:
	.byte	0xc3
	.byte	0x0
	.byte	0xe0
	.byte	0xdd
	.byte	0xea
	.byte	0xd9
	.byte	0x0
	.byte	0xda
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xdd
	.byte	0xe2
	.byte	0xdb
	.byte	0xab
	.byte	0xff
	.size	 sText_Greeting43,21
	.type	 sText_Greeting44,object
sText_Greeting44:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xd5
	.byte	0xdf
	.byte	0xd9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xdd
	.byte	0xe7
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xe3
	.byte	0x0
	.byte	0xe7
	.byte	0xd9
	.byte	0xe6
	.byte	0xdd
	.byte	0xe3
	.byte	0xe9
	.byte	0xe7
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting44,39
	.type	 sText_Greeting45,object
sText_Greeting45:
	.byte	0xbb
	.byte	0xe6
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xe9
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xe6
	.byte	0x0
	.byte	0xe3
	.byte	0xe6
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xdc
	.byte	0xe9
	.byte	0xe2
	.byte	0xe8
	.byte	0xd9
	.byte	0xd8
	.byte	0xac
	.byte	0xff
	.size	 sText_Greeting45,34
	.type	 sText_Greeting46,object
sText_Greeting46:
	.byte	0xc0
	.byte	0xdd
	.byte	0xdb
	.byte	0xdc
	.byte	0xe8
	.byte	0x0
	.byte	0xe8
	.byte	0xdc
	.byte	0xd9
	.byte	0x0
	.byte	0xe4
	.byte	0xe3
	.byte	0xeb
	.byte	0xd9
	.byte	0xe6
	.byte	0xab
	.byte	0xfe
	.byte	0xc0
	.byte	0xe6
	.byte	0xd9
	.byte	0xd9
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0xe7
	.byte	0xd9
	.byte	0xe0
	.byte	0xda
	.byte	0x0
	.byte	0xe3
	.byte	0xda
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xd7
	.byte	0xdc
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xe7
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting46,47
	.type	 sText_Greeting47,object
sText_Greeting47:
	.byte	0xcd
	.byte	0xe9
	.byte	0xe6
	.byte	0xd9
	.byte	0xb8
	.byte	0x0
	.byte	0xc3
	.byte	0x0
	.byte	0xd7
	.byte	0xd5
	.byte	0xe2
	.byte	0x0
	.byte	0xda
	.byte	0xdd
	.byte	0xe8
	.byte	0x0
	.byte	0xdd
	.byte	0xe2
	.byte	0x0
	.byte	0xd5
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xe8
	.byte	0xe8
	.byte	0xe0
	.byte	0xd9
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting47,29
	.type	 sText_Greeting48,object
sText_Greeting48:
	.byte	0xca
	.byte	0xe0
	.byte	0xd9
	.byte	0xd5
	.byte	0xe7
	.byte	0xd9
	.byte	0x0
	.byte	0xd8
	.byte	0xe3
	.byte	0xe2
	.byte	0xb4
	.byte	0xe8
	.byte	0x0
	.byte	0xdc
	.byte	0xe9
	.byte	0xe6
	.byte	0xe8
	.byte	0xfe
	.byte	0xe1
	.byte	0xed
	.byte	0x0
	.byte	0xca
	.byte	0xe3
	.byte	0xdf
	.byte	0x1b
	.byte	0xe1
	.byte	0xe3
	.byte	0xe2
	.byte	0x0
	.byte	0xe8
	.byte	0xe3
	.byte	0xe3
	.byte	0x0
	.byte	0xd6
	.byte	0xd5
	.byte	0xd8
	.byte	0xe0
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting48,40
	.type	 sText_Greeting49,object
sText_Greeting49:
	.byte	0xc3
	.byte	0xb4
	.byte	0xe1
	.byte	0x0
	.byte	0xdc
	.byte	0xe9
	.byte	0xe2
	.byte	0xdb
	.byte	0xe6
	.byte	0xed
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting49,12
	.type	 sText_Greeting50,object
sText_Greeting50:
	.byte	0xc1
	.byte	0xe3
	.byte	0xe3
	.byte	0xd8
	.byte	0x0
	.byte	0xe0
	.byte	0xe9
	.byte	0xd7
	.byte	0xdf
	.byte	0xb8
	.byte	0x0
	.byte	0xce
	.byte	0xe6
	.byte	0xd5
	.byte	0xdd
	.byte	0xe2
	.byte	0xd9
	.byte	0xe6
	.byte	0xad
	.byte	0xfe
	.byte	0xbe
	.byte	0xe3
	.byte	0x0
	.byte	0xed
	.byte	0xe3
	.byte	0xe9
	.byte	0xe6
	.byte	0x0
	.byte	0xd6
	.byte	0xd9
	.byte	0xe7
	.byte	0xe8
	.byte	0xad
	.byte	0xff
	.size	 sText_Greeting50,34
.text
	.align	2, 0
	.globl	getintro
	.type	 getintro,function
	.thumb_func
getintro:
	push	{lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x33
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x32
	bls	.LCB13191
	b	.L1801	@long jump
.LCB13191:
	lsl	r0, r0, #0x2
	ldr	r1, .L1855
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1856:
	.align	2, 0
.L1855:
	.word	.L1853
	.align	2, 0
	.align	2, 0
.L1853:
	.word	.L1802
	.word	.L1803
	.word	.L1804
	.word	.L1805
	.word	.L1806
	.word	.L1807
	.word	.L1808
	.word	.L1809
	.word	.L1810
	.word	.L1811
	.word	.L1812
	.word	.L1813
	.word	.L1814
	.word	.L1815
	.word	.L1816
	.word	.L1817
	.word	.L1818
	.word	.L1819
	.word	.L1820
	.word	.L1821
	.word	.L1822
	.word	.L1823
	.word	.L1824
	.word	.L1825
	.word	.L1826
	.word	.L1827
	.word	.L1828
	.word	.L1829
	.word	.L1830
	.word	.L1831
	.word	.L1832
	.word	.L1833
	.word	.L1834
	.word	.L1835
	.word	.L1836
	.word	.L1837
	.word	.L1838
	.word	.L1839
	.word	.L1840
	.word	.L1841
	.word	.L1842
	.word	.L1843
	.word	.L1844
	.word	.L1845
	.word	.L1846
	.word	.L1847
	.word	.L1848
	.word	.L1849
	.word	.L1850
	.word	.L1851
	.word	.L1852
.L1802:
	ldr	r0, .L1857
	ldr	r1, .L1857+0x4
	bl	StringCopy
	b	.L1801
.L1858:
	.align	2, 0
.L1857:
	.word	gStringVar4
	.word	sText_Greeting0
.L1803:
	ldr	r0, .L1859
	ldr	r1, .L1859+0x4
	bl	StringCopy
	b	.L1801
.L1860:
	.align	2, 0
.L1859:
	.word	gStringVar4
	.word	sText_Greeting1
.L1804:
	ldr	r0, .L1861
	ldr	r1, .L1861+0x4
	bl	StringCopy
	b	.L1801
.L1862:
	.align	2, 0
.L1861:
	.word	gStringVar4
	.word	sText_Greeting2
.L1805:
	ldr	r0, .L1863
	ldr	r1, .L1863+0x4
	bl	StringCopy
	b	.L1801
.L1864:
	.align	2, 0
.L1863:
	.word	gStringVar4
	.word	sText_Greeting3
.L1806:
	ldr	r0, .L1865
	ldr	r1, .L1865+0x4
	bl	StringCopy
	b	.L1801
.L1866:
	.align	2, 0
.L1865:
	.word	gStringVar4
	.word	sText_Greeting4
.L1807:
	ldr	r0, .L1867
	ldr	r1, .L1867+0x4
	bl	StringCopy
	b	.L1801
.L1868:
	.align	2, 0
.L1867:
	.word	gStringVar4
	.word	sText_Greeting5
.L1808:
	ldr	r0, .L1869
	ldr	r1, .L1869+0x4
	bl	StringCopy
	b	.L1801
.L1870:
	.align	2, 0
.L1869:
	.word	gStringVar4
	.word	sText_Greeting6
.L1809:
	ldr	r0, .L1871
	ldr	r1, .L1871+0x4
	bl	StringCopy
	b	.L1801
.L1872:
	.align	2, 0
.L1871:
	.word	gStringVar4
	.word	sText_Greeting7
.L1810:
	ldr	r0, .L1873
	ldr	r1, .L1873+0x4
	bl	StringCopy
	b	.L1801
.L1874:
	.align	2, 0
.L1873:
	.word	gStringVar4
	.word	sText_Greeting8
.L1811:
	ldr	r0, .L1875
	ldr	r1, .L1875+0x4
	bl	StringCopy
	b	.L1801
.L1876:
	.align	2, 0
.L1875:
	.word	gStringVar4
	.word	sText_Greeting9
.L1812:
	ldr	r0, .L1877
	ldr	r1, .L1877+0x4
	bl	StringCopy
	b	.L1801
.L1878:
	.align	2, 0
.L1877:
	.word	gStringVar4
	.word	sText_Greeting10
.L1813:
	ldr	r0, .L1879
	ldr	r1, .L1879+0x4
	bl	StringCopy
	b	.L1801
.L1880:
	.align	2, 0
.L1879:
	.word	gStringVar4
	.word	sText_Greeting11
.L1814:
	ldr	r0, .L1881
	ldr	r1, .L1881+0x4
	bl	StringCopy
	b	.L1801
.L1882:
	.align	2, 0
.L1881:
	.word	gStringVar4
	.word	sText_Greeting12
.L1815:
	ldr	r0, .L1883
	ldr	r1, .L1883+0x4
	bl	StringCopy
	b	.L1801
.L1884:
	.align	2, 0
.L1883:
	.word	gStringVar4
	.word	sText_Greeting13
.L1816:
	ldr	r0, .L1885
	ldr	r1, .L1885+0x4
	bl	StringCopy
	b	.L1801
.L1886:
	.align	2, 0
.L1885:
	.word	gStringVar4
	.word	sText_Greeting14
.L1817:
	ldr	r0, .L1887
	ldr	r1, .L1887+0x4
	bl	StringCopy
	b	.L1801
.L1888:
	.align	2, 0
.L1887:
	.word	gStringVar4
	.word	sText_Greeting15
.L1818:
	ldr	r0, .L1889
	ldr	r1, .L1889+0x4
	bl	StringCopy
	b	.L1801
.L1890:
	.align	2, 0
.L1889:
	.word	gStringVar4
	.word	sText_Greeting16
.L1819:
	ldr	r0, .L1891
	ldr	r1, .L1891+0x4
	bl	StringCopy
	b	.L1801
.L1892:
	.align	2, 0
.L1891:
	.word	gStringVar4
	.word	sText_Greeting17
.L1820:
	ldr	r0, .L1893
	ldr	r1, .L1893+0x4
	bl	StringCopy
	b	.L1801
.L1894:
	.align	2, 0
.L1893:
	.word	gStringVar4
	.word	sText_Greeting18
.L1821:
	ldr	r0, .L1895
	ldr	r1, .L1895+0x4
	bl	StringCopy
	b	.L1801
.L1896:
	.align	2, 0
.L1895:
	.word	gStringVar4
	.word	sText_Greeting19
.L1822:
	ldr	r0, .L1897
	ldr	r1, .L1897+0x4
	bl	StringCopy
	b	.L1801
.L1898:
	.align	2, 0
.L1897:
	.word	gStringVar4
	.word	sText_Greeting20
.L1823:
	ldr	r0, .L1899
	ldr	r1, .L1899+0x4
	bl	StringCopy
	b	.L1801
.L1900:
	.align	2, 0
.L1899:
	.word	gStringVar4
	.word	sText_Greeting21
.L1824:
	ldr	r0, .L1901
	ldr	r1, .L1901+0x4
	bl	StringCopy
	b	.L1801
.L1902:
	.align	2, 0
.L1901:
	.word	gStringVar4
	.word	sText_Greeting22
.L1825:
	ldr	r0, .L1903
	ldr	r1, .L1903+0x4
	bl	StringCopy
	b	.L1801
.L1904:
	.align	2, 0
.L1903:
	.word	gStringVar4
	.word	sText_Greeting23
.L1826:
	ldr	r0, .L1905
	ldr	r1, .L1905+0x4
	bl	StringCopy
	b	.L1801
.L1906:
	.align	2, 0
.L1905:
	.word	gStringVar4
	.word	sText_Greeting24
.L1827:
	ldr	r0, .L1907
	ldr	r1, .L1907+0x4
	bl	StringCopy
	b	.L1801
.L1908:
	.align	2, 0
.L1907:
	.word	gStringVar4
	.word	sText_Greeting25
.L1828:
	ldr	r0, .L1909
	ldr	r1, .L1909+0x4
	bl	StringCopy
	b	.L1801
.L1910:
	.align	2, 0
.L1909:
	.word	gStringVar4
	.word	sText_Greeting26
.L1829:
	ldr	r0, .L1911
	ldr	r1, .L1911+0x4
	bl	StringCopy
	b	.L1801
.L1912:
	.align	2, 0
.L1911:
	.word	gStringVar4
	.word	sText_Greeting27
.L1830:
	ldr	r0, .L1913
	ldr	r1, .L1913+0x4
	bl	StringCopy
	b	.L1801
.L1914:
	.align	2, 0
.L1913:
	.word	gStringVar4
	.word	sText_Greeting28
.L1831:
	ldr	r0, .L1915
	ldr	r1, .L1915+0x4
	bl	StringCopy
	b	.L1801
.L1916:
	.align	2, 0
.L1915:
	.word	gStringVar4
	.word	sText_Greeting29
.L1832:
	ldr	r0, .L1917
	ldr	r1, .L1917+0x4
	bl	StringCopy
	b	.L1801
.L1918:
	.align	2, 0
.L1917:
	.word	gStringVar4
	.word	sText_Greeting30
.L1833:
	ldr	r0, .L1919
	ldr	r1, .L1919+0x4
	bl	StringCopy
	b	.L1801
.L1920:
	.align	2, 0
.L1919:
	.word	gStringVar4
	.word	sText_Greeting31
.L1834:
	ldr	r0, .L1921
	ldr	r1, .L1921+0x4
	bl	StringCopy
	b	.L1801
.L1922:
	.align	2, 0
.L1921:
	.word	gStringVar4
	.word	sText_Greeting32
.L1835:
	ldr	r0, .L1923
	ldr	r1, .L1923+0x4
	bl	StringCopy
	b	.L1801
.L1924:
	.align	2, 0
.L1923:
	.word	gStringVar4
	.word	sText_Greeting33
.L1836:
	ldr	r0, .L1925
	ldr	r1, .L1925+0x4
	bl	StringCopy
	b	.L1801
.L1926:
	.align	2, 0
.L1925:
	.word	gStringVar4
	.word	sText_Greeting34
.L1837:
	ldr	r0, .L1927
	ldr	r1, .L1927+0x4
	bl	StringCopy
	b	.L1801
.L1928:
	.align	2, 0
.L1927:
	.word	gStringVar4
	.word	sText_Greeting35
.L1838:
	ldr	r0, .L1929
	ldr	r1, .L1929+0x4
	bl	StringCopy
	b	.L1801
.L1930:
	.align	2, 0
.L1929:
	.word	gStringVar4
	.word	sText_Greeting36
.L1839:
	ldr	r0, .L1931
	ldr	r1, .L1931+0x4
	bl	StringCopy
	b	.L1801
.L1932:
	.align	2, 0
.L1931:
	.word	gStringVar4
	.word	sText_Greeting37
.L1840:
	ldr	r0, .L1933
	ldr	r1, .L1933+0x4
	bl	StringCopy
	b	.L1801
.L1934:
	.align	2, 0
.L1933:
	.word	gStringVar4
	.word	sText_Greeting38
.L1841:
	ldr	r0, .L1935
	ldr	r1, .L1935+0x4
	bl	StringCopy
	b	.L1801
.L1936:
	.align	2, 0
.L1935:
	.word	gStringVar4
	.word	sText_Greeting39
.L1842:
	ldr	r0, .L1937
	ldr	r1, .L1937+0x4
	bl	StringCopy
	b	.L1801
.L1938:
	.align	2, 0
.L1937:
	.word	gStringVar4
	.word	sText_Greeting40
.L1843:
	ldr	r0, .L1939
	ldr	r1, .L1939+0x4
	bl	StringCopy
	b	.L1801
.L1940:
	.align	2, 0
.L1939:
	.word	gStringVar4
	.word	sText_Greeting41
.L1844:
	ldr	r0, .L1941
	ldr	r1, .L1941+0x4
	bl	StringCopy
	b	.L1801
.L1942:
	.align	2, 0
.L1941:
	.word	gStringVar4
	.word	sText_Greeting42
.L1845:
	ldr	r0, .L1943
	ldr	r1, .L1943+0x4
	bl	StringCopy
	b	.L1801
.L1944:
	.align	2, 0
.L1943:
	.word	gStringVar4
	.word	sText_Greeting43
.L1846:
	ldr	r0, .L1945
	ldr	r1, .L1945+0x4
	bl	StringCopy
	b	.L1801
.L1946:
	.align	2, 0
.L1945:
	.word	gStringVar4
	.word	sText_Greeting44
.L1847:
	ldr	r0, .L1947
	ldr	r1, .L1947+0x4
	bl	StringCopy
	b	.L1801
.L1948:
	.align	2, 0
.L1947:
	.word	gStringVar4
	.word	sText_Greeting45
.L1848:
	ldr	r0, .L1949
	ldr	r1, .L1949+0x4
	bl	StringCopy
	b	.L1801
.L1950:
	.align	2, 0
.L1949:
	.word	gStringVar4
	.word	sText_Greeting46
.L1849:
	ldr	r0, .L1951
	ldr	r1, .L1951+0x4
	bl	StringCopy
	b	.L1801
.L1952:
	.align	2, 0
.L1951:
	.word	gStringVar4
	.word	sText_Greeting47
.L1850:
	ldr	r0, .L1953
	ldr	r1, .L1953+0x4
	bl	StringCopy
	b	.L1801
.L1954:
	.align	2, 0
.L1953:
	.word	gStringVar4
	.word	sText_Greeting48
.L1851:
	ldr	r0, .L1955
	ldr	r1, .L1955+0x4
	bl	StringCopy
	b	.L1801
.L1956:
	.align	2, 0
.L1955:
	.word	gStringVar4
	.word	sText_Greeting49
.L1852:
	ldr	r0, .L1957
	ldr	r1, .L1957+0x4
	bl	StringCopy
.L1801:
	pop	{r0}
	bx	r0
.L1958:
	.align	2, 0
.L1957:
	.word	gStringVar4
	.word	sText_Greeting50
.Lfe200:
	.size	 getintro,.Lfe200-getintro
	.align	2, 0
	.globl	swapAbility
	.type	 swapAbility,function
	.thumb_func
swapAbility:
	push	{r4, r5, lr}
	ldr	r0, .L1960
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1960+0x4
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L1960+0x8
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrh	r0, [r1, #0x18]
	ldrh	r3, [r1, #0x1a]
	ldrh	r5, [r1, #0x1c]
	mov	r2, #0xd
	mov	r1, r0
	mul	r1, r1, r2
	ldr	r0, .L1960+0xc
	add	r1, r1, r0
	mov	r4, r3
	mul	r4, r4, r2
	add	r4, r4, r0
	mul	r5, r5, r2
	add	r5, r5, r0
	ldr	r0, .L1960+0x10
	bl	StringCopy
	ldr	r0, .L1960+0x14
	add	r1, r4, #0
	bl	StringCopy
	ldr	r0, .L1960+0x18
	add	r1, r5, #0
	bl	StringCopy
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1961:
	.align	2, 0
.L1960:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
	.word	gBaseStats
	.word	gAbilityNames
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.Lfe201:
	.size	 swapAbility,.Lfe201-swapAbility
	.align	2, 0
	.globl	swapAbility2
	.type	 swapAbility2,function
	.thumb_func
swapAbility2:
	push	{lr}
	ldr	r0, .L1963
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1963+0x4
	add	r0, r0, r1
	ldr	r2, .L1963+0x8
	mov	r1, #0x2e
	bl	SetMonData
	pop	{r0}
	bx	r0
.L1964:
	.align	2, 0
.L1963:
	.word	gSpecialVar_0x800B
	.word	gPlayerParty
	.word	gSpecialVar_Result
.Lfe202:
	.size	 swapAbility2,.Lfe202-swapAbility2
	.align	2, 0
	.globl	GetMysteryGifts
	.type	 GetMysteryGifts,function
	.thumb_func
GetMysteryGifts:
	ldr	r0, .L1966
	ldr	r0, [r0]
	ldrh	r1, [r0, #0xe]
	ldr	r0, .L1966+0x4
	strh	r1, [r0]
	bx	lr
.L1967:
	.align	2, 0
.L1966:
	.word	gSaveBlock2Ptr
	.word	gSpecialVar_Result
.Lfe203:
	.size	 GetMysteryGifts,.Lfe203-GetMysteryGifts
	.align	2, 0
	.globl	SetFrontierBattlePoints
	.type	 SetFrontierBattlePoints,function
	.thumb_func
SetFrontierBattlePoints:
	ldr	r0, .L1969
	ldr	r0, [r0]
	ldr	r1, .L1969+0x4
	add	r0, r0, r1
	ldr	r1, .L1969+0x8
	strh	r1, [r0]
	bx	lr
.L1970:
	.align	2, 0
.L1969:
	.word	gSaveBlock2Ptr
	.word	0xeb8
	.word	0x3e7
.Lfe204:
	.size	 SetFrontierBattlePoints,.Lfe204-SetFrontierBattlePoints
	.comm	gScrollableMultichoice_ListMenuTemplate, 24	@ 24
.text
	.align	2, 0

