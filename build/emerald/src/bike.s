@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sMachBikeTransitions,object
sMachBikeTransitions:
	.word	MachBikeTransition_FaceDirection
	.word	MachBikeTransition_TurnDirection
	.word	MachBikeTransition_TrySpeedUp
	.word	MachBikeTransition_TrySlowDown
	.size	 sMachBikeTransitions,16
	.align	2, 0
	.type	 sMachBikeSpeedCallbacks,object
sMachBikeSpeedCallbacks:
	.word	PlayerGoSpeed1
	.word	PlayerGoSpeed2
	.word	PlayerGoSpeed4
	.size	 sMachBikeSpeedCallbacks,12
	.align	2, 0
	.type	 sAcroBikeTransitions,object
sAcroBikeTransitions:
	.word	AcroBikeTransition_FaceDirection
	.word	AcroBikeTransition_TurnDirection
	.word	AcroBikeTransition_Moving
	.word	AcroBikeTransition_NormalToWheelie
	.word	AcroBikeTransition_WheelieToNormal
	.word	AcroBikeTransition_WheelieIdle
	.word	AcroBikeTransition_WheelieHoppingStanding
	.word	AcroBikeTransition_WheelieHoppingMoving
	.word	AcroBikeTransition_SideJump
	.word	AcroBikeTransition_TurnJump
	.word	AcroBikeTransition_WheelieMoving
	.word	AcroBikeTransition_WheelieRisingMoving
	.word	AcroBikeTransition_WheelieLoweringMoving
	.size	 sAcroBikeTransitions,52
	.align	2, 0
	.type	 sAcroBikeInputHandlers,object
sAcroBikeInputHandlers:
	.word	AcroBikeHandleInputNormal
	.word	AcroBikeHandleInputTurning
	.word	AcroBikeHandleInputWheelieStanding
	.word	AcroBikeHandleInputBunnyHop
	.word	AcroBikeHandleInputWheelieMoving
	.word	AcroBikeHandleInputSidewaysJump
	.word	AcroBikeHandleInputTurnJump
	.size	 sAcroBikeInputHandlers,28
	.align	1, 0
	.type	 sMachBikeSpeeds,object
sMachBikeSpeeds:
	.short	0x1
	.short	0x2
	.short	0x4
	.size	 sMachBikeSpeeds,6
	.type	 sAcroBikeJumpTimerList,object
sAcroBikeJumpTimerList:
	.byte	0x4
	.byte	0x0
	.size	 sAcroBikeJumpTimerList,2
	.align	2, 0
	.type	 sAcroBikeTricksList,object
sAcroBikeTricksList:
	.word	0x1
	.word	0x2
	.word	0xf
	.word	0xf
	.word	sAcroBikeJumpTimerList
	.word	sAcroBikeJumpTimerList
	.word	0x1
	.word	0x2
	.word	0x2
	.word	0xf
	.word	0xf
	.word	sAcroBikeJumpTimerList
	.word	sAcroBikeJumpTimerList
	.word	0x2
	.word	0x3
	.word	0x2
	.word	0xf
	.word	0xf
	.word	sAcroBikeJumpTimerList
	.word	sAcroBikeJumpTimerList
	.word	0x3
	.word	0x4
	.word	0x2
	.word	0xf
	.word	0xf
	.word	sAcroBikeJumpTimerList
	.word	sAcroBikeJumpTimerList
	.word	0x4
	.size	 sAcroBikeTricksList,112
.text
	.align	2, 0
	.globl	MovePlayerOnBike
	.type	 MovePlayerOnBike,function
	.thumb_func
MovePlayerOnBike:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	ldr	r0, .L8
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L3	@cond_branch
	add	r0, r3, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	MovePlayerOnMachBike
	b	.L4
.L9:
	.align	2, 0
.L8:
	.word	gPlayerAvatar
.L3:
	add	r0, r3, #0
	add	r1, r5, #0
	add	r2, r4, #0
	bl	MovePlayerOnAcroBike
.L4:
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L5	@cond_branch
	ldr	r2, .L10
	ldrb	r1, [r2]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L6	@cond_branch
	add	r0, r1, #0x2
	strb	r0, [r2]
	mov	r0, #0x4
	bl	SetPlayerAvatarTransitionFlags
	b	.L7
.L11:
	.align	2, 0
.L10:
	.word	gPlayerAvatar
.L6:
	sub	r0, r1, #0x2
	strb	r0, [r2]
	mov	r0, #0x2
	bl	SetPlayerAvatarTransitionFlags
.L7:
	mov	r0, #0xb
	bl	PlaySE
.L5:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 MovePlayerOnBike,.Lfe1-MovePlayerOnBike
	.align	2, 0
	.type	 MovePlayerOnMachBike,function
	.thumb_func
MovePlayerOnMachBike:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r1, sp
	strb	r0, [r1]
	ldr	r4, .L13
	mov	r0, sp
	bl	GetMachBikeTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	mov	r1, sp
	ldrb	r1, [r1]
	ldr	r2, [r0]
	add	r0, r1, #0
	bl	_call_via_r2
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	sMachBikeTransitions
.Lfe2:
	.size	 MovePlayerOnMachBike,.Lfe2-MovePlayerOnMachBike
	.align	2, 0
	.type	 GetMachBikeTransition,function
	.thumb_func
GetMachBikeTransition:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r3, r0, #0
	ldrb	r1, [r4]
	cmp	r1, #0
	bne	.L16	@cond_branch
	strb	r0, [r4]
	ldr	r2, .L25
	ldrb	r0, [r2, #0xb]
	cmp	r0, #0
	bne	.L22	@cond_branch
	strb	r1, [r2, #0x2]
	mov	r0, #0x0
	b	.L21
.L26:
	.align	2, 0
.L25:
	.word	gPlayerAvatar
.L16:
	ldr	r2, .L27
	cmp	r1, r3
	beq	.L18	@cond_branch
	ldrb	r0, [r2, #0x2]
	cmp	r0, #0x2
	beq	.L18	@cond_branch
	ldrb	r0, [r2, #0xb]
	cmp	r0, #0
	beq	.L19	@cond_branch
	strb	r3, [r4]
.L22:
	mov	r0, #0x2
	strb	r0, [r2, #0x2]
	mov	r0, #0x3
	b	.L21
.L28:
	.align	2, 0
.L27:
	.word	gPlayerAvatar
.L19:
	mov	r0, #0x1
	b	.L24
.L18:
	mov	r0, #0x2
.L24:
	strb	r0, [r2, #0x2]
.L21:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 GetMachBikeTransition,.Lfe3-GetMachBikeTransition
	.align	2, 0
	.type	 MachBikeTransition_FaceDirection,function
	.thumb_func
MachBikeTransition_FaceDirection:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerFaceDirection
	bl	Bike_SetBikeStill
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 MachBikeTransition_FaceDirection,.Lfe4-MachBikeTransition_FaceDirection
	.align	2, 0
	.type	 MachBikeTransition_TurnDirection,function
	.thumb_func
MachBikeTransition_TurnDirection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L33
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L33+0x4
	add	r4, r0, r1
	ldrb	r1, [r4, #0x1e]
	add	r0, r5, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L31	@cond_branch
	add	r0, r5, #0
	bl	PlayerTurnInPlace
	bl	Bike_SetBikeStill
	b	.L32
.L34:
	.align	2, 0
.L33:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L31:
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	MachBikeTransition_FaceDirection
.L32:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 MachBikeTransition_TurnDirection,.Lfe5-MachBikeTransition_TurnDirection
	.align	2, 0
	.type	 MachBikeTransition_TrySpeedUp,function
	.thumb_func
MachBikeTransition_TrySpeedUp:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	ldr	r6, .L48
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L48+0x4
	add	r4, r0, r1
	ldrb	r1, [r4, #0x1e]
	add	r0, r5, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L36	@cond_branch
	ldrb	r0, [r6, #0xb]
	cmp	r0, #0
	beq	.L37	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	bl	MachBikeTransition_TrySlowDown
	b	.L39
.L49:
	.align	2, 0
.L48:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L37:
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	bl	MachBikeTransition_FaceDirection
	b	.L39
.L36:
	add	r0, r5, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bhi	.L40	@cond_branch
	cmp	r4, #0x6
	bne	.L41	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
	b	.L39
.L41:
	bl	Bike_SetBikeStill
	cmp	r4, #0x4
	bne	.L43	@cond_branch
	add	r0, r5, #0
	bl	IsPlayerCollidingWithFarawayIslandMew
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L43	@cond_branch
	add	r0, r5, #0
	bl	PlayerOnBikeCollideWithFarawayIslandMew
	b	.L39
.L43:
	sub	r0, r4, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L39	@cond_branch
	add	r0, r7, #0
	bl	PlayerOnBikeCollide
	b	.L39
.L40:
	ldr	r1, .L50
	ldrb	r0, [r6, #0xa]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r7, #0
	bl	_call_via_r1
	ldrb	r2, [r6, #0xa]
	lsl	r0, r2, #0x18
	lsr	r1, r0, #0x18
	lsr	r0, r0, #0x19
	add	r0, r2, r0
	strb	r0, [r6, #0xb]
	cmp	r1, #0x1
	bhi	.L39	@cond_branch
	add	r0, r2, #0x1
	strb	r0, [r6, #0xa]
.L39:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	sMachBikeSpeedCallbacks
.Lfe6:
	.size	 MachBikeTransition_TrySpeedUp,.Lfe6-MachBikeTransition_TrySpeedUp
	.align	2, 0
	.type	 MachBikeTransition_TrySlowDown,function
	.thumb_func
MachBikeTransition_TrySlowDown:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	ldr	r6, .L61
	ldrb	r0, [r6, #0xb]
	cmp	r0, #0
	beq	.L53	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r6, #0xb]
	strb	r0, [r6, #0xa]
.L53:
	add	r0, r5, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bhi	.L54	@cond_branch
	cmp	r4, #0x6
	bne	.L55	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
	b	.L60
.L62:
	.align	2, 0
.L61:
	.word	gPlayerAvatar
.L55:
	bl	Bike_SetBikeStill
	cmp	r4, #0x4
	bne	.L57	@cond_branch
	add	r0, r5, #0
	bl	IsPlayerCollidingWithFarawayIslandMew
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L57	@cond_branch
	add	r0, r5, #0
	bl	PlayerOnBikeCollideWithFarawayIslandMew
	b	.L60
.L57:
	sub	r0, r4, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L60	@cond_branch
	add	r0, r7, #0
	bl	PlayerOnBikeCollide
	b	.L60
.L54:
	ldr	r0, .L63
	ldrb	r1, [r6, #0xa]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r7, #0
	bl	_call_via_r1
.L60:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L64:
	.align	2, 0
.L63:
	.word	sMachBikeSpeedCallbacks
.Lfe7:
	.size	 MachBikeTransition_TrySlowDown,.Lfe7-MachBikeTransition_TrySlowDown
	.align	2, 0
	.type	 MovePlayerOnAcroBike,function
	.thumb_func
MovePlayerOnAcroBike:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r3, sp
	strb	r0, [r3]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r4, .L66
	mov	r0, sp
	bl	CheckMovementInputAcroBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	mov	r1, sp
	ldrb	r1, [r1]
	ldr	r2, [r0]
	add	r0, r1, #0
	bl	_call_via_r2
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	sAcroBikeTransitions
.Lfe8:
	.size	 MovePlayerOnAcroBike,.Lfe8-MovePlayerOnAcroBike
	.align	2, 0
	.type	 CheckMovementInputAcroBike,function
	.thumb_func
CheckMovementInputAcroBike:
	push	{r4, lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r4, .L69
	ldr	r3, .L69+0x4
	ldrb	r3, [r3, #0x8]
	lsl	r3, r3, #0x2
	add	r3, r3, r4
	ldr	r3, [r3]
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L70:
	.align	2, 0
.L69:
	.word	sAcroBikeInputHandlers
	.word	gPlayerAvatar
.Lfe9:
	.size	 CheckMovementInputAcroBike,.Lfe9-CheckMovementInputAcroBike
	.align	2, 0
	.type	 AcroBikeHandleInputNormal,function
	.thumb_func
AcroBikeHandleInputNormal:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L80
	mov	r0, #0x0
	strb	r0, [r2, #0xa]
	ldrb	r1, [r4]
	cmp	r1, #0
	bne	.L72	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L73	@cond_branch
	strb	r3, [r4]
	strb	r1, [r2, #0x2]
	mov	r0, #0x2
	strb	r0, [r2, #0x8]
	mov	r0, #0x3
	b	.L77
.L81:
	.align	2, 0
.L80:
	.word	gPlayerAvatar
.L73:
	strb	r3, [r4]
	strb	r1, [r2, #0x2]
	mov	r0, #0x0
	b	.L77
.L72:
	cmp	r1, r3
	bne	.L78	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L75	@cond_branch
	ldrb	r0, [r2, #0xb]
	cmp	r0, #0
	bne	.L75	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r2, #0xb]
	mov	r0, #0x4
	strb	r0, [r2, #0x8]
	mov	r0, #0xb
	b	.L77
.L75:
	ldrb	r0, [r4]
	ldr	r2, .L82
	cmp	r0, r3
	beq	.L76	@cond_branch
.L78:
	ldr	r0, .L82
	ldrb	r1, [r0, #0x2]
	add	r2, r0, #0
	cmp	r1, #0x2
	beq	.L76	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x1
	strb	r0, [r2, #0x8]
	ldrb	r0, [r4]
	strb	r0, [r2, #0x9]
	strb	r1, [r2, #0x2]
	add	r0, r4, #0
	add	r1, r6, #0
	add	r2, r5, #0
	bl	CheckMovementInputAcroBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L79
.L83:
	.align	2, 0
.L82:
	.word	gPlayerAvatar
.L76:
	mov	r0, #0x2
	strb	r0, [r2, #0x2]
.L79:
.L77:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 AcroBikeHandleInputNormal,.Lfe10-AcroBikeHandleInputNormal
	.align	2, 0
	.type	 AcroBikeHandleInputTurning,function
	.thumb_func
AcroBikeHandleInputTurning:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r4, .L90
	ldrb	r0, [r4, #0x9]
	strb	r0, [r5]
	ldrb	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strb	r0, [r4, #0xa]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x6
	bls	.L85	@cond_branch
	mov	r0, #0x1
	strb	r0, [r4, #0x2]
	mov	r0, #0x0
	strb	r0, [r4, #0x8]
	bl	Bike_SetBikeStill
	mov	r0, #0x1
	b	.L89
.L91:
	.align	2, 0
.L90:
	.word	gPlayerAvatar
.L85:
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	bl	AcroBike_GetJumpDirection
	ldrb	r1, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L86	@cond_branch
	bl	Bike_SetBikeStill
	mov	r0, #0x1
	strb	r0, [r4, #0xb]
	add	r0, r6, #0
	bl	GetOppositeDirection
	ldrb	r1, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L87	@cond_branch
	mov	r0, #0x6
	strb	r0, [r4, #0x8]
	mov	r0, #0x9
	b	.L89
.L87:
	mov	r0, #0x2
	strb	r0, [r4, #0x2]
	mov	r0, #0x5
	strb	r0, [r4, #0x8]
	mov	r0, #0x8
	b	.L89
.L86:
	strb	r6, [r5]
	mov	r0, #0x0
.L89:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 AcroBikeHandleInputTurning,.Lfe11-AcroBikeHandleInputTurning
	.align	2, 0
	.type	 AcroBikeHandleInputWheelieStanding,function
	.thumb_func
AcroBikeHandleInputWheelieStanding:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	lsl	r4, r2, #0x10
	lsr	r4, r4, #0x10
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r5, .L101
	ldrb	r1, [r5, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L101+0x4
	add	r1, r0, r1
	mov	r0, #0x0
	strb	r0, [r5, #0x2]
	mov	r0, #0x2
	and	r4, r4, r0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, #0
	bne	.L93	@cond_branch
	strb	r4, [r5, #0xa]
	ldrb	r0, [r1, #0x1e]
	bl	MetatileBehavior_IsBumpySlope
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L94	@cond_branch
	strb	r6, [r7]
	strb	r0, [r5, #0x8]
	bl	Bike_SetBikeStill
	mov	r0, #0x4
	b	.L99
.L102:
	.align	2, 0
.L101:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L93:
	ldrb	r0, [r5, #0xa]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xa]
.L94:
	ldr	r1, .L103
	ldrb	r0, [r1, #0xa]
	cmp	r0, #0x27
	bls	.L96	@cond_branch
	strb	r6, [r7]
	mov	r0, #0x3
	strb	r0, [r1, #0x8]
	bl	Bike_SetBikeStill
	mov	r0, #0x6
	b	.L99
.L104:
	.align	2, 0
.L103:
	.word	gPlayerAvatar
.L96:
	ldrb	r0, [r7]
	cmp	r0, r6
	bne	.L97	@cond_branch
	mov	r0, #0x2
	strb	r0, [r1, #0x2]
	mov	r0, #0x4
	strb	r0, [r1, #0x8]
	bl	Bike_SetBikeStill
	mov	r0, #0xa
	b	.L99
.L97:
	cmp	r0, #0
	beq	.L98	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1, #0x2]
	b	.L100
.L98:
	strb	r6, [r7]
.L100:
	mov	r0, #0x5
.L99:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 AcroBikeHandleInputWheelieStanding,.Lfe12-AcroBikeHandleInputWheelieStanding
	.align	2, 0
	.type	 AcroBikeHandleInputBunnyHop,function
	.thumb_func
AcroBikeHandleInputBunnyHop:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r8, r2
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r2, r5, #0
	ldr	r4, .L113
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L113+0x4
	add	r7, r0, r1
	mov	r0, #0x2
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L106	@cond_branch
	bl	Bike_SetBikeStill
	ldrb	r0, [r7, #0x1e]
	bl	MetatileBehavior_IsBumpySlope
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L107	@cond_branch
	mov	r0, #0x2
	strb	r0, [r4, #0x8]
	add	r0, r6, #0
	mov	r1, r9
	mov	r2, r8
	bl	CheckMovementInputAcroBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L111
.L114:
	.align	2, 0
.L113:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L107:
	strb	r5, [r6]
	strb	r0, [r4, #0x2]
	strb	r0, [r4, #0x8]
	mov	r0, #0x4
	b	.L111
.L106:
	ldrb	r0, [r6]
	cmp	r0, #0
	bne	.L109	@cond_branch
	strb	r5, [r6]
	b	.L112
.L109:
	cmp	r0, r2
	beq	.L110	@cond_branch
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x2
	beq	.L110	@cond_branch
	mov	r0, #0x1
.L112:
	strb	r0, [r4, #0x2]
	mov	r0, #0x6
	b	.L111
.L110:
	ldr	r1, .L115
	mov	r0, #0x2
	strb	r0, [r1, #0x2]
	mov	r0, #0x7
.L111:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L116:
	.align	2, 0
.L115:
	.word	gPlayerAvatar
.Lfe13:
	.size	 AcroBikeHandleInputBunnyHop,.Lfe13-AcroBikeHandleInputBunnyHop
	.align	2, 0
	.type	 AcroBikeHandleInputWheelieMoving,function
	.thumb_func
AcroBikeHandleInputWheelieMoving:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	sl, r1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r8, r2
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r2, r5, #0
	ldr	r4, .L126
	ldrb	r1, [r4, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L126+0x4
	add	r7, r0, r1
	mov	r0, #0x2
	mov	r9, r0
	mov	r0, #0x2
	mov	r1, r8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L118	@cond_branch
	bl	Bike_SetBikeStill
	ldrb	r0, [r7, #0x1e]
	bl	MetatileBehavior_IsBumpySlope
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L119	@cond_branch
	strb	r1, [r4, #0x8]
	ldrb	r0, [r6]
	cmp	r0, #0
	bne	.L120	@cond_branch
	strb	r5, [r6]
	b	.L125
.L127:
	.align	2, 0
.L126:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L120:
	cmp	r0, r5
	beq	.L121	@cond_branch
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x2
	beq	.L121	@cond_branch
.L125:
	strb	r1, [r4, #0x2]
	mov	r0, #0x4
	b	.L124
.L121:
	ldr	r1, .L128
	mov	r0, #0x2
	strb	r0, [r1, #0x2]
	mov	r0, #0xc
	b	.L124
.L129:
	.align	2, 0
.L128:
	.word	gPlayerAvatar
.L119:
	mov	r0, r9
	strb	r0, [r4, #0x8]
	add	r0, r6, #0
	mov	r1, sl
	mov	r2, r8
	bl	CheckMovementInputAcroBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L124
.L118:
	ldrb	r0, [r6]
	cmp	r0, #0
	bne	.L122	@cond_branch
	strb	r5, [r6]
	mov	r1, r9
	strb	r1, [r4, #0x8]
	strb	r0, [r4, #0x2]
	bl	Bike_SetBikeStill
	mov	r0, #0x5
	b	.L124
.L122:
	cmp	r2, r0
	beq	.L123	@cond_branch
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x2
	beq	.L123	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4, #0x2]
	mov	r0, #0x5
	b	.L124
.L123:
	ldr	r1, .L130
	mov	r0, #0x2
	strb	r0, [r1, #0x2]
	mov	r0, #0xa
.L124:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L131:
	.align	2, 0
.L130:
	.word	gPlayerAvatar
.Lfe14:
	.size	 AcroBikeHandleInputWheelieMoving,.Lfe14-AcroBikeHandleInputWheelieMoving
	.align	2, 0
	.type	 AcroBikeHandleInputSidewaysJump,function
	.thumb_func
AcroBikeHandleInputSidewaysJump:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	mov	r8, r0
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L133
	ldrb	r1, [r6, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L133+0x4
	add	r0, r0, r1
	ldrb	r2, [r0, #0x1]
	mov	r1, #0x3
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldrb	r1, [r0, #0x18]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	bl	SetObjectEventDirection
	mov	r0, #0x0
	strb	r0, [r6, #0x8]
	mov	r0, r8
	add	r1, r4, #0
	add	r2, r5, #0
	bl	CheckMovementInputAcroBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L134:
	.align	2, 0
.L133:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe15:
	.size	 AcroBikeHandleInputSidewaysJump,.Lfe15-AcroBikeHandleInputSidewaysJump
	.align	2, 0
	.type	 AcroBikeHandleInputTurnJump,function
	.thumb_func
AcroBikeHandleInputTurnJump:
	push	{r4, lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r4, .L136
	mov	r3, #0x0
	strb	r3, [r4, #0x8]
	bl	CheckMovementInputAcroBike
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L137:
	.align	2, 0
.L136:
	.word	gPlayerAvatar
.Lfe16:
	.size	 AcroBikeHandleInputTurnJump,.Lfe16-AcroBikeHandleInputTurnJump
	.align	2, 0
	.type	 AcroBikeTransition_FaceDirection,function
	.thumb_func
AcroBikeTransition_FaceDirection:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerFaceDirection
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 AcroBikeTransition_FaceDirection,.Lfe17-AcroBikeTransition_FaceDirection
	.align	2, 0
	.type	 AcroBikeTransition_TurnDirection,function
	.thumb_func
AcroBikeTransition_TurnDirection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L141
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L141+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L140	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r4, r0, #0x4
.L140:
	add	r0, r4, #0
	bl	PlayerFaceDirection
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe18:
	.size	 AcroBikeTransition_TurnDirection,.Lfe18-AcroBikeTransition_TurnDirection
	.align	2, 0
	.type	 AcroBikeTransition_Moving,function
	.thumb_func
AcroBikeTransition_Moving:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	ldr	r0, .L152
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L152+0x4
	add	r4, r0, r1
	ldrb	r1, [r4, #0x1e]
	add	r0, r5, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L144	@cond_branch
	ldrb	r0, [r4, #0x18]
	lsr	r0, r0, #0x4
	bl	AcroBikeTransition_FaceDirection
	b	.L143
.L153:
	.align	2, 0
.L152:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L144:
	add	r0, r5, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, #0xff
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bhi	.L145	@cond_branch
	cmp	r4, #0x6
	bne	.L146	@cond_branch
	add	r0, r5, #0
	bl	PlayerJumpLedge
	b	.L143
.L146:
	cmp	r4, #0x4
	bne	.L148	@cond_branch
	add	r0, r5, #0
	bl	IsPlayerCollidingWithFarawayIslandMew
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L148	@cond_branch
	add	r0, r5, #0
	bl	PlayerOnBikeCollideWithFarawayIslandMew
	b	.L143
.L148:
	sub	r0, r4, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L143	@cond_branch
	add	r0, r6, #0
	bl	PlayerOnBikeCollide
	b	.L143
.L145:
	add	r0, r6, #0
	bl	PlayerRideWaterCurrent
.L143:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 AcroBikeTransition_Moving,.Lfe19-AcroBikeTransition_Moving
	.align	2, 0
	.type	 AcroBikeTransition_NormalToWheelie,function
	.thumb_func
AcroBikeTransition_NormalToWheelie:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L156
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L156+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L155	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r4, r0, #0x4
.L155:
	add	r0, r4, #0
	bl	PlayerStartWheelie
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L157:
	.align	2, 0
.L156:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe20:
	.size	 AcroBikeTransition_NormalToWheelie,.Lfe20-AcroBikeTransition_NormalToWheelie
	.align	2, 0
	.type	 AcroBikeTransition_WheelieToNormal,function
	.thumb_func
AcroBikeTransition_WheelieToNormal:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L160
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L160+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L159	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r4, r0, #0x4
.L159:
	add	r0, r4, #0
	bl	PlayerEndWheelie
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L161:
	.align	2, 0
.L160:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe21:
	.size	 AcroBikeTransition_WheelieToNormal,.Lfe21-AcroBikeTransition_WheelieToNormal
	.align	2, 0
	.type	 AcroBikeTransition_WheelieIdle,function
	.thumb_func
AcroBikeTransition_WheelieIdle:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L164
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L164+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L163	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r4, r0, #0x4
.L163:
	add	r0, r4, #0
	bl	PlayerIdleWheelie
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L165:
	.align	2, 0
.L164:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe22:
	.size	 AcroBikeTransition_WheelieIdle,.Lfe22-AcroBikeTransition_WheelieIdle
	.align	2, 0
	.type	 AcroBikeTransition_WheelieHoppingStanding,function
	.thumb_func
AcroBikeTransition_WheelieHoppingStanding:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L168
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L168+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L167	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r4, r0, #0x4
.L167:
	add	r0, r4, #0
	bl	PlayerStandingHoppingWheelie
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L169:
	.align	2, 0
.L168:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe23:
	.size	 AcroBikeTransition_WheelieHoppingStanding,.Lfe23-AcroBikeTransition_WheelieHoppingStanding
	.align	2, 0
	.type	 AcroBikeTransition_WheelieHoppingMoving,function
	.thumb_func
AcroBikeTransition_WheelieHoppingMoving:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L181
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L181+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L171	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	bl	AcroBikeTransition_WheelieHoppingStanding
	b	.L170
.L182:
	.align	2, 0
.L181:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L171:
	add	r0, r4, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L174	@cond_branch
	cmp	r1, #0x9
	beq	.L174	@cond_branch
	cmp	r1, #0x6
	bne	.L176	@cond_branch
	add	r0, r4, #0
	bl	PlayerLedgeHoppingWheelie
	b	.L170
.L176:
	sub	r0, r1, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L170	@cond_branch
	cmp	r1, #0xb
	bhi	.L174	@cond_branch
	add	r0, r4, #0
	bl	AcroBikeTransition_WheelieHoppingStanding
	b	.L170
.L174:
	add	r0, r4, #0
	bl	PlayerMovingHoppingWheelie
.L170:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 AcroBikeTransition_WheelieHoppingMoving,.Lfe24-AcroBikeTransition_WheelieHoppingMoving
	.align	2, 0
	.type	 AcroBikeTransition_SideJump,function
	.thumb_func
AcroBikeTransition_SideJump:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0
	beq	.L184	@cond_branch
	cmp	r0, #0x7
	beq	.L183	@cond_branch
	cmp	r0, #0x9
	bls	.L188	@cond_branch
	add	r0, r1, #0
	add	r1, r5, #0
	bl	WillPlayerCollideWithCollision
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L184	@cond_branch
.L188:
	add	r0, r5, #0
	bl	AcroBikeTransition_TurnDirection
	b	.L183
.L184:
	ldr	r0, .L189
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L189+0x4
	add	r4, r4, r0
	mov	r0, #0x22
	bl	PlaySE
	ldrb	r0, [r4, #0x1]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	add	r0, r5, #0
	bl	GetJumpMovementAction
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	PlayerSetAnimId
.L183:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L190:
	.align	2, 0
.L189:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe25:
	.size	 AcroBikeTransition_SideJump,.Lfe25-AcroBikeTransition_SideJump
	.align	2, 0
	.type	 AcroBikeTransition_TurnJump,function
	.thumb_func
AcroBikeTransition_TurnJump:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerAcroTurnJump
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 AcroBikeTransition_TurnJump,.Lfe26-AcroBikeTransition_TurnJump
	.align	2, 0
	.type	 AcroBikeTransition_WheelieMoving,function
	.thumb_func
AcroBikeTransition_WheelieMoving:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r7, .L203
	ldrb	r1, [r7, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L203+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L193	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	bl	PlayerIdleWheelie
	b	.L192
.L204:
	.align	2, 0
.L203:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L193:
	add	r0, r4, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r2, #0xff
	lsl	r2, r2, #0x18
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bhi	.L194	@cond_branch
	cmp	r1, #0x6
	bne	.L195	@cond_branch
	add	r0, r4, #0
	bl	PlayerLedgeHoppingWheelie
	b	.L192
.L195:
	cmp	r1, #0x9
	beq	.L202	@cond_branch
	cmp	r1, #0x4
	bhi	.L192	@cond_branch
	ldrb	r0, [r5, #0x1e]
	bl	MetatileBehavior_IsBumpySlope
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L200	@cond_branch
.L202:
	add	r0, r4, #0
	bl	PlayerIdleWheelie
	b	.L192
.L200:
	add	r0, r4, #0
	bl	PlayerWheelieInPlace
	b	.L192
.L194:
	add	r0, r6, #0
	bl	PlayerWheelieMove
	mov	r0, #0x2
	strb	r0, [r7, #0x2]
.L192:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe27:
	.size	 AcroBikeTransition_WheelieMoving,.Lfe27-AcroBikeTransition_WheelieMoving
	.align	2, 0
	.type	 AcroBikeTransition_WheelieRisingMoving,function
	.thumb_func
AcroBikeTransition_WheelieRisingMoving:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r7, .L216
	ldrb	r1, [r7, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L216+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L206	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	bl	PlayerStartWheelie
	b	.L205
.L217:
	.align	2, 0
.L216:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L206:
	add	r0, r4, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r2, #0xff
	lsl	r2, r2, #0x18
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bhi	.L207	@cond_branch
	cmp	r1, #0x6
	bne	.L208	@cond_branch
	add	r0, r4, #0
	bl	PlayerLedgeHoppingWheelie
	b	.L205
.L208:
	cmp	r1, #0x9
	beq	.L215	@cond_branch
	cmp	r1, #0x4
	bhi	.L205	@cond_branch
	ldrb	r0, [r5, #0x1e]
	bl	MetatileBehavior_IsBumpySlope
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L213	@cond_branch
.L215:
	add	r0, r4, #0
	bl	PlayerIdleWheelie
	b	.L205
.L213:
	add	r0, r4, #0
	bl	PlayerWheelieInPlace
	b	.L205
.L207:
	add	r0, r6, #0
	bl	PlayerPopWheelieWhileMoving
	mov	r0, #0x2
	strb	r0, [r7, #0x2]
.L205:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 AcroBikeTransition_WheelieRisingMoving,.Lfe28-AcroBikeTransition_WheelieRisingMoving
	.align	2, 0
	.type	 AcroBikeTransition_WheelieLoweringMoving,function
	.thumb_func
AcroBikeTransition_WheelieLoweringMoving:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r6, r4, #0
	ldr	r0, .L224
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L224+0x4
	add	r5, r0, r1
	ldrb	r1, [r5, #0x1e]
	add	r0, r4, #0
	bl	CanBikeFaceDirOnMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L219	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	bl	PlayerEndWheelie
	b	.L218
.L225:
	.align	2, 0
.L224:
	.word	gPlayerAvatar
	.word	gObjectEvents
.L219:
	add	r0, r4, #0
	bl	GetBikeCollision
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r2, #0xff
	lsl	r2, r2, #0x18
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bhi	.L220	@cond_branch
	cmp	r1, #0x6
	bne	.L221	@cond_branch
	add	r0, r4, #0
	bl	PlayerJumpLedge
	b	.L218
.L221:
	sub	r0, r1, #0x5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bls	.L218	@cond_branch
	add	r0, r4, #0
	bl	PlayerEndWheelie
	b	.L218
.L220:
	add	r0, r6, #0
	bl	PlayerEndWheelieWhileMoving
.L218:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 AcroBikeTransition_WheelieLoweringMoving,.Lfe29-AcroBikeTransition_WheelieLoweringMoving
	.align	2, 0
	.globl	Bike_TryAcroBikeHistoryUpdate
	.type	 Bike_TryAcroBikeHistoryUpdate,function
	.thumb_func
Bike_TryAcroBikeHistoryUpdate:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	ldr	r0, .L228
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L227	@cond_branch
	add	r0, r3, #0
	add	r1, r2, #0
	bl	AcroBike_TryHistoryUpdate
.L227:
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gPlayerAvatar
.Lfe30:
	.size	 Bike_TryAcroBikeHistoryUpdate,.Lfe30-Bike_TryAcroBikeHistoryUpdate
	.align	2, 0
	.type	 AcroBike_TryHistoryUpdate,function
	.thumb_func
AcroBike_TryHistoryUpdate:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	add	r0, r5, #0
	bl	Bike_DPadToDirection
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r4, .L237
	ldr	r0, [r4, #0xc]
	mov	r1, #0xf
	and	r0, r0, r1
	cmp	r2, r0
	bne	.L231	@cond_branch
	ldrb	r0, [r4, #0x14]
	cmp	r0, #0xfe
	bhi	.L233	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r4, #0x14]
	b	.L233
.L238:
	.align	2, 0
.L237:
	.word	gPlayerAvatar
.L231:
	add	r0, r2, #0
	bl	Bike_UpdateDirTimerHistory
	mov	r0, #0x0
	strb	r0, [r4, #0xb]
.L233:
	mov	r0, #0xf
	add	r2, r5, #0
	and	r2, r2, r0
	ldr	r4, .L239
	ldr	r0, [r4, #0x10]
	mov	r1, #0xf
	and	r0, r0, r1
	cmp	r2, r0
	bne	.L234	@cond_branch
	ldrb	r0, [r4, #0x1c]
	cmp	r0, #0xfe
	bhi	.L236	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r4, #0x1c]
	b	.L236
.L240:
	.align	2, 0
.L239:
	.word	gPlayerAvatar
.L234:
	add	r0, r2, #0
	bl	Bike_UpdateABStartSelectHistory
	mov	r0, #0x0
	strb	r0, [r4, #0xb]
.L236:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 AcroBike_TryHistoryUpdate,.Lfe31-AcroBike_TryHistoryUpdate
	.align	2, 0
	.type	 HasPlayerInputTakenLongerThanList,function
	.thumb_func
HasPlayerInputTakenLongerThanList:
	push	{r4, r5, lr}
	add	r3, r0, #0
	add	r4, r1, #0
	mov	r2, #0x0
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L243	@cond_branch
	ldr	r5, .L256
.L245:
	add	r0, r2, r5
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bhi	.L255	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L245	@cond_branch
.L243:
	mov	r2, #0x0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L249	@cond_branch
	ldr	r3, .L256+0x4
.L251:
	add	r0, r2, r3
	add	r1, r4, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bls	.L250	@cond_branch
.L255:
	mov	r0, #0x0
	b	.L254
.L257:
	.align	2, 0
.L256:
	.word	gPlayerAvatar+0x14
	.word	gPlayerAvatar+0x1c
.L250:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r4, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L251	@cond_branch
.L249:
	mov	r0, #0x1
.L254:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 HasPlayerInputTakenLongerThanList,.Lfe32-HasPlayerInputTakenLongerThanList
	.align	2, 0
	.type	 AcroBike_GetJumpDirection,function
	.thumb_func
AcroBike_GetJumpDirection:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
.L262:
	ldr	r0, .L266
	add	r4, r5, r0
	ldr	r0, .L266+0x4
	ldr	r1, [r0, #0xc]
	ldr	r2, [r0, #0x10]
	ldr	r0, [r4, #0x8]
	and	r1, r1, r0
	ldr	r0, [r4, #0xc]
	and	r2, r2, r0
	ldr	r0, [r4]
	cmp	r1, r0
	bne	.L261	@cond_branch
	ldr	r0, [r4, #0x4]
	cmp	r2, r0
	bne	.L261	@cond_branch
	ldr	r0, [r4, #0x10]
	ldr	r1, [r4, #0x14]
	bl	HasPlayerInputTakenLongerThanList
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L261	@cond_branch
	ldrb	r0, [r4, #0x18]
	b	.L265
.L267:
	.align	2, 0
.L266:
	.word	sAcroBikeTricksList
	.word	gPlayerAvatar
.L261:
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	bls	.L262	@cond_branch
	mov	r0, #0x0
.L265:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 AcroBike_GetJumpDirection,.Lfe33-AcroBike_GetJumpDirection
	.align	2, 0
	.type	 Bike_UpdateDirTimerHistory,function
	.thumb_func
Bike_UpdateDirTimerHistory:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	ldr	r3, .L274
	ldr	r2, [r3, #0xc]
	lsl	r2, r2, #0x4
	mov	r1, #0xf0
	lsl	r1, r1, #0x14
	and	r1, r1, r0
	lsr	r1, r1, #0x18
	orr	r2, r2, r1
	str	r2, [r3, #0xc]
	mov	r1, #0x7
	add	r4, r3, #0
	add	r3, r3, #0x14
.L272:
	add	r2, r1, r3
	sub	r1, r1, #0x1
	add	r0, r1, r3
	ldrb	r0, [r0]
	strb	r0, [r2]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0
	bne	.L272	@cond_branch
	mov	r0, #0x1
	strb	r0, [r4, #0x14]
	pop	{r4}
	pop	{r0}
	bx	r0
.L275:
	.align	2, 0
.L274:
	.word	gPlayerAvatar
.Lfe34:
	.size	 Bike_UpdateDirTimerHistory,.Lfe34-Bike_UpdateDirTimerHistory
	.align	2, 0
	.type	 Bike_UpdateABStartSelectHistory,function
	.thumb_func
Bike_UpdateABStartSelectHistory:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	ldr	r3, .L282
	ldr	r2, [r3, #0x10]
	lsl	r2, r2, #0x4
	mov	r1, #0xf0
	lsl	r1, r1, #0x14
	and	r1, r1, r0
	lsr	r1, r1, #0x18
	orr	r2, r2, r1
	str	r2, [r3, #0x10]
	mov	r1, #0x7
	add	r4, r3, #0
	add	r3, r3, #0x1c
.L280:
	add	r2, r1, r3
	sub	r1, r1, #0x1
	add	r0, r1, r3
	ldrb	r0, [r0]
	strb	r0, [r2]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0
	bne	.L280	@cond_branch
	mov	r0, #0x1
	strb	r0, [r4, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L283:
	.align	2, 0
.L282:
	.word	gPlayerAvatar
.Lfe35:
	.size	 Bike_UpdateABStartSelectHistory,.Lfe35-Bike_UpdateABStartSelectHistory
	.align	2, 0
	.type	 Bike_DPadToDirection,function
	.thumb_func
Bike_DPadToDirection:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r2, r1, #0
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L285	@cond_branch
	mov	r0, #0x2
	b	.L289
.L285:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L286	@cond_branch
	mov	r0, #0x1
	b	.L289
.L286:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L287	@cond_branch
	mov	r0, #0x3
	b	.L289
.L287:
	mov	r0, #0x10
	and	r2, r2, r0
	cmp	r2, #0
	bne	.L288	@cond_branch
	mov	r0, #0x0
	b	.L289
.L288:
	mov	r0, #0x4
.L289:
	pop	{r1}
	bx	r1
.Lfe36:
	.size	 Bike_DPadToDirection,.Lfe36-Bike_DPadToDirection
	.align	2, 0
	.type	 GetBikeCollision,function
	.thumb_func
GetBikeCollision:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L291
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L291+0x4
	add	r4, r4, r0
	ldrh	r1, [r4, #0x10]
	add	r0, sp, #0x4
	strh	r1, [r0]
	ldrh	r0, [r4, #0x12]
	mov	r5, sp
	add	r5, r5, #0x6
	strh	r0, [r5]
	add	r0, r6, #0
	add	r1, sp, #0x4
	add	r2, r5, #0
	bl	MoveCoords
	add	r0, sp, #0x4
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, sp, #0x4
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r3, #0x0
	ldrsh	r2, [r5, r3]
	str	r0, [sp]
	add	r0, r4, #0
	add	r3, r6, #0
	bl	GetBikeCollisionAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L292:
	.align	2, 0
.L291:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe37:
	.size	 GetBikeCollision,.Lfe37-GetBikeCollision
	.align	2, 0
	.type	 GetBikeCollisionAt,function
	.thumb_func
GetBikeCollisionAt:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0x10]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r5, r4, #0
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	str	r5, [sp]
	bl	CheckForObjectEventCollision
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x4
	bhi	.L296	@cond_branch
	cmp	r4, #0
	bne	.L298	@cond_branch
	add	r0, r5, #0
	bl	IsRunningDisallowedByMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L295	@cond_branch
	mov	r4, #0x2
.L295:
	cmp	r4, #0
	beq	.L296	@cond_branch
.L298:
	bl	Bike_TryAdvanceCyclingRoadCollisions
.L296:
	add	r0, r4, #0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 GetBikeCollisionAt,.Lfe38-GetBikeCollisionAt
	.align	2, 0
	.globl	RS_IsRunningDisallowed
	.type	 RS_IsRunningDisallowed,function
	.thumb_func
RS_IsRunningDisallowed:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsRunningDisallowedByMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L301	@cond_branch
	ldr	r0, .L304
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x8
	bne	.L300	@cond_branch
.L301:
	mov	r0, #0x1
	b	.L303
.L305:
	.align	2, 0
.L304:
	.word	gMapHeader
.L300:
	mov	r0, #0x0
.L303:
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 RS_IsRunningDisallowed,.Lfe39-RS_IsRunningDisallowed
	.align	2, 0
	.type	 IsRunningDisallowedByMetatile,function
	.thumb_func
IsRunningDisallowedByMetatile:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsRunningDisallowed
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L310	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsFortreeBridge
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L308	@cond_branch
	bl	PlayerGetZCoord
	mov	r1, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L308	@cond_branch
.L310:
	mov	r0, #0x1
	b	.L309
.L308:
	mov	r0, #0x0
.L309:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 IsRunningDisallowedByMetatile,.Lfe40-IsRunningDisallowedByMetatile
	.align	2, 0
	.type	 Bike_TryAdvanceCyclingRoadCollisions,function
	.thumb_func
Bike_TryAdvanceCyclingRoadCollisions:
	push	{lr}
	ldr	r0, .L313
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L312	@cond_branch
	ldr	r1, .L313+0x4
	ldrb	r0, [r1]
	cmp	r0, #0x63
	bhi	.L312	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r1]
.L312:
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	gBikeCyclingChallenge
	.word	gBikeCollisions
.Lfe41:
	.size	 Bike_TryAdvanceCyclingRoadCollisions,.Lfe41-Bike_TryAdvanceCyclingRoadCollisions
	.align	2, 0
	.type	 CanBikeFaceDirOnMetatile,function
	.thumb_func
CanBikeFaceDirOnMetatile:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r5, r4, #0
	mov	r1, #0xfd
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L316	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsIsolatedVerticalRail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L321	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsVerticalRail
	b	.L323
.L316:
	add	r0, r5, #0
	bl	MetatileBehavior_IsIsolatedHorizontalRail
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L321	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsHorizontalRail
.L323:
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L319	@cond_branch
.L321:
	mov	r0, #0x0
	b	.L322
.L319:
	mov	r0, #0x1
.L322:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 CanBikeFaceDirOnMetatile,.Lfe42-CanBikeFaceDirOnMetatile
	.align	2, 0
	.type	 WillPlayerCollideWithCollision,function
	.thumb_func
WillPlayerCollideWithCollision:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	mov	r3, #0xff
	lsl	r3, r3, #0x18
	add	r1, r1, r3
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	bhi	.L325	@cond_branch
	cmp	r0, #0xa
	beq	.L330	@cond_branch
	cmp	r0, #0xc
	bne	.L328	@cond_branch
	b	.L330
.L325:
	cmp	r2, #0xb
	beq	.L330	@cond_branch
	cmp	r2, #0xd
	bne	.L328	@cond_branch
.L330:
	mov	r0, #0x0
	b	.L331
.L328:
	mov	r0, #0x1
.L331:
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 WillPlayerCollideWithCollision,.Lfe43-WillPlayerCollideWithCollision
	.align	2, 0
	.globl	IsBikingDisallowedByPlayer
	.type	 IsBikingDisallowedByPlayer,function
	.thumb_func
IsBikingDisallowedByPlayer:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L336
	ldrb	r1, [r0]
	mov	r0, #0x18
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L333	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsRunningDisallowedByMetatile
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L333	@cond_branch
	mov	r0, #0x0
	b	.L335
.L337:
	.align	2, 0
.L336:
	.word	gPlayerAvatar
.L333:
	mov	r0, #0x1
.L335:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 IsBikingDisallowedByPlayer,.Lfe44-IsBikingDisallowedByPlayer
	.align	2, 0
	.globl	player_should_look_direction_be_enforced_upon_movement
	.type	 player_should_look_direction_be_enforced_upon_movement,function
	.thumb_func
player_should_look_direction_be_enforced_upon_movement:
	push	{lr}
	mov	r0, #0x4
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L339	@cond_branch
	ldr	r2, .L342
	ldr	r0, .L342+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x1e]
	bl	MetatileBehavior_IsBumpySlope
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L339	@cond_branch
	mov	r0, #0x0
	b	.L341
.L343:
	.align	2, 0
.L342:
	.word	gObjectEvents
	.word	gPlayerAvatar
.L339:
	mov	r0, #0x1
.L341:
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 player_should_look_direction_be_enforced_upon_movement,.Lfe45-player_should_look_direction_be_enforced_upon_movement
	.align	2, 0
	.globl	GetOnOffBike
	.type	 GetOnOffBike,function
	.thumb_func
GetOnOffBike:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L347
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r0, .L347+0x4
	ldrb	r1, [r0]
	mov	r0, #0x6
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L345	@cond_branch
	mov	r0, #0x1
	bl	SetPlayerAvatarTransitionFlags
	bl	Overworld_ClearSavedMusic
	bl	Overworld_PlaySpecialMapMusic
	b	.L346
.L348:
	.align	2, 0
.L347:
	.word	gUnusedBikeCameraAheadPanback
	.word	gPlayerAvatar
.L345:
	add	r0, r2, #0
	bl	SetPlayerAvatarTransitionFlags
	ldr	r4, .L349
	add	r0, r4, #0
	bl	Overworld_SetSavedMusic
	add	r0, r4, #0
	bl	Overworld_ChangeMusicTo
.L346:
	pop	{r4}
	pop	{r0}
	bx	r0
.L350:
	.align	2, 0
.L349:
	.word	0x193
.Lfe46:
	.size	 GetOnOffBike,.Lfe46-GetOnOffBike
	.align	2, 0
	.globl	BikeClearState
	.type	 BikeClearState,function
	.thumb_func
BikeClearState:
	push	{lr}
	ldr	r2, .L362
	mov	r3, #0x0
	strb	r3, [r2, #0x8]
	strb	r3, [r2, #0x9]
	strb	r3, [r2, #0xa]
	strb	r3, [r2, #0xb]
	str	r0, [r2, #0xc]
	str	r1, [r2, #0x10]
	mov	r1, #0x0
	add	r2, r2, #0x14
.L355:
	add	r0, r1, r2
	strb	r3, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x7
	bls	.L355	@cond_branch
	mov	r1, #0x0
	ldr	r3, .L362+0x4
	mov	r2, #0x0
.L360:
	add	r0, r1, r3
	strb	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x7
	bls	.L360	@cond_branch
	pop	{r0}
	bx	r0
.L363:
	.align	2, 0
.L362:
	.word	gPlayerAvatar
	.word	gPlayerAvatar+0x1c
.Lfe47:
	.size	 BikeClearState,.Lfe47-BikeClearState
	.align	2, 0
	.globl	Bike_UpdateBikeCounterSpeed
	.type	 Bike_UpdateBikeCounterSpeed,function
	.thumb_func
Bike_UpdateBikeCounterSpeed:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L365
	strb	r0, [r2, #0xa]
	lsr	r1, r0, #0x1
	add	r0, r0, r1
	strb	r0, [r2, #0xb]
	bx	lr
.L366:
	.align	2, 0
.L365:
	.word	gPlayerAvatar
.Lfe48:
	.size	 Bike_UpdateBikeCounterSpeed,.Lfe48-Bike_UpdateBikeCounterSpeed
	.align	2, 0
	.type	 Bike_SetBikeStill,function
	.thumb_func
Bike_SetBikeStill:
	ldr	r1, .L368
	mov	r0, #0x0
	strb	r0, [r1, #0xa]
	strb	r0, [r1, #0xb]
	bx	lr
.L369:
	.align	2, 0
.L368:
	.word	gPlayerAvatar
.Lfe49:
	.size	 Bike_SetBikeStill,.Lfe49-Bike_SetBikeStill
	.align	2, 0
	.globl	GetPlayerSpeed
	.type	 GetPlayerSpeed,function
	.thumb_func
GetPlayerSpeed:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r1, .L378
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	ldr	r2, .L378+0x4
	ldrb	r1, [r2]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L371	@cond_branch
	ldrb	r0, [r2, #0xa]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	b	.L377
.L379:
	.align	2, 0
.L378:
	.word	sMachBikeSpeeds
	.word	gPlayerAvatar
.L371:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L373	@cond_branch
	mov	r0, #0x3
	b	.L377
.L373:
	mov	r0, #0x88
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L375	@cond_branch
	mov	r0, #0x1
	b	.L377
.L375:
	mov	r0, #0x2
.L377:
	add	sp, sp, #0x8
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 GetPlayerSpeed,.Lfe50-GetPlayerSpeed
	.align	2, 0
	.globl	Bike_HandleBumpySlopeJump
	.type	 Bike_HandleBumpySlopeJump,function
	.thumb_func
Bike_HandleBumpySlopeJump:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L383
	ldrb	r1, [r5]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L381	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsBumpySlope
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L381	@cond_branch
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	bl	GetPlayerMovementDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PlayerUseAcroBikeOnBumpySlope
.L381:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L384:
	.align	2, 0
.L383:
	.word	gPlayerAvatar
.Lfe51:
	.size	 Bike_HandleBumpySlopeJump,.Lfe51-Bike_HandleBumpySlopeJump
	.align	2, 0
	.globl	IsRunningDisallowed
	.type	 IsRunningDisallowed,function
	.thumb_func
IsRunningDisallowed:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsRunningDisallowedByMetatile
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L386	@cond_branch
	mov	r0, #0x0
	b	.L388
.L386:
	mov	r0, #0x1
.L388:
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 IsRunningDisallowed,.Lfe52-IsRunningDisallowed
.text
	.align	2, 0

